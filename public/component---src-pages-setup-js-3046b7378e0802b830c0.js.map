{"version":3,"sources":["webpack:///./src/pages/setup.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js","webpack:///./src/components/setup/SetupBox.js","webpack:///./src/components/setup/index.js"],"names":["SetupPage","_ref","data","location","imageUrl","getMetaImageUrls","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","_components_common_meta__WEBPACK_IMPORTED_MODULE_6__","type","title","description","image","_components_common_layout__WEBPACK_IMPORTED_MODULE_4__","mainClass","bodyClass","className","Spirit","page","xl","sectionHeading","sectionSubHeading","_components_setup__WEBPACK_IMPORTED_MODULE_5__","href","icon","iconClass","headingClass","to","small","propTypes","PropTypes","shape","site","siteMetadata","siteUrl","string","isRequired","pathname","pageQuery","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","name","sameAsArray","length","join","profile_image","defaultProps","bool","ImageMeta","react_default","Helmet_default","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","ghostPost","author","primary_author","publicTags","map","tagsHelper","visibility","fn","tag","primaryTag","slug","seoImage","feature_image","meta_title","meta_description","excerpt","rel","og_title","og_description","published_at","updated_at","keyword","i","key","twitter_title","twitter_description","meta_ImageMeta","object","tags","arrayOf","ArticleMetaMD","post","markdownRemark","fm","frontmatter","publishedAtISODate","date","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","_ref2","url","resolve","meta_ArticleMetaGhost","meta_ArticleMetaMD","meta_WebsiteMeta","SITEURL","process","imageUrls","faq","integrations","tutorials","default","section","proptypes","__webpack_require__","d","__webpack_exports__","meta_MetaData","meta_getMetaImageUrls","SetupBox","children","common","radius","h4","node","setup_SetupBox"],"mappings":"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","file":"component---src-pages-setup-js-3046b7378e0802b830c0.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { Spirit } from '../styles/spirit-styles'\nimport { Layout } from '../components/common/layout'\nimport { SetupBox } from '../components/setup'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\n\nconst SetupPage = ({ data, location }) => {\n    // Add meta title and description for this page here to overwrite the site meta data as set in the config\n    const title = `How To Install Ghost: Setup & Configuration - Open Source Publishing`\n    const description = `All the tools you need to get started with Ghost 👉Self-hosted install & setup, local install guide for development, contribution guidelines & premium hosted services!`\n    const imageUrl = getMetaImageUrls()\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title || data.site.siteMetadata.title}\n                description={description || data.site.siteMetadata.description}\n                image={imageUrl}\n            />\n            <Layout mainClass=\"bg-whitegrey-l2 pb-vw3\" bodyClass=\"bg-white\">\n                <section className=\"bg-setup\">\n                    <div className={`${Spirit.page.xl} tc-ns pt-vw6 pt-vw5-ns pb-vw5 white`}>\n                        <h1 className={`${Spirit.sectionHeading} gh-integration-header-shadow`}>Setup Guide</h1>\n                        <p className={Spirit.sectionSubHeading}>\n                            The easiest way to get started is to use <strong>Ghost(Pro)</strong>. If you prefer to self-host, we strongly recommend an Ubuntu server with at least 1GB of memory to run Ghost.\n                        </p>\n                    </div>\n                </section>\n\n                <div className={`${Spirit.page.xl} mt-vw3`}>\n                    <section className=\"grid-12 gutter-row-20 gutter-20-ns gutter-36-l\">\n                        <SetupBox href=\"https://ghost.org/pricing/\" title=\"Ghost(Pro)\" icon=\"ghost-pro-logo\" iconClass=\"w9 h9\" headingClass=\"mt2\">\n                            <strong>Fully managed PaaS</strong> with 1-click deployment, worldwide CDN, backups, upgrades & security\n                        </SetupBox>\n\n                        <SetupBox to=\"/install/ubuntu/\" title=\"Ubuntu\" icon=\"ubuntu-logo\" iconClass=\"w8 h8\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                A full guide for installing Ghost on Ubuntu <strong>16.04 LTS</strong> and <strong>18.04 LTS</strong> <em>(Recommended)</em>\n                            </p>\n                        </SetupBox>\n\n                        <SetupBox href=\"https://hub.docker.com/_/ghost/\" title=\"Docker\" icon=\"docker-logo\" iconClass=\"w10 h10\" headingClass=\"mt1\">\n                            <p className={`${Spirit.small} mw70`}>\n                                <strong>Unofficial community package</strong> for running Ghost inside a Docker container\n                            </p>\n                        </SetupBox>\n\n                        <SetupBox to=\"/install/local/\" title=\"Local install\" icon=\"terminal\" iconClass=\"fill-midlightgrey w8 h8\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                <strong>Fast-track</strong> local install for running Ghost on your computer or doing theme development\n                            </p>\n                        </SetupBox>\n\n                        <SetupBox to=\"/install/source/\" title=\"Install from Source\" icon=\"github-outline\" iconClass=\"fill-darkgrey w8 h8\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                <strong>Advanced developer guide</strong> for working directly on Ghost Core and Ghost Admin\n                            </p>\n                        </SetupBox>\n                    </section>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nSetupPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default SetupPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://ghost.org/`,\n            `https://twitter.com/ghost/`,\n            `https://www.facebook.com/ghost/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Ghost`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { ghostPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(ghostPost.primary_author, fetchAuthorData)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && ghostPost.feature_image) ? ghostPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta property=\"og:type\" content=\"article\" />\n                <meta property=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta property=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.ghost.org/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            published_at: PropTypes.string.isRequired,\n            updated_at: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport ImageMeta from './ImageMeta'\nimport { getMetaImageUrls } from '.'\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta property=\"og:type\" content=\"article\" />\n                <meta property=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta property=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Ghost\",\n                            \"sameAs\": [\n                                \"https://ghost.org/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/tryghost/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Ghost\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://blog.ghost.org/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nimport ImageMeta from './ImageMeta'\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={image} />\n        </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.ghost.org/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n    const { ghostPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (ghostPost) {\n            return (\n                <ArticleMetaGhost\n                    data={data}\n                    canonical={canonical}\n                    fetchAuthorData={fetchAuthorData}\n                    title={title}\n                    image={image}\n                    overwriteDefaultImage={overwriteDefaultImage}\n                />\n            )\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        ghostPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types'\nimport url from 'url'\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.ghost.org`\n\nconst imageUrls = {\n    faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/Ghost-Docs.jpg`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Box, Icon } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst SetupBox = ({ to, href, icon, iconClass, headingClass, title, children }) => (\n    <Box\n        to={to}\n        href={href}\n        className=\"col-12 col-6-ns col-4-l pa8 tdn middarkgrey setup-box-min-height\"\n        radius=\"4\"\n    >\n        <Icon name={icon} className={iconClass} />\n        <h4 className={`${Spirit.h4} darkgrey ${headingClass}`}>{title}</h4>\n        <div className={`${Spirit.small} mt1 midgrey`}>{children}</div>\n    </Box>\n)\n\nSetupBox.propTypes = {\n    children: PropTypes.node.isRequired,\n    icon: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    to: PropTypes.string,\n    href: PropTypes.string,\n    iconClass: PropTypes.string,\n    headingClass: PropTypes.string,\n}\n\nexport default SetupBox\n","export { default as SetupBox } from './SetupBox'\n"],"sourceRoot":""}