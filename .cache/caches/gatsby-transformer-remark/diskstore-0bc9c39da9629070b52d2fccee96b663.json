{"expireTime":9007200813389863000,"key":"transformer-remark-markdown-html-ast-016ff2f6eb707f548b8389d72f2be59f-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#basic-operations","aria-label":"basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Basic Operations","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":20,"offset":19}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initilize-tensors"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initilize-tensors","aria-label":"initilize tensors permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"initilize tensors","position":{"start":{"line":3,"column":5,"offset":25},"end":{"line":3,"column":22,"offset":42}}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":23,"offset":43}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(10,10) array with zero elements","position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}}],"position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Using python state\nx = tf.zeros([10, 10])\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":79},"end":{"line":13,"column":4,"offset":238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensors-basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensors-basic-operations","aria-label":"tensors basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensors basic operations","position":{"start":{"line":15,"column":5,"offset":244},"end":{"line":15,"column":29,"offset":268}}}],"position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":15,"column":30,"offset":269}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import tensorflow as tf\nimport numpy \n\ntf.enable_eager_execution\n\nprint(tf.add(1, 2))\nprint(tf.add([1, 2], [3, 4]))\nprint(tf.square(5))\nprint(tf.reduce_sum([1, 2, 3]))\nprint(tf.encode_base64(&quot;hello world&quot;))\n\n# Operator overloading is also supported\nprint(tf.square(2) + tf.square(3))\n\nx = tf.matmul([[1]], [[2, 3]])\nprint(x.shape)\nprint(x.dtype)\n\nndarray = np.ones([3, 3])\n\nprint(&quot;TensorFlow operations convert numpy arrays to Tensors automatically&quot;)\ntensor = tf.multiply(ndarray, 42)\nprint(tensor)\n\nprint(&quot;And NumPy operations convert Tensors to numpy arrays automatically&quot;)\nprint(np.add(tensor, 1))\n\nprint(&quot;The .numpy() method explicitly converts a Tensor to a numpy array&quot;)\nprint(tensor.numpy())</code></pre></div>","position":{"start":{"line":17,"column":1,"offset":271},"end":{"line":48,"column":4,"offset":978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensors-basic-operations-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensors-basic-operations-1","aria-label":"tensors basic operations 1 permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensors basic operations","position":{"start":{"line":50,"column":5,"offset":984},"end":{"line":50,"column":29,"offset":1008}}}],"position":{"start":{"line":50,"column":1,"offset":980},"end":{"line":50,"column":30,"offset":1009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"a-small-script-to-show-a-custom-training-using"},"children":[{"type":"element","tagName":"a","properties":{"href":"#a-small-script-to-show-a-custom-training-using","aria-label":"a small script to show a custom training using permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"A small script to show a custom training using","position":{"start":{"line":58,"column":5,"offset":1021},"end":{"line":58,"column":51,"offset":1067}}}],"position":{"start":{"line":58,"column":1,"offset":1017},"end":{"line":58,"column":52,"offset":1068}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*class,  assert, plot","position":{"start":{"line":60,"column":1,"offset":1070},"end":{"line":60,"column":22,"offset":1091}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":60,"column":22,"offset":1091},"end":{"line":61,"column":1,"offset":1094}}},{"type":"text","value":"\n"},{"type":"text","value":"*variable, gradient, and loss","position":{"start":{"line":61,"column":1,"offset":1094},"end":{"line":61,"column":30,"offset":1123}}}],"position":{"start":{"line":60,"column":1,"offset":1070},"end":{"line":61,"column":30,"offset":1123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"# Custom training: basics\n\"\"\"","position":{"start":{"line":64,"column":1,"offset":1126},"end":{"line":65,"column":4,"offset":1158}}}],"position":{"start":{"line":64,"column":1,"offset":1126},"end":{"line":65,"column":4,"offset":1158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from ","position":{"start":{"line":67,"column":1,"offset":1160},"end":{"line":67,"column":6,"offset":1165}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"future","position":{"start":{"line":67,"column":8,"offset":1167},"end":{"line":67,"column":14,"offset":1173}}}],"position":{"start":{"line":67,"column":6,"offset":1165},"end":{"line":67,"column":16,"offset":1175}}},{"type":"text","value":" import absolute","position":{"start":{"line":67,"column":16,"offset":1175},"end":{"line":67,"column":32,"offset":1191}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"import, division, print","position":{"start":{"line":67,"column":33,"offset":1192},"end":{"line":67,"column":56,"offset":1215}}}],"position":{"start":{"line":67,"column":32,"offset":1191},"end":{"line":67,"column":57,"offset":1216}}},{"type":"text","value":"function, unicode_literals","position":{"start":{"line":67,"column":57,"offset":1216},"end":{"line":67,"column":83,"offset":1242}}}],"position":{"start":{"line":67,"column":1,"offset":1160},"end":{"line":67,"column":83,"offset":1242}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import tensorflow as tf","position":{"start":{"line":69,"column":1,"offset":1244},"end":{"line":69,"column":24,"offset":1267}}}],"position":{"start":{"line":69,"column":1,"offset":1244},"end":{"line":69,"column":24,"offset":1267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"tf.enable","position":{"start":{"line":71,"column":1,"offset":1269},"end":{"line":71,"column":10,"offset":1278}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"eager","position":{"start":{"line":71,"column":11,"offset":1279},"end":{"line":71,"column":16,"offset":1284}}}],"position":{"start":{"line":71,"column":10,"offset":1278},"end":{"line":71,"column":17,"offset":1285}}},{"type":"text","value":"execution()","position":{"start":{"line":71,"column":17,"offset":1285},"end":{"line":71,"column":28,"offset":1296}}}],"position":{"start":{"line":71,"column":1,"offset":1269},"end":{"line":71,"column":28,"offset":1296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Variables","position":{"start":{"line":73,"column":1,"offset":1298},"end":{"line":73,"column":16,"offset":1313}}}],"position":{"start":{"line":73,"column":1,"offset":1298},"end":{"line":73,"column":16,"offset":1313}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Tensors in TensorFlow are immutable stateless objects. Machine learning models, however, need to have changing state: as your model trains, the same code to compute predictions should behave differently over time (hopefully with a lower loss!). To represent this state which needs to change over the course of your computation, you can choose to rely on the fact that Python is a stateful programming language:\n\"\"\"","position":{"start":{"line":75,"column":1,"offset":1315},"end":{"line":76,"column":4,"offset":1729}}}],"position":{"start":{"line":75,"column":1,"offset":1315},"end":{"line":76,"column":4,"offset":1729}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"using-python-state"},"children":[{"type":"element","tagName":"a","properties":{"href":"#using-python-state","aria-label":"using python state permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Using python state","position":{"start":{"line":78,"column":3,"offset":1733},"end":{"line":78,"column":21,"offset":1751}}}],"position":{"start":{"line":78,"column":1,"offset":1731},"end":{"line":78,"column":21,"offset":1751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x = tf.zeros(","position":{"start":{"line":79,"column":1,"offset":1752},"end":{"line":79,"column":14,"offset":1765}}},{"type":"text","value":"[10, 10]","position":{"start":{"line":79,"column":15,"offset":1766},"end":{"line":79,"column":21,"offset":1772}}},{"type":"text","value":")\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n# value of x\nprint(x)","position":{"start":{"line":79,"column":22,"offset":1773},"end":{"line":82,"column":9,"offset":1882}}}],"position":{"start":{"line":79,"column":1,"offset":1752},"end":{"line":82,"column":9,"offset":1882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"TensorFlow, however, has stateful operations built in, and these are often more pleasant to use than low-level Python representations of your state. To represent weights in a model, for example, it's often convenient and efficient to use TensorFlow variables.","position":{"start":{"line":84,"column":1,"offset":1884},"end":{"line":84,"column":263,"offset":2146}}}],"position":{"start":{"line":84,"column":1,"offset":1884},"end":{"line":84,"column":263,"offset":2146}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A Variable is an object which stores a value and, when used in a TensorFlow computation, will implicitly read from this stored value. There are operations (","position":{"start":{"line":86,"column":1,"offset":2148},"end":{"line":86,"column":157,"offset":2304}}},{"type":"raw","value":"<code class=\"language-text\">tf.assign_sub</code>","position":{"start":{"line":86,"column":157,"offset":2304},"end":{"line":86,"column":172,"offset":2319}}},{"type":"text","value":", ","position":{"start":{"line":86,"column":172,"offset":2319},"end":{"line":86,"column":174,"offset":2321}}},{"type":"raw","value":"<code class=\"language-text\">tf.scatter_update</code>","position":{"start":{"line":86,"column":174,"offset":2321},"end":{"line":86,"column":193,"offset":2340}}},{"type":"text","value":", etc) which manipulate the value stored in a TensorFlow variable.\n\"\"\"","position":{"start":{"line":86,"column":193,"offset":2340},"end":{"line":87,"column":4,"offset":2410}}}],"position":{"start":{"line":86,"column":1,"offset":2148},"end":{"line":87,"column":4,"offset":2410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v = tf.Variable(1.0)\nassert v.numpy() == 1.0","position":{"start":{"line":89,"column":1,"offset":2412},"end":{"line":90,"column":24,"offset":2456}}}],"position":{"start":{"line":89,"column":1,"offset":2412},"end":{"line":90,"column":24,"offset":2456}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"re-assign-the-value"},"children":[{"type":"element","tagName":"a","properties":{"href":"#re-assign-the-value","aria-label":"re assign the value permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Re-assign the value","position":{"start":{"line":92,"column":3,"offset":2460},"end":{"line":92,"column":22,"offset":2479}}}],"position":{"start":{"line":92,"column":1,"offset":2458},"end":{"line":92,"column":22,"offset":2479}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(3.0)\nassert v.numpy() == 3.0","position":{"start":{"line":93,"column":1,"offset":2480},"end":{"line":94,"column":24,"offset":2517}}}],"position":{"start":{"line":93,"column":1,"offset":2480},"end":{"line":94,"column":24,"offset":2517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"},"children":[{"type":"element","tagName":"a","properties":{"href":"#use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","aria-label":"use v in a tensorflow operation like tfsquare and reassign permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Use ","position":{"start":{"line":96,"column":3,"offset":2521},"end":{"line":96,"column":7,"offset":2525}}},{"type":"raw","value":"<code class=\"language-text\">v</code>","position":{"start":{"line":96,"column":7,"offset":2525},"end":{"line":96,"column":10,"offset":2528}}},{"type":"text","value":" in a TensorFlow operation like tf.square() and reassign","position":{"start":{"line":96,"column":10,"offset":2528},"end":{"line":96,"column":66,"offset":2584}}}],"position":{"start":{"line":96,"column":1,"offset":2519},"end":{"line":96,"column":66,"offset":2584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(tf.square(v))\nassert v.numpy() == 9.0","position":{"start":{"line":97,"column":1,"offset":2585},"end":{"line":98,"column":24,"offset":2631}}}],"position":{"start":{"line":97,"column":1,"offset":2585},"end":{"line":98,"column":24,"offset":2631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Computations using Variables are automatically traced when computing gradients. For Variables representing embeddings TensorFlow will do sparse updates by default, which are more computation and memory efficient.","position":{"start":{"line":100,"column":1,"offset":2633},"end":{"line":100,"column":216,"offset":2848}}}],"position":{"start":{"line":100,"column":1,"offset":2633},"end":{"line":100,"column":216,"offset":2848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using Variables is also a way to quickly let a reader of your code know that this piece of state is mutable.","position":{"start":{"line":102,"column":1,"offset":2850},"end":{"line":102,"column":109,"offset":2958}}}],"position":{"start":{"line":102,"column":1,"offset":2850},"end":{"line":102,"column":109,"offset":2958}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"example-fitting-a-linear-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#example-fitting-a-linear-model","aria-label":"example fitting a linear model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Example: Fitting a linear model","position":{"start":{"line":104,"column":4,"offset":2963},"end":{"line":104,"column":35,"offset":2994}}}],"position":{"start":{"line":104,"column":1,"offset":2960},"end":{"line":104,"column":35,"offset":2994}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's now put the few concepts we have so far ---","position":{"start":{"line":106,"column":1,"offset":2996},"end":{"line":106,"column":50,"offset":3045}}},{"type":"raw","value":"<code class=\"language-text\">Tensor</code>","position":{"start":{"line":106,"column":50,"offset":3045},"end":{"line":106,"column":58,"offset":3053}}},{"type":"text","value":", ","position":{"start":{"line":106,"column":58,"offset":3053},"end":{"line":106,"column":60,"offset":3055}}},{"type":"raw","value":"<code class=\"language-text\">GradientTape</code>","position":{"start":{"line":106,"column":60,"offset":3055},"end":{"line":106,"column":74,"offset":3069}}},{"type":"text","value":", ","position":{"start":{"line":106,"column":74,"offset":3069},"end":{"line":106,"column":76,"offset":3071}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":106,"column":76,"offset":3071},"end":{"line":106,"column":86,"offset":3081}}},{"type":"text","value":" --- to build and train a simple model. This typically involves a few steps:","position":{"start":{"line":106,"column":86,"offset":3081},"end":{"line":106,"column":162,"offset":3157}}}],"position":{"start":{"line":106,"column":1,"offset":2996},"end":{"line":106,"column":162,"offset":3157}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define the model.","position":{"start":{"line":108,"column":4,"offset":3162},"end":{"line":108,"column":21,"offset":3179}}}],"position":{"start":{"line":108,"column":1,"offset":3159},"end":{"line":108,"column":21,"offset":3179}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define a loss function.","position":{"start":{"line":109,"column":4,"offset":3183},"end":{"line":109,"column":27,"offset":3206}}}],"position":{"start":{"line":109,"column":1,"offset":3180},"end":{"line":109,"column":27,"offset":3206}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Obtain training data.","position":{"start":{"line":110,"column":4,"offset":3210},"end":{"line":110,"column":25,"offset":3231}}}],"position":{"start":{"line":110,"column":1,"offset":3207},"end":{"line":110,"column":25,"offset":3231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Run through the training data and use an \"optimizer\" to adjust the variables to fit the data.","position":{"start":{"line":111,"column":4,"offset":3235},"end":{"line":111,"column":97,"offset":3328}}}],"position":{"start":{"line":111,"column":1,"offset":3232},"end":{"line":111,"column":97,"offset":3328}}},{"type":"text","value":"\n"}],"position":{"start":{"line":108,"column":1,"offset":3159},"end":{"line":111,"column":97,"offset":3328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial, we'll walk through a trivial example of a simple linear model: ","position":{"start":{"line":113,"column":1,"offset":3330},"end":{"line":113,"column":82,"offset":3411}}},{"type":"raw","value":"<code class=\"language-text\">f(x) = x * W + b</code>","position":{"start":{"line":113,"column":82,"offset":3411},"end":{"line":113,"column":100,"offset":3429}}},{"type":"text","value":", which has two variables - ","position":{"start":{"line":113,"column":100,"offset":3429},"end":{"line":113,"column":128,"offset":3457}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":113,"column":128,"offset":3457},"end":{"line":113,"column":131,"offset":3460}}},{"type":"text","value":" and ","position":{"start":{"line":113,"column":131,"offset":3460},"end":{"line":113,"column":136,"offset":3465}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":113,"column":136,"offset":3465},"end":{"line":113,"column":139,"offset":3468}}},{"type":"text","value":". Furthermore, we'll synthesize data such that a well trained model would have ","position":{"start":{"line":113,"column":139,"offset":3468},"end":{"line":113,"column":218,"offset":3547}}},{"type":"raw","value":"<code class=\"language-text\">W = 3.0</code>","position":{"start":{"line":113,"column":218,"offset":3547},"end":{"line":113,"column":227,"offset":3556}}},{"type":"text","value":" and ","position":{"start":{"line":113,"column":227,"offset":3556},"end":{"line":113,"column":232,"offset":3561}}},{"type":"raw","value":"<code class=\"language-text\">b = 2.0</code>","position":{"start":{"line":113,"column":232,"offset":3561},"end":{"line":113,"column":241,"offset":3570}}},{"type":"text","value":".","position":{"start":{"line":113,"column":241,"offset":3570},"end":{"line":113,"column":242,"offset":3571}}}],"position":{"start":{"line":113,"column":1,"offset":3330},"end":{"line":113,"column":242,"offset":3571}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"define-the-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#define-the-model","aria-label":"define the model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Define the model","position":{"start":{"line":115,"column":5,"offset":3577},"end":{"line":115,"column":21,"offset":3593}}}],"position":{"start":{"line":115,"column":1,"offset":3573},"end":{"line":115,"column":21,"offset":3593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's define a simple class to encapsulate the variables and the computation.\n\"\"\"","position":{"start":{"line":117,"column":1,"offset":3595},"end":{"line":118,"column":4,"offset":3676}}}],"position":{"start":{"line":117,"column":1,"offset":3595},"end":{"line":118,"column":4,"offset":3676}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"class Model(object):\ndef ","position":{"start":{"line":120,"column":1,"offset":3678},"end":{"line":121,"column":7,"offset":3705}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"init","position":{"start":{"line":121,"column":9,"offset":3707},"end":{"line":121,"column":13,"offset":3711}}}],"position":{"start":{"line":121,"column":7,"offset":3705},"end":{"line":121,"column":15,"offset":3713}}},{"type":"text","value":"(self):\n# Initialize variable to (5.0, 0.0)\n# In practice, these should be initialized to random values.\nself.W = tf.Variable(5.0)\nself.b = tf.Variable(0.0)","position":{"start":{"line":121,"column":15,"offset":3713},"end":{"line":125,"column":30,"offset":3885}}}],"position":{"start":{"line":120,"column":1,"offset":3678},"end":{"line":125,"column":30,"offset":3885}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  def ","position":{"start":{"line":127,"column":1,"offset":3887},"end":{"line":127,"column":7,"offset":3893}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"call","position":{"start":{"line":127,"column":9,"offset":3895},"end":{"line":127,"column":13,"offset":3899}}}],"position":{"start":{"line":127,"column":7,"offset":3893},"end":{"line":127,"column":15,"offset":3901}}},{"type":"text","value":"(self, x):\nreturn self.W * x + self.b","position":{"start":{"line":127,"column":15,"offset":3901},"end":{"line":128,"column":31,"offset":3942}}}],"position":{"start":{"line":127,"column":1,"offset":3887},"end":{"line":128,"column":31,"offset":3942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":130,"column":1,"offset":3944},"end":{"line":130,"column":16,"offset":3959}}}],"position":{"start":{"line":130,"column":1,"offset":3944},"end":{"line":130,"column":16,"offset":3959}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"assert model(3.0).numpy() == 15.0","position":{"start":{"line":132,"column":1,"offset":3961},"end":{"line":132,"column":34,"offset":3994}}}],"position":{"start":{"line":132,"column":1,"offset":3961},"end":{"line":132,"column":34,"offset":3994}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a loss function","position":{"start":{"line":134,"column":1,"offset":3996},"end":{"line":134,"column":30,"offset":4025}}}],"position":{"start":{"line":134,"column":1,"offset":3996},"end":{"line":134,"column":30,"offset":4025}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A loss function measures how well the output of a model for a given input matches the desired output. Let's use the standard L2 loss.\n\"\"\"","position":{"start":{"line":136,"column":1,"offset":4027},"end":{"line":137,"column":4,"offset":4164}}}],"position":{"start":{"line":136,"column":1,"offset":4027},"end":{"line":137,"column":4,"offset":4164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def loss(predicted","position":{"start":{"line":139,"column":1,"offset":4166},"end":{"line":139,"column":19,"offset":4184}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"y, desired","position":{"start":{"line":139,"column":20,"offset":4185},"end":{"line":139,"column":30,"offset":4195}}}],"position":{"start":{"line":139,"column":19,"offset":4184},"end":{"line":139,"column":31,"offset":4196}}},{"type":"text","value":"y):\nreturn tf.reduce","position":{"start":{"line":139,"column":31,"offset":4196},"end":{"line":140,"column":19,"offset":4218}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"mean(tf.square(predicted","position":{"start":{"line":140,"column":20,"offset":4219},"end":{"line":140,"column":44,"offset":4243}}}],"position":{"start":{"line":140,"column":19,"offset":4218},"end":{"line":140,"column":45,"offset":4244}}},{"type":"text","value":"y - desired_y))","position":{"start":{"line":140,"column":45,"offset":4244},"end":{"line":140,"column":60,"offset":4259}}}],"position":{"start":{"line":139,"column":1,"offset":4166},"end":{"line":140,"column":60,"offset":4259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Obtain training data","position":{"start":{"line":142,"column":1,"offset":4261},"end":{"line":142,"column":28,"offset":4288}}}],"position":{"start":{"line":142,"column":1,"offset":4261},"end":{"line":142,"column":28,"offset":4288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's synthesize the training data with some noise.\n\"\"\"","position":{"start":{"line":144,"column":1,"offset":4290},"end":{"line":145,"column":4,"offset":4345}}}],"position":{"start":{"line":144,"column":1,"offset":4290},"end":{"line":145,"column":4,"offset":4345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"TRUE","position":{"start":{"line":147,"column":1,"offset":4347},"end":{"line":147,"column":5,"offset":4351}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W = 3.0\nTRUE","position":{"start":{"line":147,"column":6,"offset":4352},"end":{"line":148,"column":5,"offset":4364}}}],"position":{"start":{"line":147,"column":5,"offset":4351},"end":{"line":148,"column":6,"offset":4365}}},{"type":"text","value":"b = 2.0\nNUM_EXAMPLES = 1000","position":{"start":{"line":148,"column":6,"offset":4365},"end":{"line":149,"column":20,"offset":4392}}}],"position":{"start":{"line":147,"column":1,"offset":4347},"end":{"line":149,"column":20,"offset":4392}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"inputs  = tf.random","position":{"start":{"line":151,"column":1,"offset":4394},"end":{"line":151,"column":20,"offset":4413}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":151,"column":21,"offset":4414},"end":{"line":151,"column":38,"offset":4431}}}],"position":{"start":{"line":151,"column":20,"offset":4413},"end":{"line":151,"column":39,"offset":4432}}},{"type":"text","value":"EXAMPLES])\nnoise   = tf.random","position":{"start":{"line":151,"column":39,"offset":4432},"end":{"line":152,"column":20,"offset":4462}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":152,"column":21,"offset":4463},"end":{"line":152,"column":38,"offset":4480}}}],"position":{"start":{"line":152,"column":20,"offset":4462},"end":{"line":152,"column":39,"offset":4481}}},{"type":"text","value":"EXAMPLES])\noutputs = inputs * TRUE","position":{"start":{"line":152,"column":39,"offset":4481},"end":{"line":153,"column":24,"offset":4515}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W + TRUE","position":{"start":{"line":153,"column":25,"offset":4516},"end":{"line":153,"column":33,"offset":4524}}}],"position":{"start":{"line":153,"column":24,"offset":4515},"end":{"line":153,"column":34,"offset":4525}}},{"type":"text","value":"b + noise","position":{"start":{"line":153,"column":34,"offset":4525},"end":{"line":153,"column":43,"offset":4534}}}],"position":{"start":{"line":151,"column":1,"offset":4394},"end":{"line":153,"column":43,"offset":4534}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Before we train the model let's visualize where the model stands right now. We'll plot the model's predictions in red and the training data in blue.\"\"\"","position":{"start":{"line":155,"column":1,"offset":4536},"end":{"line":155,"column":155,"offset":4690}}}],"position":{"start":{"line":155,"column":1,"offset":4536},"end":{"line":155,"column":155,"offset":4690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import matplotlib.pyplot as plt","position":{"start":{"line":157,"column":1,"offset":4692},"end":{"line":157,"column":32,"offset":4723}}}],"position":{"start":{"line":157,"column":1,"offset":4692},"end":{"line":157,"column":32,"offset":4723}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.scatter(inputs, outputs, c='b')\nplt.scatter(inputs, model(inputs), c='r')\nplt.show()","position":{"start":{"line":159,"column":1,"offset":4725},"end":{"line":161,"column":11,"offset":4813}}}],"position":{"start":{"line":159,"column":1,"offset":4725},"end":{"line":161,"column":11,"offset":4813}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print('Current loss: '),\nprint(loss(model(inputs), outputs).numpy())","position":{"start":{"line":163,"column":1,"offset":4815},"end":{"line":164,"column":44,"offset":4883}}}],"position":{"start":{"line":163,"column":1,"offset":4815},"end":{"line":164,"column":44,"offset":4883}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a training loop","position":{"start":{"line":166,"column":1,"offset":4885},"end":{"line":166,"column":30,"offset":4914}}}],"position":{"start":{"line":166,"column":1,"offset":4885},"end":{"line":166,"column":30,"offset":4914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We now have our network and our training data. Let's train it, i.e., use the training data to update the model's variables (","position":{"start":{"line":168,"column":1,"offset":4916},"end":{"line":168,"column":125,"offset":5040}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":168,"column":125,"offset":5040},"end":{"line":168,"column":128,"offset":5043}}},{"type":"text","value":" and ","position":{"start":{"line":168,"column":128,"offset":5043},"end":{"line":168,"column":133,"offset":5048}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":168,"column":133,"offset":5048},"end":{"line":168,"column":136,"offset":5051}}},{"type":"text","value":") so that the loss goes down using ","position":{"start":{"line":168,"column":136,"offset":5051},"end":{"line":168,"column":171,"offset":5086}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Gradient_descent","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"gradient descent","position":{"start":{"line":168,"column":172,"offset":5087},"end":{"line":168,"column":188,"offset":5103}}}],"position":{"start":{"line":168,"column":171,"offset":5086},"end":{"line":168,"column":237,"offset":5152}}},{"type":"text","value":". There are many variants of the gradient descent scheme that are captured in ","position":{"start":{"line":168,"column":237,"offset":5152},"end":{"line":168,"column":315,"offset":5230}}},{"type":"raw","value":"<code class=\"language-text\">tf.train.Optimizer</code>","position":{"start":{"line":168,"column":315,"offset":5230},"end":{"line":168,"column":335,"offset":5250}}},{"type":"text","value":" implementations. We'd highly recommend using those implementations, but in the spirit of building from first principles, in this particular example we will implement the basic math ourselves.\n\"\"\"","position":{"start":{"line":168,"column":335,"offset":5250},"end":{"line":169,"column":4,"offset":5446}}}],"position":{"start":{"line":168,"column":1,"offset":4916},"end":{"line":169,"column":4,"offset":5446}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def train(model, inputs, outputs, learning","position":{"start":{"line":171,"column":1,"offset":5448},"end":{"line":171,"column":43,"offset":5490}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate):\nwith tf.GradientTape() as t:\ncurrent","position":{"start":{"line":171,"column":44,"offset":5491},"end":{"line":173,"column":12,"offset":5540}}}],"position":{"start":{"line":171,"column":43,"offset":5490},"end":{"line":173,"column":13,"offset":5541}}},{"type":"text","value":"loss = loss(model(inputs), outputs)\ndW, db = t.gradient(current","position":{"start":{"line":173,"column":13,"offset":5541},"end":{"line":174,"column":30,"offset":5606}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"loss, ","position":{"start":{"line":174,"column":31,"offset":5607},"end":{"line":174,"column":37,"offset":5613}}},{"type":"text","value":"[model.W, model.b]","position":{"start":{"line":174,"column":38,"offset":5614},"end":{"line":174,"column":54,"offset":5630}}},{"type":"text","value":")\nmodel.W.assign","position":{"start":{"line":174,"column":55,"offset":5631},"end":{"line":175,"column":17,"offset":5649}}}],"position":{"start":{"line":174,"column":30,"offset":5606},"end":{"line":175,"column":18,"offset":5650}}},{"type":"text","value":"sub(learning","position":{"start":{"line":175,"column":18,"offset":5650},"end":{"line":175,"column":30,"offset":5662}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate * dW)\nmodel.b.assign","position":{"start":{"line":175,"column":31,"offset":5663},"end":{"line":176,"column":17,"offset":5690}}}],"position":{"start":{"line":175,"column":30,"offset":5662},"end":{"line":176,"column":18,"offset":5691}}},{"type":"text","value":"sub(learning_rate * db)","position":{"start":{"line":176,"column":18,"offset":5691},"end":{"line":176,"column":41,"offset":5714}}}],"position":{"start":{"line":171,"column":1,"offset":5448},"end":{"line":176,"column":41,"offset":5714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Finally, let's repeatedly run through the training data and see how ","position":{"start":{"line":178,"column":1,"offset":5716},"end":{"line":178,"column":72,"offset":5787}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":178,"column":72,"offset":5787},"end":{"line":178,"column":75,"offset":5790}}},{"type":"text","value":" and ","position":{"start":{"line":178,"column":75,"offset":5790},"end":{"line":178,"column":80,"offset":5795}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":178,"column":80,"offset":5795},"end":{"line":178,"column":83,"offset":5798}}},{"type":"text","value":" evolve.\"\"\"","position":{"start":{"line":178,"column":83,"offset":5798},"end":{"line":178,"column":94,"offset":5809}}}],"position":{"start":{"line":178,"column":1,"offset":5716},"end":{"line":178,"column":94,"offset":5809}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":180,"column":1,"offset":5811},"end":{"line":180,"column":16,"offset":5826}}}],"position":{"start":{"line":180,"column":1,"offset":5811},"end":{"line":180,"column":16,"offset":5826}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"},"children":[{"type":"element","tagName":"a","properties":{"href":"#collect-the-history-of-w-values-and-b-values-to-plot-later","aria-label":"collect the history of w values and b values to plot later permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Collect the history of W-values and b-values to plot later","position":{"start":{"line":182,"column":3,"offset":5830},"end":{"line":182,"column":61,"offset":5888}}}],"position":{"start":{"line":182,"column":1,"offset":5828},"end":{"line":182,"column":61,"offset":5888}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ws, bs = [], []\nepochs = range(10)\nfor epoch in epochs:\nWs.append(model.W.numpy())\nbs.append(model.b.numpy())\ncurrent_loss = loss(model(inputs), outputs)","position":{"start":{"line":183,"column":1,"offset":5889},"end":{"line":188,"column":46,"offset":6048}}}],"position":{"start":{"line":183,"column":1,"offset":5889},"end":{"line":188,"column":46,"offset":6048}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  train(model, inputs, outputs, learning","position":{"start":{"line":190,"column":1,"offset":6050},"end":{"line":190,"column":41,"offset":6090}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate=0.1)\nprint('Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f' %\n(epoch, Ws","position":{"start":{"line":190,"column":42,"offset":6091},"end":{"line":192,"column":19,"offset":6170}}},{"type":"text","value":"[-1]","position":{"start":{"line":192,"column":20,"offset":6171},"end":{"line":192,"column":22,"offset":6173}}},{"type":"text","value":", bs","position":{"start":{"line":192,"column":23,"offset":6174},"end":{"line":192,"column":27,"offset":6178}}},{"type":"text","value":"[-1]","position":{"start":{"line":192,"column":28,"offset":6179},"end":{"line":192,"column":30,"offset":6181}}},{"type":"text","value":", current","position":{"start":{"line":192,"column":31,"offset":6182},"end":{"line":192,"column":40,"offset":6191}}}],"position":{"start":{"line":190,"column":41,"offset":6090},"end":{"line":192,"column":41,"offset":6192}}},{"type":"text","value":"loss))","position":{"start":{"line":192,"column":41,"offset":6192},"end":{"line":192,"column":47,"offset":6198}}}],"position":{"start":{"line":190,"column":1,"offset":6050},"end":{"line":192,"column":47,"offset":6198}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"lets-plot-it-all"},"children":[{"type":"element","tagName":"a","properties":{"href":"#lets-plot-it-all","aria-label":"lets plot it all permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Let's plot it all","position":{"start":{"line":194,"column":3,"offset":6202},"end":{"line":194,"column":20,"offset":6219}}}],"position":{"start":{"line":194,"column":1,"offset":6200},"end":{"line":194,"column":20,"offset":6219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.plot(epochs, Ws, 'r',\nepochs, bs, 'b')\nplt.plot(","position":{"start":{"line":195,"column":1,"offset":6220},"end":{"line":197,"column":10,"offset":6281}}},{"type":"text","value":"[TRUE_W]","position":{"start":{"line":197,"column":11,"offset":6282},"end":{"line":197,"column":17,"offset":6288}}},{"type":"text","value":" * len(epochs), 'r--',\n","position":{"start":{"line":197,"column":18,"offset":6289},"end":{"line":198,"column":10,"offset":6321}}},{"type":"text","value":"[TRUE_b]","position":{"start":{"line":198,"column":11,"offset":6322},"end":{"line":198,"column":17,"offset":6328}}},{"type":"text","value":" * len(epochs), 'b--')\nplt.legend(","position":{"start":{"line":198,"column":18,"offset":6329},"end":{"line":199,"column":12,"offset":6363}}},{"type":"text","value":"['W', 'b', 'true W', 'true_b']","position":{"start":{"line":199,"column":13,"offset":6364},"end":{"line":199,"column":41,"offset":6392}}},{"type":"text","value":")\nplt.show()","position":{"start":{"line":199,"column":42,"offset":6393},"end":{"line":200,"column":11,"offset":6405}}}],"position":{"start":{"line":195,"column":1,"offset":6220},"end":{"line":200,"column":11,"offset":6405}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Next Steps","position":{"start":{"line":202,"column":1,"offset":6407},"end":{"line":202,"column":17,"offset":6423}}}],"position":{"start":{"line":202,"column":1,"offset":6407},"end":{"line":202,"column":17,"offset":6423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial we covered ","position":{"start":{"line":204,"column":1,"offset":6425},"end":{"line":204,"column":29,"offset":6453}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":204,"column":29,"offset":6453},"end":{"line":204,"column":39,"offset":6463}}},{"type":"text","value":"s and built and trained a simple linear model using the TensorFlow primitives discussed so far.","position":{"start":{"line":204,"column":39,"offset":6463},"end":{"line":204,"column":134,"offset":6558}}}],"position":{"start":{"line":204,"column":1,"offset":6425},"end":{"line":204,"column":134,"offset":6558}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In theory, this is pretty much all you need to use TensorFlow for your machine learning research.\nIn practice, particularly for neural networks, the higher level APIs like ","position":{"start":{"line":206,"column":1,"offset":6560},"end":{"line":207,"column":75,"offset":6732}}},{"type":"raw","value":"<code class=\"language-text\">tf.keras</code>","position":{"start":{"line":207,"column":75,"offset":6732},"end":{"line":207,"column":85,"offset":6742}}},{"type":"text","value":" will be much more convenient since it provides higher level building blocks (called \"layers\"), utilities to save and restore state, a suite of loss functions, a suite of optimization strategies etc.\n\"\"\"","position":{"start":{"line":207,"column":85,"offset":6742},"end":{"line":208,"column":4,"offset":6945}}}],"position":{"start":{"line":206,"column":1,"offset":6560},"end":{"line":208,"column":4,"offset":6945}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":210,"column":1,"offset":6947},"end":{"line":214,"column":1,"offset":6954}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":214,"column":1,"offset":6954}}}}