{"expireTime":9007200813389847000,"key":"transformer-remark-markdown-html-ast-9e2bf77e340f0c48997985d33669ef8e-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#basic-operations","aria-label":"basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Basic Operations","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":20,"offset":19}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initilize-tensors"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initilize-tensors","aria-label":"initilize tensors permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"initilize tensors","position":{"start":{"line":3,"column":5,"offset":25},"end":{"line":3,"column":22,"offset":42}}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":23,"offset":43}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(10,10) array with zero elements","position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}}],"position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Using python state\nx = tf.zeros([10, 10])\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":79},"end":{"line":13,"column":4,"offset":238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensors-basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensors-basic-operations","aria-label":"tensors basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensors basic operations","position":{"start":{"line":15,"column":5,"offset":244},"end":{"line":15,"column":29,"offset":268}}}],"position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":15,"column":30,"offset":269}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import tensorflow as tf\nimport numpy \n\ntf.enable_eager_execution\n\nprint(tf.add(1, 2))\nprint(tf.add([1, 2], [3, 4]))\nprint(tf.square(5))\nprint(tf.reduce_sum([1, 2, 3]))\nprint(tf.encode_base64(&quot;hello world&quot;))\n\n# Operator overloading is also supported\nprint(tf.square(2) + tf.square(3))\n\nx = tf.matmul([[1]], [[2, 3]])\nprint(x.shape)\nprint(x.dtype)\n\nndarray = np.ones([3, 3])\n\nprint(&quot;TensorFlow operations convert numpy arrays to Tensors automatically&quot;)\ntensor = tf.multiply(ndarray, 42)\nprint(tensor)\n\nprint(&quot;And NumPy operations convert Tensors to numpy arrays automatically&quot;)\nprint(np.add(tensor, 1))\n\nprint(&quot;The .numpy() method explicitly converts a Tensor to a numpy array&quot;)\nprint(tensor.numpy())</code></pre></div>","position":{"start":{"line":17,"column":1,"offset":271},"end":{"line":48,"column":4,"offset":978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensors-basic-operations-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensors-basic-operations-1","aria-label":"tensors basic operations 1 permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensors basic operations","position":{"start":{"line":50,"column":5,"offset":984},"end":{"line":50,"column":29,"offset":1008}}}],"position":{"start":{"line":50,"column":1,"offset":980},"end":{"line":50,"column":30,"offset":1009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"a-small-script-to-show-a-custom-training-using"},"children":[{"type":"element","tagName":"a","properties":{"href":"#a-small-script-to-show-a-custom-training-using","aria-label":"a small script to show a custom training using permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"A small script to show a custom training using","position":{"start":{"line":57,"column":5,"offset":1020},"end":{"line":57,"column":51,"offset":1066}}}],"position":{"start":{"line":57,"column":1,"offset":1016},"end":{"line":57,"column":52,"offset":1067}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*class,  assert, plot","position":{"start":{"line":59,"column":1,"offset":1069},"end":{"line":59,"column":22,"offset":1090}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":59,"column":22,"offset":1090},"end":{"line":60,"column":1,"offset":1093}}},{"type":"text","value":"\n"},{"type":"text","value":"*variable, gradient, and loss","position":{"start":{"line":60,"column":1,"offset":1093},"end":{"line":60,"column":30,"offset":1122}}}],"position":{"start":{"line":59,"column":1,"offset":1069},"end":{"line":60,"column":30,"offset":1122}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"# Custom training: basics\n\"\"\"","position":{"start":{"line":63,"column":1,"offset":1125},"end":{"line":64,"column":4,"offset":1157}}}],"position":{"start":{"line":63,"column":1,"offset":1125},"end":{"line":64,"column":4,"offset":1157}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from ","position":{"start":{"line":66,"column":1,"offset":1159},"end":{"line":66,"column":6,"offset":1164}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"future","position":{"start":{"line":66,"column":8,"offset":1166},"end":{"line":66,"column":14,"offset":1172}}}],"position":{"start":{"line":66,"column":6,"offset":1164},"end":{"line":66,"column":16,"offset":1174}}},{"type":"text","value":" import absolute","position":{"start":{"line":66,"column":16,"offset":1174},"end":{"line":66,"column":32,"offset":1190}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"import, division, print","position":{"start":{"line":66,"column":33,"offset":1191},"end":{"line":66,"column":56,"offset":1214}}}],"position":{"start":{"line":66,"column":32,"offset":1190},"end":{"line":66,"column":57,"offset":1215}}},{"type":"text","value":"function, unicode_literals","position":{"start":{"line":66,"column":57,"offset":1215},"end":{"line":66,"column":83,"offset":1241}}}],"position":{"start":{"line":66,"column":1,"offset":1159},"end":{"line":66,"column":83,"offset":1241}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import tensorflow as tf","position":{"start":{"line":68,"column":1,"offset":1243},"end":{"line":68,"column":24,"offset":1266}}}],"position":{"start":{"line":68,"column":1,"offset":1243},"end":{"line":68,"column":24,"offset":1266}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"tf.enable","position":{"start":{"line":70,"column":1,"offset":1268},"end":{"line":70,"column":10,"offset":1277}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"eager","position":{"start":{"line":70,"column":11,"offset":1278},"end":{"line":70,"column":16,"offset":1283}}}],"position":{"start":{"line":70,"column":10,"offset":1277},"end":{"line":70,"column":17,"offset":1284}}},{"type":"text","value":"execution()","position":{"start":{"line":70,"column":17,"offset":1284},"end":{"line":70,"column":28,"offset":1295}}}],"position":{"start":{"line":70,"column":1,"offset":1268},"end":{"line":70,"column":28,"offset":1295}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Variables","position":{"start":{"line":72,"column":1,"offset":1297},"end":{"line":72,"column":16,"offset":1312}}}],"position":{"start":{"line":72,"column":1,"offset":1297},"end":{"line":72,"column":16,"offset":1312}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Tensors in TensorFlow are immutable stateless objects. Machine learning models, however, need to have changing state: as your model trains, the same code to compute predictions should behave differently over time (hopefully with a lower loss!). To represent this state which needs to change over the course of your computation, you can choose to rely on the fact that Python is a stateful programming language:\n\"\"\"","position":{"start":{"line":74,"column":1,"offset":1314},"end":{"line":75,"column":4,"offset":1728}}}],"position":{"start":{"line":74,"column":1,"offset":1314},"end":{"line":75,"column":4,"offset":1728}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"using-python-state"},"children":[{"type":"element","tagName":"a","properties":{"href":"#using-python-state","aria-label":"using python state permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Using python state","position":{"start":{"line":77,"column":3,"offset":1732},"end":{"line":77,"column":21,"offset":1750}}}],"position":{"start":{"line":77,"column":1,"offset":1730},"end":{"line":77,"column":21,"offset":1750}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x = tf.zeros(","position":{"start":{"line":78,"column":1,"offset":1751},"end":{"line":78,"column":14,"offset":1764}}},{"type":"text","value":"[10, 10]","position":{"start":{"line":78,"column":15,"offset":1765},"end":{"line":78,"column":21,"offset":1771}}},{"type":"text","value":")\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n# value of x\nprint(x)","position":{"start":{"line":78,"column":22,"offset":1772},"end":{"line":81,"column":9,"offset":1881}}}],"position":{"start":{"line":78,"column":1,"offset":1751},"end":{"line":81,"column":9,"offset":1881}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"TensorFlow, however, has stateful operations built in, and these are often more pleasant to use than low-level Python representations of your state. To represent weights in a model, for example, it's often convenient and efficient to use TensorFlow variables.","position":{"start":{"line":83,"column":1,"offset":1883},"end":{"line":83,"column":263,"offset":2145}}}],"position":{"start":{"line":83,"column":1,"offset":1883},"end":{"line":83,"column":263,"offset":2145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A Variable is an object which stores a value and, when used in a TensorFlow computation, will implicitly read from this stored value. There are operations (","position":{"start":{"line":85,"column":1,"offset":2147},"end":{"line":85,"column":157,"offset":2303}}},{"type":"raw","value":"<code class=\"language-text\">tf.assign_sub</code>","position":{"start":{"line":85,"column":157,"offset":2303},"end":{"line":85,"column":172,"offset":2318}}},{"type":"text","value":", ","position":{"start":{"line":85,"column":172,"offset":2318},"end":{"line":85,"column":174,"offset":2320}}},{"type":"raw","value":"<code class=\"language-text\">tf.scatter_update</code>","position":{"start":{"line":85,"column":174,"offset":2320},"end":{"line":85,"column":193,"offset":2339}}},{"type":"text","value":", etc) which manipulate the value stored in a TensorFlow variable.\n\"\"\"","position":{"start":{"line":85,"column":193,"offset":2339},"end":{"line":86,"column":4,"offset":2409}}}],"position":{"start":{"line":85,"column":1,"offset":2147},"end":{"line":86,"column":4,"offset":2409}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v = tf.Variable(1.0)\nassert v.numpy() == 1.0","position":{"start":{"line":88,"column":1,"offset":2411},"end":{"line":89,"column":24,"offset":2455}}}],"position":{"start":{"line":88,"column":1,"offset":2411},"end":{"line":89,"column":24,"offset":2455}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"re-assign-the-value"},"children":[{"type":"element","tagName":"a","properties":{"href":"#re-assign-the-value","aria-label":"re assign the value permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Re-assign the value","position":{"start":{"line":91,"column":3,"offset":2459},"end":{"line":91,"column":22,"offset":2478}}}],"position":{"start":{"line":91,"column":1,"offset":2457},"end":{"line":91,"column":22,"offset":2478}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(3.0)\nassert v.numpy() == 3.0","position":{"start":{"line":92,"column":1,"offset":2479},"end":{"line":93,"column":24,"offset":2516}}}],"position":{"start":{"line":92,"column":1,"offset":2479},"end":{"line":93,"column":24,"offset":2516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"},"children":[{"type":"element","tagName":"a","properties":{"href":"#use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","aria-label":"use v in a tensorflow operation like tfsquare and reassign permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Use ","position":{"start":{"line":95,"column":3,"offset":2520},"end":{"line":95,"column":7,"offset":2524}}},{"type":"raw","value":"<code class=\"language-text\">v</code>","position":{"start":{"line":95,"column":7,"offset":2524},"end":{"line":95,"column":10,"offset":2527}}},{"type":"text","value":" in a TensorFlow operation like tf.square() and reassign","position":{"start":{"line":95,"column":10,"offset":2527},"end":{"line":95,"column":66,"offset":2583}}}],"position":{"start":{"line":95,"column":1,"offset":2518},"end":{"line":95,"column":66,"offset":2583}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(tf.square(v))\nassert v.numpy() == 9.0","position":{"start":{"line":96,"column":1,"offset":2584},"end":{"line":97,"column":24,"offset":2630}}}],"position":{"start":{"line":96,"column":1,"offset":2584},"end":{"line":97,"column":24,"offset":2630}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Computations using Variables are automatically traced when computing gradients. For Variables representing embeddings TensorFlow will do sparse updates by default, which are more computation and memory efficient.","position":{"start":{"line":99,"column":1,"offset":2632},"end":{"line":99,"column":216,"offset":2847}}}],"position":{"start":{"line":99,"column":1,"offset":2632},"end":{"line":99,"column":216,"offset":2847}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using Variables is also a way to quickly let a reader of your code know that this piece of state is mutable.","position":{"start":{"line":101,"column":1,"offset":2849},"end":{"line":101,"column":109,"offset":2957}}}],"position":{"start":{"line":101,"column":1,"offset":2849},"end":{"line":101,"column":109,"offset":2957}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"example-fitting-a-linear-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#example-fitting-a-linear-model","aria-label":"example fitting a linear model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Example: Fitting a linear model","position":{"start":{"line":103,"column":4,"offset":2962},"end":{"line":103,"column":35,"offset":2993}}}],"position":{"start":{"line":103,"column":1,"offset":2959},"end":{"line":103,"column":35,"offset":2993}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's now put the few concepts we have so far ---","position":{"start":{"line":105,"column":1,"offset":2995},"end":{"line":105,"column":50,"offset":3044}}},{"type":"raw","value":"<code class=\"language-text\">Tensor</code>","position":{"start":{"line":105,"column":50,"offset":3044},"end":{"line":105,"column":58,"offset":3052}}},{"type":"text","value":", ","position":{"start":{"line":105,"column":58,"offset":3052},"end":{"line":105,"column":60,"offset":3054}}},{"type":"raw","value":"<code class=\"language-text\">GradientTape</code>","position":{"start":{"line":105,"column":60,"offset":3054},"end":{"line":105,"column":74,"offset":3068}}},{"type":"text","value":", ","position":{"start":{"line":105,"column":74,"offset":3068},"end":{"line":105,"column":76,"offset":3070}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":105,"column":76,"offset":3070},"end":{"line":105,"column":86,"offset":3080}}},{"type":"text","value":" --- to build and train a simple model. This typically involves a few steps:","position":{"start":{"line":105,"column":86,"offset":3080},"end":{"line":105,"column":162,"offset":3156}}}],"position":{"start":{"line":105,"column":1,"offset":2995},"end":{"line":105,"column":162,"offset":3156}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define the model.","position":{"start":{"line":107,"column":4,"offset":3161},"end":{"line":107,"column":21,"offset":3178}}}],"position":{"start":{"line":107,"column":1,"offset":3158},"end":{"line":107,"column":21,"offset":3178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define a loss function.","position":{"start":{"line":108,"column":4,"offset":3182},"end":{"line":108,"column":27,"offset":3205}}}],"position":{"start":{"line":108,"column":1,"offset":3179},"end":{"line":108,"column":27,"offset":3205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Obtain training data.","position":{"start":{"line":109,"column":4,"offset":3209},"end":{"line":109,"column":25,"offset":3230}}}],"position":{"start":{"line":109,"column":1,"offset":3206},"end":{"line":109,"column":25,"offset":3230}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Run through the training data and use an \"optimizer\" to adjust the variables to fit the data.","position":{"start":{"line":110,"column":4,"offset":3234},"end":{"line":110,"column":97,"offset":3327}}}],"position":{"start":{"line":110,"column":1,"offset":3231},"end":{"line":110,"column":97,"offset":3327}}},{"type":"text","value":"\n"}],"position":{"start":{"line":107,"column":1,"offset":3158},"end":{"line":110,"column":97,"offset":3327}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial, we'll walk through a trivial example of a simple linear model: ","position":{"start":{"line":112,"column":1,"offset":3329},"end":{"line":112,"column":82,"offset":3410}}},{"type":"raw","value":"<code class=\"language-text\">f(x) = x * W + b</code>","position":{"start":{"line":112,"column":82,"offset":3410},"end":{"line":112,"column":100,"offset":3428}}},{"type":"text","value":", which has two variables - ","position":{"start":{"line":112,"column":100,"offset":3428},"end":{"line":112,"column":128,"offset":3456}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":112,"column":128,"offset":3456},"end":{"line":112,"column":131,"offset":3459}}},{"type":"text","value":" and ","position":{"start":{"line":112,"column":131,"offset":3459},"end":{"line":112,"column":136,"offset":3464}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":112,"column":136,"offset":3464},"end":{"line":112,"column":139,"offset":3467}}},{"type":"text","value":". Furthermore, we'll synthesize data such that a well trained model would have ","position":{"start":{"line":112,"column":139,"offset":3467},"end":{"line":112,"column":218,"offset":3546}}},{"type":"raw","value":"<code class=\"language-text\">W = 3.0</code>","position":{"start":{"line":112,"column":218,"offset":3546},"end":{"line":112,"column":227,"offset":3555}}},{"type":"text","value":" and ","position":{"start":{"line":112,"column":227,"offset":3555},"end":{"line":112,"column":232,"offset":3560}}},{"type":"raw","value":"<code class=\"language-text\">b = 2.0</code>","position":{"start":{"line":112,"column":232,"offset":3560},"end":{"line":112,"column":241,"offset":3569}}},{"type":"text","value":".","position":{"start":{"line":112,"column":241,"offset":3569},"end":{"line":112,"column":242,"offset":3570}}}],"position":{"start":{"line":112,"column":1,"offset":3329},"end":{"line":112,"column":242,"offset":3570}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"define-the-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#define-the-model","aria-label":"define the model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Define the model","position":{"start":{"line":114,"column":5,"offset":3576},"end":{"line":114,"column":21,"offset":3592}}}],"position":{"start":{"line":114,"column":1,"offset":3572},"end":{"line":114,"column":21,"offset":3592}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's define a simple class to encapsulate the variables and the computation.\n\"\"\"","position":{"start":{"line":116,"column":1,"offset":3594},"end":{"line":117,"column":4,"offset":3675}}}],"position":{"start":{"line":116,"column":1,"offset":3594},"end":{"line":117,"column":4,"offset":3675}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"class Model(object):\ndef ","position":{"start":{"line":119,"column":1,"offset":3677},"end":{"line":120,"column":7,"offset":3704}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"init","position":{"start":{"line":120,"column":9,"offset":3706},"end":{"line":120,"column":13,"offset":3710}}}],"position":{"start":{"line":120,"column":7,"offset":3704},"end":{"line":120,"column":15,"offset":3712}}},{"type":"text","value":"(self):\n# Initialize variable to (5.0, 0.0)\n# In practice, these should be initialized to random values.\nself.W = tf.Variable(5.0)\nself.b = tf.Variable(0.0)","position":{"start":{"line":120,"column":15,"offset":3712},"end":{"line":124,"column":30,"offset":3884}}}],"position":{"start":{"line":119,"column":1,"offset":3677},"end":{"line":124,"column":30,"offset":3884}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  def ","position":{"start":{"line":126,"column":1,"offset":3886},"end":{"line":126,"column":7,"offset":3892}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"call","position":{"start":{"line":126,"column":9,"offset":3894},"end":{"line":126,"column":13,"offset":3898}}}],"position":{"start":{"line":126,"column":7,"offset":3892},"end":{"line":126,"column":15,"offset":3900}}},{"type":"text","value":"(self, x):\nreturn self.W * x + self.b","position":{"start":{"line":126,"column":15,"offset":3900},"end":{"line":127,"column":31,"offset":3941}}}],"position":{"start":{"line":126,"column":1,"offset":3886},"end":{"line":127,"column":31,"offset":3941}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":129,"column":1,"offset":3943},"end":{"line":129,"column":16,"offset":3958}}}],"position":{"start":{"line":129,"column":1,"offset":3943},"end":{"line":129,"column":16,"offset":3958}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"assert model(3.0).numpy() == 15.0","position":{"start":{"line":131,"column":1,"offset":3960},"end":{"line":131,"column":34,"offset":3993}}}],"position":{"start":{"line":131,"column":1,"offset":3960},"end":{"line":131,"column":34,"offset":3993}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a loss function","position":{"start":{"line":133,"column":1,"offset":3995},"end":{"line":133,"column":30,"offset":4024}}}],"position":{"start":{"line":133,"column":1,"offset":3995},"end":{"line":133,"column":30,"offset":4024}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A loss function measures how well the output of a model for a given input matches the desired output. Let's use the standard L2 loss.\n\"\"\"","position":{"start":{"line":135,"column":1,"offset":4026},"end":{"line":136,"column":4,"offset":4163}}}],"position":{"start":{"line":135,"column":1,"offset":4026},"end":{"line":136,"column":4,"offset":4163}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def loss(predicted","position":{"start":{"line":138,"column":1,"offset":4165},"end":{"line":138,"column":19,"offset":4183}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"y, desired","position":{"start":{"line":138,"column":20,"offset":4184},"end":{"line":138,"column":30,"offset":4194}}}],"position":{"start":{"line":138,"column":19,"offset":4183},"end":{"line":138,"column":31,"offset":4195}}},{"type":"text","value":"y):\nreturn tf.reduce","position":{"start":{"line":138,"column":31,"offset":4195},"end":{"line":139,"column":19,"offset":4217}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"mean(tf.square(predicted","position":{"start":{"line":139,"column":20,"offset":4218},"end":{"line":139,"column":44,"offset":4242}}}],"position":{"start":{"line":139,"column":19,"offset":4217},"end":{"line":139,"column":45,"offset":4243}}},{"type":"text","value":"y - desired_y))","position":{"start":{"line":139,"column":45,"offset":4243},"end":{"line":139,"column":60,"offset":4258}}}],"position":{"start":{"line":138,"column":1,"offset":4165},"end":{"line":139,"column":60,"offset":4258}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Obtain training data","position":{"start":{"line":141,"column":1,"offset":4260},"end":{"line":141,"column":28,"offset":4287}}}],"position":{"start":{"line":141,"column":1,"offset":4260},"end":{"line":141,"column":28,"offset":4287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's synthesize the training data with some noise.\n\"\"\"","position":{"start":{"line":143,"column":1,"offset":4289},"end":{"line":144,"column":4,"offset":4344}}}],"position":{"start":{"line":143,"column":1,"offset":4289},"end":{"line":144,"column":4,"offset":4344}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"TRUE","position":{"start":{"line":146,"column":1,"offset":4346},"end":{"line":146,"column":5,"offset":4350}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W = 3.0\nTRUE","position":{"start":{"line":146,"column":6,"offset":4351},"end":{"line":147,"column":5,"offset":4363}}}],"position":{"start":{"line":146,"column":5,"offset":4350},"end":{"line":147,"column":6,"offset":4364}}},{"type":"text","value":"b = 2.0\nNUM_EXAMPLES = 1000","position":{"start":{"line":147,"column":6,"offset":4364},"end":{"line":148,"column":20,"offset":4391}}}],"position":{"start":{"line":146,"column":1,"offset":4346},"end":{"line":148,"column":20,"offset":4391}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"inputs  = tf.random","position":{"start":{"line":150,"column":1,"offset":4393},"end":{"line":150,"column":20,"offset":4412}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":150,"column":21,"offset":4413},"end":{"line":150,"column":38,"offset":4430}}}],"position":{"start":{"line":150,"column":20,"offset":4412},"end":{"line":150,"column":39,"offset":4431}}},{"type":"text","value":"EXAMPLES])\nnoise   = tf.random","position":{"start":{"line":150,"column":39,"offset":4431},"end":{"line":151,"column":20,"offset":4461}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":151,"column":21,"offset":4462},"end":{"line":151,"column":38,"offset":4479}}}],"position":{"start":{"line":151,"column":20,"offset":4461},"end":{"line":151,"column":39,"offset":4480}}},{"type":"text","value":"EXAMPLES])\noutputs = inputs * TRUE","position":{"start":{"line":151,"column":39,"offset":4480},"end":{"line":152,"column":24,"offset":4514}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W + TRUE","position":{"start":{"line":152,"column":25,"offset":4515},"end":{"line":152,"column":33,"offset":4523}}}],"position":{"start":{"line":152,"column":24,"offset":4514},"end":{"line":152,"column":34,"offset":4524}}},{"type":"text","value":"b + noise","position":{"start":{"line":152,"column":34,"offset":4524},"end":{"line":152,"column":43,"offset":4533}}}],"position":{"start":{"line":150,"column":1,"offset":4393},"end":{"line":152,"column":43,"offset":4533}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Before we train the model let's visualize where the model stands right now. We'll plot the model's predictions in red and the training data in blue.\"\"\"","position":{"start":{"line":154,"column":1,"offset":4535},"end":{"line":154,"column":155,"offset":4689}}}],"position":{"start":{"line":154,"column":1,"offset":4535},"end":{"line":154,"column":155,"offset":4689}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import matplotlib.pyplot as plt","position":{"start":{"line":156,"column":1,"offset":4691},"end":{"line":156,"column":32,"offset":4722}}}],"position":{"start":{"line":156,"column":1,"offset":4691},"end":{"line":156,"column":32,"offset":4722}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.scatter(inputs, outputs, c='b')\nplt.scatter(inputs, model(inputs), c='r')\nplt.show()","position":{"start":{"line":158,"column":1,"offset":4724},"end":{"line":160,"column":11,"offset":4812}}}],"position":{"start":{"line":158,"column":1,"offset":4724},"end":{"line":160,"column":11,"offset":4812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print('Current loss: '),\nprint(loss(model(inputs), outputs).numpy())","position":{"start":{"line":162,"column":1,"offset":4814},"end":{"line":163,"column":44,"offset":4882}}}],"position":{"start":{"line":162,"column":1,"offset":4814},"end":{"line":163,"column":44,"offset":4882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a training loop","position":{"start":{"line":165,"column":1,"offset":4884},"end":{"line":165,"column":30,"offset":4913}}}],"position":{"start":{"line":165,"column":1,"offset":4884},"end":{"line":165,"column":30,"offset":4913}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We now have our network and our training data. Let's train it, i.e., use the training data to update the model's variables (","position":{"start":{"line":167,"column":1,"offset":4915},"end":{"line":167,"column":125,"offset":5039}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":167,"column":125,"offset":5039},"end":{"line":167,"column":128,"offset":5042}}},{"type":"text","value":" and ","position":{"start":{"line":167,"column":128,"offset":5042},"end":{"line":167,"column":133,"offset":5047}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":167,"column":133,"offset":5047},"end":{"line":167,"column":136,"offset":5050}}},{"type":"text","value":") so that the loss goes down using ","position":{"start":{"line":167,"column":136,"offset":5050},"end":{"line":167,"column":171,"offset":5085}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Gradient_descent","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"gradient descent","position":{"start":{"line":167,"column":172,"offset":5086},"end":{"line":167,"column":188,"offset":5102}}}],"position":{"start":{"line":167,"column":171,"offset":5085},"end":{"line":167,"column":237,"offset":5151}}},{"type":"text","value":". There are many variants of the gradient descent scheme that are captured in ","position":{"start":{"line":167,"column":237,"offset":5151},"end":{"line":167,"column":315,"offset":5229}}},{"type":"raw","value":"<code class=\"language-text\">tf.train.Optimizer</code>","position":{"start":{"line":167,"column":315,"offset":5229},"end":{"line":167,"column":335,"offset":5249}}},{"type":"text","value":" implementations. We'd highly recommend using those implementations, but in the spirit of building from first principles, in this particular example we will implement the basic math ourselves.\n\"\"\"","position":{"start":{"line":167,"column":335,"offset":5249},"end":{"line":168,"column":4,"offset":5445}}}],"position":{"start":{"line":167,"column":1,"offset":4915},"end":{"line":168,"column":4,"offset":5445}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def train(model, inputs, outputs, learning","position":{"start":{"line":170,"column":1,"offset":5447},"end":{"line":170,"column":43,"offset":5489}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate):\nwith tf.GradientTape() as t:\ncurrent","position":{"start":{"line":170,"column":44,"offset":5490},"end":{"line":172,"column":12,"offset":5539}}}],"position":{"start":{"line":170,"column":43,"offset":5489},"end":{"line":172,"column":13,"offset":5540}}},{"type":"text","value":"loss = loss(model(inputs), outputs)\ndW, db = t.gradient(current","position":{"start":{"line":172,"column":13,"offset":5540},"end":{"line":173,"column":30,"offset":5605}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"loss, ","position":{"start":{"line":173,"column":31,"offset":5606},"end":{"line":173,"column":37,"offset":5612}}},{"type":"text","value":"[model.W, model.b]","position":{"start":{"line":173,"column":38,"offset":5613},"end":{"line":173,"column":54,"offset":5629}}},{"type":"text","value":")\nmodel.W.assign","position":{"start":{"line":173,"column":55,"offset":5630},"end":{"line":174,"column":17,"offset":5648}}}],"position":{"start":{"line":173,"column":30,"offset":5605},"end":{"line":174,"column":18,"offset":5649}}},{"type":"text","value":"sub(learning","position":{"start":{"line":174,"column":18,"offset":5649},"end":{"line":174,"column":30,"offset":5661}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate * dW)\nmodel.b.assign","position":{"start":{"line":174,"column":31,"offset":5662},"end":{"line":175,"column":17,"offset":5689}}}],"position":{"start":{"line":174,"column":30,"offset":5661},"end":{"line":175,"column":18,"offset":5690}}},{"type":"text","value":"sub(learning_rate * db)","position":{"start":{"line":175,"column":18,"offset":5690},"end":{"line":175,"column":41,"offset":5713}}}],"position":{"start":{"line":170,"column":1,"offset":5447},"end":{"line":175,"column":41,"offset":5713}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Finally, let's repeatedly run through the training data and see how ","position":{"start":{"line":177,"column":1,"offset":5715},"end":{"line":177,"column":72,"offset":5786}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":177,"column":72,"offset":5786},"end":{"line":177,"column":75,"offset":5789}}},{"type":"text","value":" and ","position":{"start":{"line":177,"column":75,"offset":5789},"end":{"line":177,"column":80,"offset":5794}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":177,"column":80,"offset":5794},"end":{"line":177,"column":83,"offset":5797}}},{"type":"text","value":" evolve.\"\"\"","position":{"start":{"line":177,"column":83,"offset":5797},"end":{"line":177,"column":94,"offset":5808}}}],"position":{"start":{"line":177,"column":1,"offset":5715},"end":{"line":177,"column":94,"offset":5808}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":179,"column":1,"offset":5810},"end":{"line":179,"column":16,"offset":5825}}}],"position":{"start":{"line":179,"column":1,"offset":5810},"end":{"line":179,"column":16,"offset":5825}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"},"children":[{"type":"element","tagName":"a","properties":{"href":"#collect-the-history-of-w-values-and-b-values-to-plot-later","aria-label":"collect the history of w values and b values to plot later permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Collect the history of W-values and b-values to plot later","position":{"start":{"line":181,"column":3,"offset":5829},"end":{"line":181,"column":61,"offset":5887}}}],"position":{"start":{"line":181,"column":1,"offset":5827},"end":{"line":181,"column":61,"offset":5887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ws, bs = [], []\nepochs = range(10)\nfor epoch in epochs:\nWs.append(model.W.numpy())\nbs.append(model.b.numpy())\ncurrent_loss = loss(model(inputs), outputs)","position":{"start":{"line":182,"column":1,"offset":5888},"end":{"line":187,"column":46,"offset":6047}}}],"position":{"start":{"line":182,"column":1,"offset":5888},"end":{"line":187,"column":46,"offset":6047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  train(model, inputs, outputs, learning","position":{"start":{"line":189,"column":1,"offset":6049},"end":{"line":189,"column":41,"offset":6089}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate=0.1)\nprint('Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f' %\n(epoch, Ws","position":{"start":{"line":189,"column":42,"offset":6090},"end":{"line":191,"column":19,"offset":6169}}},{"type":"text","value":"[-1]","position":{"start":{"line":191,"column":20,"offset":6170},"end":{"line":191,"column":22,"offset":6172}}},{"type":"text","value":", bs","position":{"start":{"line":191,"column":23,"offset":6173},"end":{"line":191,"column":27,"offset":6177}}},{"type":"text","value":"[-1]","position":{"start":{"line":191,"column":28,"offset":6178},"end":{"line":191,"column":30,"offset":6180}}},{"type":"text","value":", current","position":{"start":{"line":191,"column":31,"offset":6181},"end":{"line":191,"column":40,"offset":6190}}}],"position":{"start":{"line":189,"column":41,"offset":6089},"end":{"line":191,"column":41,"offset":6191}}},{"type":"text","value":"loss))","position":{"start":{"line":191,"column":41,"offset":6191},"end":{"line":191,"column":47,"offset":6197}}}],"position":{"start":{"line":189,"column":1,"offset":6049},"end":{"line":191,"column":47,"offset":6197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"lets-plot-it-all"},"children":[{"type":"element","tagName":"a","properties":{"href":"#lets-plot-it-all","aria-label":"lets plot it all permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Let's plot it all","position":{"start":{"line":193,"column":3,"offset":6201},"end":{"line":193,"column":20,"offset":6218}}}],"position":{"start":{"line":193,"column":1,"offset":6199},"end":{"line":193,"column":20,"offset":6218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.plot(epochs, Ws, 'r',\nepochs, bs, 'b')\nplt.plot(","position":{"start":{"line":194,"column":1,"offset":6219},"end":{"line":196,"column":10,"offset":6280}}},{"type":"text","value":"[TRUE_W]","position":{"start":{"line":196,"column":11,"offset":6281},"end":{"line":196,"column":17,"offset":6287}}},{"type":"text","value":" * len(epochs), 'r--',\n","position":{"start":{"line":196,"column":18,"offset":6288},"end":{"line":197,"column":10,"offset":6320}}},{"type":"text","value":"[TRUE_b]","position":{"start":{"line":197,"column":11,"offset":6321},"end":{"line":197,"column":17,"offset":6327}}},{"type":"text","value":" * len(epochs), 'b--')\nplt.legend(","position":{"start":{"line":197,"column":18,"offset":6328},"end":{"line":198,"column":12,"offset":6362}}},{"type":"text","value":"['W', 'b', 'true W', 'true_b']","position":{"start":{"line":198,"column":13,"offset":6363},"end":{"line":198,"column":41,"offset":6391}}},{"type":"text","value":")\nplt.show()","position":{"start":{"line":198,"column":42,"offset":6392},"end":{"line":199,"column":11,"offset":6404}}}],"position":{"start":{"line":194,"column":1,"offset":6219},"end":{"line":199,"column":11,"offset":6404}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Next Steps","position":{"start":{"line":201,"column":1,"offset":6406},"end":{"line":201,"column":17,"offset":6422}}}],"position":{"start":{"line":201,"column":1,"offset":6406},"end":{"line":201,"column":17,"offset":6422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial we covered ","position":{"start":{"line":203,"column":1,"offset":6424},"end":{"line":203,"column":29,"offset":6452}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":203,"column":29,"offset":6452},"end":{"line":203,"column":39,"offset":6462}}},{"type":"text","value":"s and built and trained a simple linear model using the TensorFlow primitives discussed so far.","position":{"start":{"line":203,"column":39,"offset":6462},"end":{"line":203,"column":134,"offset":6557}}}],"position":{"start":{"line":203,"column":1,"offset":6424},"end":{"line":203,"column":134,"offset":6557}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In theory, this is pretty much all you need to use TensorFlow for your machine learning research.\nIn practice, particularly for neural networks, the higher level APIs like ","position":{"start":{"line":205,"column":1,"offset":6559},"end":{"line":206,"column":75,"offset":6731}}},{"type":"raw","value":"<code class=\"language-text\">tf.keras</code>","position":{"start":{"line":206,"column":75,"offset":6731},"end":{"line":206,"column":85,"offset":6741}}},{"type":"text","value":" will be much more convenient since it provides higher level building blocks (called \"layers\"), utilities to save and restore state, a suite of loss functions, a suite of optimization strategies etc.\n\"\"\"","position":{"start":{"line":206,"column":85,"offset":6741},"end":{"line":207,"column":4,"offset":6944}}}],"position":{"start":{"line":205,"column":1,"offset":6559},"end":{"line":207,"column":4,"offset":6944}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":209,"column":1,"offset":6946},"end":{"line":213,"column":1,"offset":6953}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":213,"column":1,"offset":6953}}}}