{"expireTime":9007200813389771000,"key":"transformer-remark-markdown-ast-72086c6ccfafd3c4ca96b1fc1b9ebf4a-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"link","url":"#basic-operations","title":null,"data":{"hProperties":{"aria-label":"basic operations permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Basic Operations","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":20,"offset":19},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19},"indent":[]},"data":{"id":"basic-operations","htmlAttributes":{"id":"basic-operations"},"hProperties":{"id":"basic-operations"}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#initilize-tensors","title":null,"data":{"hProperties":{"aria-label":"initilize tensors permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"initilize tensors","position":{"start":{"line":3,"column":5,"offset":25},"end":{"line":3,"column":22,"offset":42},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":23,"offset":43},"indent":[]},"data":{"id":"initilize-tensors","htmlAttributes":{"id":"initilize-tensors"},"hProperties":{"id":"initilize-tensors"}}},{"type":"paragraph","children":[{"type":"text","value":"(10,10) array with zero elements","position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Using python state\nx = tf.zeros([10, 10])\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":79},"end":{"line":13,"column":4,"offset":238},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#initilize-tensors-1","title":null,"data":{"hProperties":{"aria-label":"initilize tensors 1 permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"initilize tensors","position":{"start":{"line":15,"column":5,"offset":244},"end":{"line":15,"column":22,"offset":261},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":15,"column":23,"offset":262},"indent":[]},"data":{"id":"initilize-tensors-1","htmlAttributes":{"id":"initilize-tensors-1"},"hProperties":{"id":"initilize-tensors-1"}}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import tensorflow as tf\nimport numpy \n\ntf.enable_eager_execution\n\nprint(tf.add(1, 2))\nprint(tf.add([1, 2], [3, 4]))\nprint(tf.square(5))\nprint(tf.reduce_sum([1, 2, 3]))\nprint(tf.encode_base64(&quot;hello world&quot;))\n\n# Operator overloading is also supported\nprint(tf.square(2) + tf.square(3))\n\nx = tf.matmul([[1]], [[2, 3]])\nprint(x.shape)\nprint(x.dtype)\n\nndarray = np.ones([3, 3])\n\nprint(&quot;TensorFlow operations convert numpy arrays to Tensors automatically&quot;)\ntensor = tf.multiply(ndarray, 42)\nprint(tensor)\n\nprint(&quot;And NumPy operations convert Tensors to numpy arrays automatically&quot;)\nprint(np.add(tensor, 1))\n\nprint(&quot;The .numpy() method explicitly converts a Tensor to a numpy array&quot;)\nprint(tensor.numpy())</code></pre></div>","position":{"start":{"line":17,"column":1,"offset":264},"end":{"line":47,"column":4,"offset":970},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#a-small-script-to-show-a-custom-training-using","title":null,"data":{"hProperties":{"aria-label":"a small script to show a custom training using permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"A small script to show a custom training using","position":{"start":{"line":54,"column":5,"offset":981},"end":{"line":54,"column":51,"offset":1027},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":977},"end":{"line":54,"column":52,"offset":1028},"indent":[]},"data":{"id":"a-small-script-to-show-a-custom-training-using","htmlAttributes":{"id":"a-small-script-to-show-a-custom-training-using"},"hProperties":{"id":"a-small-script-to-show-a-custom-training-using"}}},{"type":"paragraph","children":[{"type":"text","value":"*class,  assert, plot","position":{"start":{"line":56,"column":1,"offset":1030},"end":{"line":56,"column":22,"offset":1051},"indent":[]}},{"type":"break","position":{"start":{"line":56,"column":22,"offset":1051},"end":{"line":57,"column":1,"offset":1054},"indent":[1]}},{"type":"text","value":"*variable, gradient, and loss","position":{"start":{"line":57,"column":1,"offset":1054},"end":{"line":57,"column":30,"offset":1083},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1030},"end":{"line":57,"column":30,"offset":1083},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"# Custom training: basics\n\"\"\"","position":{"start":{"line":60,"column":1,"offset":1086},"end":{"line":61,"column":4,"offset":1118},"indent":[1]}}],"position":{"start":{"line":60,"column":1,"offset":1086},"end":{"line":61,"column":4,"offset":1118},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"from ","position":{"start":{"line":63,"column":1,"offset":1120},"end":{"line":63,"column":6,"offset":1125},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"future","position":{"start":{"line":63,"column":8,"offset":1127},"end":{"line":63,"column":14,"offset":1133},"indent":[]}}],"position":{"start":{"line":63,"column":6,"offset":1125},"end":{"line":63,"column":16,"offset":1135},"indent":[]}},{"type":"text","value":" import absolute","position":{"start":{"line":63,"column":16,"offset":1135},"end":{"line":63,"column":32,"offset":1151},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"import, division, print","position":{"start":{"line":63,"column":33,"offset":1152},"end":{"line":63,"column":56,"offset":1175},"indent":[]}}],"position":{"start":{"line":63,"column":32,"offset":1151},"end":{"line":63,"column":57,"offset":1176},"indent":[]}},{"type":"text","value":"function, unicode_literals","position":{"start":{"line":63,"column":57,"offset":1176},"end":{"line":63,"column":83,"offset":1202},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1120},"end":{"line":63,"column":83,"offset":1202},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import tensorflow as tf","position":{"start":{"line":65,"column":1,"offset":1204},"end":{"line":65,"column":24,"offset":1227},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1204},"end":{"line":65,"column":24,"offset":1227},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"tf.enable","position":{"start":{"line":67,"column":1,"offset":1229},"end":{"line":67,"column":10,"offset":1238},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"eager","position":{"start":{"line":67,"column":11,"offset":1239},"end":{"line":67,"column":16,"offset":1244},"indent":[]}}],"position":{"start":{"line":67,"column":10,"offset":1238},"end":{"line":67,"column":17,"offset":1245},"indent":[]}},{"type":"text","value":"execution()","position":{"start":{"line":67,"column":17,"offset":1245},"end":{"line":67,"column":28,"offset":1256},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1229},"end":{"line":67,"column":28,"offset":1256},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"## Variables","position":{"start":{"line":69,"column":1,"offset":1258},"end":{"line":69,"column":16,"offset":1273},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1258},"end":{"line":69,"column":16,"offset":1273},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Tensors in TensorFlow are immutable stateless objects. Machine learning models, however, need to have changing state: as your model trains, the same code to compute predictions should behave differently over time (hopefully with a lower loss!). To represent this state which needs to change over the course of your computation, you can choose to rely on the fact that Python is a stateful programming language:\n\"\"\"","position":{"start":{"line":71,"column":1,"offset":1275},"end":{"line":72,"column":4,"offset":1689},"indent":[1]}}],"position":{"start":{"line":71,"column":1,"offset":1275},"end":{"line":72,"column":4,"offset":1689},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#using-python-state","title":null,"data":{"hProperties":{"aria-label":"using python state permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Using python state","position":{"start":{"line":74,"column":3,"offset":1693},"end":{"line":74,"column":21,"offset":1711},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1691},"end":{"line":74,"column":21,"offset":1711},"indent":[]},"data":{"id":"using-python-state","htmlAttributes":{"id":"using-python-state"},"hProperties":{"id":"using-python-state"}}},{"type":"paragraph","children":[{"type":"text","value":"x = tf.zeros(","position":{"start":{"line":75,"column":1,"offset":1712},"end":{"line":75,"column":14,"offset":1725},"indent":[]}},{"type":"linkReference","identifier":"10, 10","referenceType":"shortcut","children":[{"type":"text","value":"10, 10","position":{"start":{"line":75,"column":15,"offset":1726},"end":{"line":75,"column":21,"offset":1732},"indent":[]}}],"position":{"start":{"line":75,"column":14,"offset":1725},"end":{"line":75,"column":22,"offset":1733},"indent":[]}},{"type":"text","value":")\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)","position":{"start":{"line":75,"column":22,"offset":1733},"end":{"line":78,"column":9,"offset":1842},"indent":[1,1,1]}}],"position":{"start":{"line":75,"column":1,"offset":1712},"end":{"line":78,"column":9,"offset":1842},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"TensorFlow, however, has stateful operations built in, and these are often more pleasant to use than low-level Python representations of your state. To represent weights in a model, for example, it's often convenient and efficient to use TensorFlow variables.","position":{"start":{"line":80,"column":1,"offset":1844},"end":{"line":80,"column":263,"offset":2106},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":1844},"end":{"line":80,"column":263,"offset":2106},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A Variable is an object which stores a value and, when used in a TensorFlow computation, will implicitly read from this stored value. There are operations (","position":{"start":{"line":82,"column":1,"offset":2108},"end":{"line":82,"column":157,"offset":2264},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">tf.assign_sub</code>","position":{"start":{"line":82,"column":157,"offset":2264},"end":{"line":82,"column":172,"offset":2279},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":82,"column":172,"offset":2279},"end":{"line":82,"column":174,"offset":2281},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">tf.scatter_update</code>","position":{"start":{"line":82,"column":174,"offset":2281},"end":{"line":82,"column":193,"offset":2300},"indent":[]}},{"type":"text","value":", etc) which manipulate the value stored in a TensorFlow variable.\n\"\"\"","position":{"start":{"line":82,"column":193,"offset":2300},"end":{"line":83,"column":4,"offset":2370},"indent":[1]}}],"position":{"start":{"line":82,"column":1,"offset":2108},"end":{"line":83,"column":4,"offset":2370},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"v = tf.Variable(1.0)\nassert v.numpy() == 1.0","position":{"start":{"line":85,"column":1,"offset":2372},"end":{"line":86,"column":24,"offset":2416},"indent":[1]}}],"position":{"start":{"line":85,"column":1,"offset":2372},"end":{"line":86,"column":24,"offset":2416},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#re-assign-the-value","title":null,"data":{"hProperties":{"aria-label":"re assign the value permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Re-assign the value","position":{"start":{"line":88,"column":3,"offset":2420},"end":{"line":88,"column":22,"offset":2439},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":2418},"end":{"line":88,"column":22,"offset":2439},"indent":[]},"data":{"id":"re-assign-the-value","htmlAttributes":{"id":"re-assign-the-value"},"hProperties":{"id":"re-assign-the-value"}}},{"type":"paragraph","children":[{"type":"text","value":"v.assign(3.0)\nassert v.numpy() == 3.0","position":{"start":{"line":89,"column":1,"offset":2440},"end":{"line":90,"column":24,"offset":2477},"indent":[1]}}],"position":{"start":{"line":89,"column":1,"offset":2440},"end":{"line":90,"column":24,"offset":2477},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","title":null,"data":{"hProperties":{"aria-label":"use v in a tensorflow operation like tfsquare and reassign permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Use ","position":{"start":{"line":92,"column":3,"offset":2481},"end":{"line":92,"column":7,"offset":2485},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">v</code>","position":{"start":{"line":92,"column":7,"offset":2485},"end":{"line":92,"column":10,"offset":2488},"indent":[]}},{"type":"text","value":" in a TensorFlow operation like tf.square() and reassign","position":{"start":{"line":92,"column":10,"offset":2488},"end":{"line":92,"column":66,"offset":2544},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2479},"end":{"line":92,"column":66,"offset":2544},"indent":[]},"data":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","htmlAttributes":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"},"hProperties":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"}}},{"type":"paragraph","children":[{"type":"text","value":"v.assign(tf.square(v))\nassert v.numpy() == 9.0","position":{"start":{"line":93,"column":1,"offset":2545},"end":{"line":94,"column":24,"offset":2591},"indent":[1]}}],"position":{"start":{"line":93,"column":1,"offset":2545},"end":{"line":94,"column":24,"offset":2591},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"Computations using Variables are automatically traced when computing gradients. For Variables representing embeddings TensorFlow will do sparse updates by default, which are more computation and memory efficient.","position":{"start":{"line":96,"column":1,"offset":2593},"end":{"line":96,"column":216,"offset":2808},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2593},"end":{"line":96,"column":216,"offset":2808},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using Variables is also a way to quickly let a reader of your code know that this piece of state is mutable.","position":{"start":{"line":98,"column":1,"offset":2810},"end":{"line":98,"column":109,"offset":2918},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":2810},"end":{"line":98,"column":109,"offset":2918},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#example-fitting-a-linear-model","title":null,"data":{"hProperties":{"aria-label":"example fitting a linear model permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Example: Fitting a linear model","position":{"start":{"line":100,"column":4,"offset":2923},"end":{"line":100,"column":35,"offset":2954},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":2920},"end":{"line":100,"column":35,"offset":2954},"indent":[]},"data":{"id":"example-fitting-a-linear-model","htmlAttributes":{"id":"example-fitting-a-linear-model"},"hProperties":{"id":"example-fitting-a-linear-model"}}},{"type":"paragraph","children":[{"type":"text","value":"Let's now put the few concepts we have so far ---","position":{"start":{"line":102,"column":1,"offset":2956},"end":{"line":102,"column":50,"offset":3005},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Tensor</code>","position":{"start":{"line":102,"column":50,"offset":3005},"end":{"line":102,"column":58,"offset":3013},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":102,"column":58,"offset":3013},"end":{"line":102,"column":60,"offset":3015},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">GradientTape</code>","position":{"start":{"line":102,"column":60,"offset":3015},"end":{"line":102,"column":74,"offset":3029},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":102,"column":74,"offset":3029},"end":{"line":102,"column":76,"offset":3031},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":102,"column":76,"offset":3031},"end":{"line":102,"column":86,"offset":3041},"indent":[]}},{"type":"text","value":" --- to build and train a simple model. This typically involves a few steps:","position":{"start":{"line":102,"column":86,"offset":3041},"end":{"line":102,"column":162,"offset":3117},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2956},"end":{"line":102,"column":162,"offset":3117},"indent":[]}},{"type":"list","ordered":true,"start":1,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define the model.","position":{"start":{"line":104,"column":4,"offset":3122},"end":{"line":104,"column":21,"offset":3139},"indent":[]}}],"position":{"start":{"line":104,"column":4,"offset":3122},"end":{"line":104,"column":21,"offset":3139},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3119},"end":{"line":104,"column":21,"offset":3139},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define a loss function.","position":{"start":{"line":105,"column":4,"offset":3143},"end":{"line":105,"column":27,"offset":3166},"indent":[]}}],"position":{"start":{"line":105,"column":4,"offset":3143},"end":{"line":105,"column":27,"offset":3166},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3140},"end":{"line":105,"column":27,"offset":3166},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Obtain training data.","position":{"start":{"line":106,"column":4,"offset":3170},"end":{"line":106,"column":25,"offset":3191},"indent":[]}}],"position":{"start":{"line":106,"column":4,"offset":3170},"end":{"line":106,"column":25,"offset":3191},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3167},"end":{"line":106,"column":25,"offset":3191},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Run through the training data and use an \"optimizer\" to adjust the variables to fit the data.","position":{"start":{"line":107,"column":4,"offset":3195},"end":{"line":107,"column":97,"offset":3288},"indent":[]}}],"position":{"start":{"line":107,"column":4,"offset":3195},"end":{"line":107,"column":97,"offset":3288},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3192},"end":{"line":107,"column":97,"offset":3288},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3119},"end":{"line":107,"column":97,"offset":3288},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this tutorial, we'll walk through a trivial example of a simple linear model: ","position":{"start":{"line":109,"column":1,"offset":3290},"end":{"line":109,"column":82,"offset":3371},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f(x) = x * W + b</code>","position":{"start":{"line":109,"column":82,"offset":3371},"end":{"line":109,"column":100,"offset":3389},"indent":[]}},{"type":"text","value":", which has two variables - ","position":{"start":{"line":109,"column":100,"offset":3389},"end":{"line":109,"column":128,"offset":3417},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":109,"column":128,"offset":3417},"end":{"line":109,"column":131,"offset":3420},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":109,"column":131,"offset":3420},"end":{"line":109,"column":136,"offset":3425},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":109,"column":136,"offset":3425},"end":{"line":109,"column":139,"offset":3428},"indent":[]}},{"type":"text","value":". Furthermore, we'll synthesize data such that a well trained model would have ","position":{"start":{"line":109,"column":139,"offset":3428},"end":{"line":109,"column":218,"offset":3507},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W = 3.0</code>","position":{"start":{"line":109,"column":218,"offset":3507},"end":{"line":109,"column":227,"offset":3516},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":109,"column":227,"offset":3516},"end":{"line":109,"column":232,"offset":3521},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b = 2.0</code>","position":{"start":{"line":109,"column":232,"offset":3521},"end":{"line":109,"column":241,"offset":3530},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":109,"column":241,"offset":3530},"end":{"line":109,"column":242,"offset":3531},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3290},"end":{"line":109,"column":242,"offset":3531},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#define-the-model","title":null,"data":{"hProperties":{"aria-label":"define the model permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Define the model","position":{"start":{"line":111,"column":5,"offset":3537},"end":{"line":111,"column":21,"offset":3553},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":3533},"end":{"line":111,"column":21,"offset":3553},"indent":[]},"data":{"id":"define-the-model","htmlAttributes":{"id":"define-the-model"},"hProperties":{"id":"define-the-model"}}},{"type":"paragraph","children":[{"type":"text","value":"Let's define a simple class to encapsulate the variables and the computation.\n\"\"\"","position":{"start":{"line":113,"column":1,"offset":3555},"end":{"line":114,"column":4,"offset":3636},"indent":[1]}}],"position":{"start":{"line":113,"column":1,"offset":3555},"end":{"line":114,"column":4,"offset":3636},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"class Model(object):\n  def ","position":{"start":{"line":116,"column":1,"offset":3638},"end":{"line":117,"column":7,"offset":3665},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"init","position":{"start":{"line":117,"column":9,"offset":3667},"end":{"line":117,"column":13,"offset":3671},"indent":[]}}],"position":{"start":{"line":117,"column":7,"offset":3665},"end":{"line":117,"column":15,"offset":3673},"indent":[]}},{"type":"text","value":"(self):\n    # Initialize variable to (5.0, 0.0)\n    # In practice, these should be initialized to random values.\n    self.W = tf.Variable(5.0)\n    self.b = tf.Variable(0.0)","position":{"start":{"line":117,"column":15,"offset":3673},"end":{"line":121,"column":30,"offset":3845},"indent":[1,1,1,1]}}],"position":{"start":{"line":116,"column":1,"offset":3638},"end":{"line":121,"column":30,"offset":3845},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"  def ","position":{"start":{"line":123,"column":1,"offset":3847},"end":{"line":123,"column":7,"offset":3853},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"call","position":{"start":{"line":123,"column":9,"offset":3855},"end":{"line":123,"column":13,"offset":3859},"indent":[]}}],"position":{"start":{"line":123,"column":7,"offset":3853},"end":{"line":123,"column":15,"offset":3861},"indent":[]}},{"type":"text","value":"(self, x):\n    return self.W * x + self.b","position":{"start":{"line":123,"column":15,"offset":3861},"end":{"line":124,"column":31,"offset":3902},"indent":[1]}}],"position":{"start":{"line":123,"column":1,"offset":3847},"end":{"line":124,"column":31,"offset":3902},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"model = Model()","position":{"start":{"line":126,"column":1,"offset":3904},"end":{"line":126,"column":16,"offset":3919},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":3904},"end":{"line":126,"column":16,"offset":3919},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"assert model(3.0).numpy() == 15.0","position":{"start":{"line":128,"column":1,"offset":3921},"end":{"line":128,"column":34,"offset":3954},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":3921},"end":{"line":128,"column":34,"offset":3954},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"### Define a loss function","position":{"start":{"line":130,"column":1,"offset":3956},"end":{"line":130,"column":30,"offset":3985},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":3956},"end":{"line":130,"column":30,"offset":3985},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A loss function measures how well the output of a model for a given input matches the desired output. Let's use the standard L2 loss.\n\"\"\"","position":{"start":{"line":132,"column":1,"offset":3987},"end":{"line":133,"column":4,"offset":4124},"indent":[1]}}],"position":{"start":{"line":132,"column":1,"offset":3987},"end":{"line":133,"column":4,"offset":4124},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"def loss(predicted","position":{"start":{"line":135,"column":1,"offset":4126},"end":{"line":135,"column":19,"offset":4144},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"y, desired","position":{"start":{"line":135,"column":20,"offset":4145},"end":{"line":135,"column":30,"offset":4155},"indent":[]}}],"position":{"start":{"line":135,"column":19,"offset":4144},"end":{"line":135,"column":31,"offset":4156},"indent":[]}},{"type":"text","value":"y):\n  return tf.reduce","position":{"start":{"line":135,"column":31,"offset":4156},"end":{"line":136,"column":19,"offset":4178},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"mean(tf.square(predicted","position":{"start":{"line":136,"column":20,"offset":4179},"end":{"line":136,"column":44,"offset":4203},"indent":[]}}],"position":{"start":{"line":136,"column":19,"offset":4178},"end":{"line":136,"column":45,"offset":4204},"indent":[]}},{"type":"text","value":"y - desired_y))","position":{"start":{"line":136,"column":45,"offset":4204},"end":{"line":136,"column":60,"offset":4219},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":4126},"end":{"line":136,"column":60,"offset":4219},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"### Obtain training data","position":{"start":{"line":138,"column":1,"offset":4221},"end":{"line":138,"column":28,"offset":4248},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4221},"end":{"line":138,"column":28,"offset":4248},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's synthesize the training data with some noise.\n\"\"\"","position":{"start":{"line":140,"column":1,"offset":4250},"end":{"line":141,"column":4,"offset":4305},"indent":[1]}}],"position":{"start":{"line":140,"column":1,"offset":4250},"end":{"line":141,"column":4,"offset":4305},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"TRUE","position":{"start":{"line":143,"column":1,"offset":4307},"end":{"line":143,"column":5,"offset":4311},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"W = 3.0\nTRUE","position":{"start":{"line":143,"column":6,"offset":4312},"end":{"line":144,"column":5,"offset":4324},"indent":[1]}}],"position":{"start":{"line":143,"column":5,"offset":4311},"end":{"line":144,"column":6,"offset":4325},"indent":[1]}},{"type":"text","value":"b = 2.0\nNUM_EXAMPLES = 1000","position":{"start":{"line":144,"column":6,"offset":4325},"end":{"line":145,"column":20,"offset":4352},"indent":[1]}}],"position":{"start":{"line":143,"column":1,"offset":4307},"end":{"line":145,"column":20,"offset":4352},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"inputs  = tf.random","position":{"start":{"line":147,"column":1,"offset":4354},"end":{"line":147,"column":20,"offset":4373},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":147,"column":21,"offset":4374},"end":{"line":147,"column":38,"offset":4391},"indent":[]}}],"position":{"start":{"line":147,"column":20,"offset":4373},"end":{"line":147,"column":39,"offset":4392},"indent":[]}},{"type":"text","value":"EXAMPLES])\nnoise   = tf.random","position":{"start":{"line":147,"column":39,"offset":4392},"end":{"line":148,"column":20,"offset":4422},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":148,"column":21,"offset":4423},"end":{"line":148,"column":38,"offset":4440},"indent":[]}}],"position":{"start":{"line":148,"column":20,"offset":4422},"end":{"line":148,"column":39,"offset":4441},"indent":[]}},{"type":"text","value":"EXAMPLES])\noutputs = inputs * TRUE","position":{"start":{"line":148,"column":39,"offset":4441},"end":{"line":149,"column":24,"offset":4475},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"W + TRUE","position":{"start":{"line":149,"column":25,"offset":4476},"end":{"line":149,"column":33,"offset":4484},"indent":[]}}],"position":{"start":{"line":149,"column":24,"offset":4475},"end":{"line":149,"column":34,"offset":4485},"indent":[]}},{"type":"text","value":"b + noise","position":{"start":{"line":149,"column":34,"offset":4485},"end":{"line":149,"column":43,"offset":4494},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":4354},"end":{"line":149,"column":43,"offset":4494},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"Before we train the model let's visualize where the model stands right now. We'll plot the model's predictions in red and the training data in blue.\"\"\"","position":{"start":{"line":151,"column":1,"offset":4496},"end":{"line":151,"column":155,"offset":4650},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":4496},"end":{"line":151,"column":155,"offset":4650},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import matplotlib.pyplot as plt","position":{"start":{"line":153,"column":1,"offset":4652},"end":{"line":153,"column":32,"offset":4683},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":4652},"end":{"line":153,"column":32,"offset":4683},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"plt.scatter(inputs, outputs, c='b')\nplt.scatter(inputs, model(inputs), c='r')\nplt.show()","position":{"start":{"line":155,"column":1,"offset":4685},"end":{"line":157,"column":11,"offset":4773},"indent":[1,1]}}],"position":{"start":{"line":155,"column":1,"offset":4685},"end":{"line":157,"column":11,"offset":4773},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"print('Current loss: '),\nprint(loss(model(inputs), outputs).numpy())","position":{"start":{"line":159,"column":1,"offset":4775},"end":{"line":160,"column":44,"offset":4843},"indent":[1]}}],"position":{"start":{"line":159,"column":1,"offset":4775},"end":{"line":160,"column":44,"offset":4843},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"### Define a training loop","position":{"start":{"line":162,"column":1,"offset":4845},"end":{"line":162,"column":30,"offset":4874},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":4845},"end":{"line":162,"column":30,"offset":4874},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We now have our network and our training data. Let's train it, i.e., use the training data to update the model's variables (","position":{"start":{"line":164,"column":1,"offset":4876},"end":{"line":164,"column":125,"offset":5000},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":164,"column":125,"offset":5000},"end":{"line":164,"column":128,"offset":5003},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":164,"column":128,"offset":5003},"end":{"line":164,"column":133,"offset":5008},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":164,"column":133,"offset":5008},"end":{"line":164,"column":136,"offset":5011},"indent":[]}},{"type":"text","value":") so that the loss goes down using ","position":{"start":{"line":164,"column":136,"offset":5011},"end":{"line":164,"column":171,"offset":5046},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Gradient_descent","children":[{"type":"text","value":"gradient descent","position":{"start":{"line":164,"column":172,"offset":5047},"end":{"line":164,"column":188,"offset":5063},"indent":[]}}],"position":{"start":{"line":164,"column":171,"offset":5046},"end":{"line":164,"column":237,"offset":5112},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":". There are many variants of the gradient descent scheme that are captured in ","position":{"start":{"line":164,"column":237,"offset":5112},"end":{"line":164,"column":315,"offset":5190},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">tf.train.Optimizer</code>","position":{"start":{"line":164,"column":315,"offset":5190},"end":{"line":164,"column":335,"offset":5210},"indent":[]}},{"type":"text","value":" implementations. We'd highly recommend using those implementations, but in the spirit of building from first principles, in this particular example we will implement the basic math ourselves.\n\"\"\"","position":{"start":{"line":164,"column":335,"offset":5210},"end":{"line":165,"column":4,"offset":5406},"indent":[1]}}],"position":{"start":{"line":164,"column":1,"offset":4876},"end":{"line":165,"column":4,"offset":5406},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"def train(model, inputs, outputs, learning","position":{"start":{"line":167,"column":1,"offset":5408},"end":{"line":167,"column":43,"offset":5450},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"rate):\n  with tf.GradientTape() as t:\n    current","position":{"start":{"line":167,"column":44,"offset":5451},"end":{"line":169,"column":12,"offset":5500},"indent":[1,1]}}],"position":{"start":{"line":167,"column":43,"offset":5450},"end":{"line":169,"column":13,"offset":5501},"indent":[1,1]}},{"type":"text","value":"loss = loss(model(inputs), outputs)\n  dW, db = t.gradient(current","position":{"start":{"line":169,"column":13,"offset":5501},"end":{"line":170,"column":30,"offset":5566},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"loss, ","position":{"start":{"line":170,"column":31,"offset":5567},"end":{"line":170,"column":37,"offset":5573},"indent":[]}},{"type":"linkReference","identifier":"model.w, model.b","referenceType":"shortcut","children":[{"type":"text","value":"model.W, model.b","position":{"start":{"line":170,"column":38,"offset":5574},"end":{"line":170,"column":54,"offset":5590},"indent":[]}}],"position":{"start":{"line":170,"column":37,"offset":5573},"end":{"line":170,"column":55,"offset":5591},"indent":[]}},{"type":"text","value":")\n  model.W.assign","position":{"start":{"line":170,"column":55,"offset":5591},"end":{"line":171,"column":17,"offset":5609},"indent":[1]}}],"position":{"start":{"line":170,"column":30,"offset":5566},"end":{"line":171,"column":18,"offset":5610},"indent":[1]}},{"type":"text","value":"sub(learning","position":{"start":{"line":171,"column":18,"offset":5610},"end":{"line":171,"column":30,"offset":5622},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"rate * dW)\n  model.b.assign","position":{"start":{"line":171,"column":31,"offset":5623},"end":{"line":172,"column":17,"offset":5650},"indent":[1]}}],"position":{"start":{"line":171,"column":30,"offset":5622},"end":{"line":172,"column":18,"offset":5651},"indent":[1]}},{"type":"text","value":"sub(learning_rate * db)","position":{"start":{"line":172,"column":18,"offset":5651},"end":{"line":172,"column":41,"offset":5674},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":5408},"end":{"line":172,"column":41,"offset":5674},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"Finally, let's repeatedly run through the training data and see how ","position":{"start":{"line":174,"column":1,"offset":5676},"end":{"line":174,"column":72,"offset":5747},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":174,"column":72,"offset":5747},"end":{"line":174,"column":75,"offset":5750},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":174,"column":75,"offset":5750},"end":{"line":174,"column":80,"offset":5755},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":174,"column":80,"offset":5755},"end":{"line":174,"column":83,"offset":5758},"indent":[]}},{"type":"text","value":" evolve.\"\"\"","position":{"start":{"line":174,"column":83,"offset":5758},"end":{"line":174,"column":94,"offset":5769},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":5676},"end":{"line":174,"column":94,"offset":5769},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"model = Model()","position":{"start":{"line":176,"column":1,"offset":5771},"end":{"line":176,"column":16,"offset":5786},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":5771},"end":{"line":176,"column":16,"offset":5786},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#collect-the-history-of-w-values-and-b-values-to-plot-later","title":null,"data":{"hProperties":{"aria-label":"collect the history of w values and b values to plot later permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Collect the history of W-values and b-values to plot later","position":{"start":{"line":178,"column":3,"offset":5790},"end":{"line":178,"column":61,"offset":5848},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":5788},"end":{"line":178,"column":61,"offset":5848},"indent":[]},"data":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later","htmlAttributes":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"},"hProperties":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"}}},{"type":"paragraph","children":[{"type":"text","value":"Ws, bs = [], []\nepochs = range(10)\nfor epoch in epochs:\n  Ws.append(model.W.numpy())\n  bs.append(model.b.numpy())\n  current_loss = loss(model(inputs), outputs)","position":{"start":{"line":179,"column":1,"offset":5849},"end":{"line":184,"column":46,"offset":6008},"indent":[1,1,1,1,1]}}],"position":{"start":{"line":179,"column":1,"offset":5849},"end":{"line":184,"column":46,"offset":6008},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"  train(model, inputs, outputs, learning","position":{"start":{"line":186,"column":1,"offset":6010},"end":{"line":186,"column":41,"offset":6050},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"rate=0.1)\n  print('Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f' %\n        (epoch, Ws","position":{"start":{"line":186,"column":42,"offset":6051},"end":{"line":188,"column":19,"offset":6130},"indent":[1,1]}},{"type":"linkReference","identifier":"-1","referenceType":"shortcut","children":[{"type":"text","value":"-1","position":{"start":{"line":188,"column":20,"offset":6131},"end":{"line":188,"column":22,"offset":6133},"indent":[]}}],"position":{"start":{"line":188,"column":19,"offset":6130},"end":{"line":188,"column":23,"offset":6134},"indent":[]}},{"type":"text","value":", bs","position":{"start":{"line":188,"column":23,"offset":6134},"end":{"line":188,"column":27,"offset":6138},"indent":[]}},{"type":"linkReference","identifier":"-1","referenceType":"shortcut","children":[{"type":"text","value":"-1","position":{"start":{"line":188,"column":28,"offset":6139},"end":{"line":188,"column":30,"offset":6141},"indent":[]}}],"position":{"start":{"line":188,"column":27,"offset":6138},"end":{"line":188,"column":31,"offset":6142},"indent":[]}},{"type":"text","value":", current","position":{"start":{"line":188,"column":31,"offset":6142},"end":{"line":188,"column":40,"offset":6151},"indent":[]}}],"position":{"start":{"line":186,"column":41,"offset":6050},"end":{"line":188,"column":41,"offset":6152},"indent":[1,1]}},{"type":"text","value":"loss))","position":{"start":{"line":188,"column":41,"offset":6152},"end":{"line":188,"column":47,"offset":6158},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":6010},"end":{"line":188,"column":47,"offset":6158},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#lets-plot-it-all","title":null,"data":{"hProperties":{"aria-label":"lets plot it all permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Let's plot it all","position":{"start":{"line":190,"column":3,"offset":6162},"end":{"line":190,"column":20,"offset":6179},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":6160},"end":{"line":190,"column":20,"offset":6179},"indent":[]},"data":{"id":"lets-plot-it-all","htmlAttributes":{"id":"lets-plot-it-all"},"hProperties":{"id":"lets-plot-it-all"}}},{"type":"paragraph","children":[{"type":"text","value":"plt.plot(epochs, Ws, 'r',\n         epochs, bs, 'b')\nplt.plot(","position":{"start":{"line":191,"column":1,"offset":6180},"end":{"line":193,"column":10,"offset":6241},"indent":[1,1]}},{"type":"linkReference","identifier":"true_w","referenceType":"shortcut","children":[{"type":"text","value":"TRUE_W","position":{"start":{"line":193,"column":11,"offset":6242},"end":{"line":193,"column":17,"offset":6248},"indent":[]}}],"position":{"start":{"line":193,"column":10,"offset":6241},"end":{"line":193,"column":18,"offset":6249},"indent":[]}},{"type":"text","value":" * len(epochs), 'r--',\n         ","position":{"start":{"line":193,"column":18,"offset":6249},"end":{"line":194,"column":10,"offset":6281},"indent":[1]}},{"type":"linkReference","identifier":"true_b","referenceType":"shortcut","children":[{"type":"text","value":"TRUE_b","position":{"start":{"line":194,"column":11,"offset":6282},"end":{"line":194,"column":17,"offset":6288},"indent":[]}}],"position":{"start":{"line":194,"column":10,"offset":6281},"end":{"line":194,"column":18,"offset":6289},"indent":[]}},{"type":"text","value":" * len(epochs), 'b--')\nplt.legend(","position":{"start":{"line":194,"column":18,"offset":6289},"end":{"line":195,"column":12,"offset":6323},"indent":[1]}},{"type":"linkReference","identifier":"'w', 'b', 'true w', 'true_b'","referenceType":"shortcut","children":[{"type":"text","value":"'W', 'b', 'true W', 'true_b'","position":{"start":{"line":195,"column":13,"offset":6324},"end":{"line":195,"column":41,"offset":6352},"indent":[]}}],"position":{"start":{"line":195,"column":12,"offset":6323},"end":{"line":195,"column":42,"offset":6353},"indent":[]}},{"type":"text","value":")\nplt.show()","position":{"start":{"line":195,"column":42,"offset":6353},"end":{"line":196,"column":11,"offset":6365},"indent":[1]}}],"position":{"start":{"line":191,"column":1,"offset":6180},"end":{"line":196,"column":11,"offset":6365},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"## Next Steps","position":{"start":{"line":198,"column":1,"offset":6367},"end":{"line":198,"column":17,"offset":6383},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":6367},"end":{"line":198,"column":17,"offset":6383},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this tutorial we covered ","position":{"start":{"line":200,"column":1,"offset":6385},"end":{"line":200,"column":29,"offset":6413},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":200,"column":29,"offset":6413},"end":{"line":200,"column":39,"offset":6423},"indent":[]}},{"type":"text","value":"s and built and trained a simple linear model using the TensorFlow primitives discussed so far.","position":{"start":{"line":200,"column":39,"offset":6423},"end":{"line":200,"column":134,"offset":6518},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":6385},"end":{"line":200,"column":134,"offset":6518},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In theory, this is pretty much all you need to use TensorFlow for your machine learning research.\nIn practice, particularly for neural networks, the higher level APIs like ","position":{"start":{"line":202,"column":1,"offset":6520},"end":{"line":203,"column":75,"offset":6692},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">tf.keras</code>","position":{"start":{"line":203,"column":75,"offset":6692},"end":{"line":203,"column":85,"offset":6702},"indent":[]}},{"type":"text","value":" will be much more convenient since it provides higher level building blocks (called \"layers\"), utilities to save and restore state, a suite of loss functions, a suite of optimization strategies etc.\n\"\"\"","position":{"start":{"line":203,"column":85,"offset":6702},"end":{"line":204,"column":4,"offset":6905},"indent":[1]}}],"position":{"start":{"line":202,"column":1,"offset":6520},"end":{"line":204,"column":4,"offset":6905},"indent":[1,1]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":206,"column":1,"offset":6907},"end":{"line":210,"column":1,"offset":6914},"indent":[1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":210,"column":1,"offset":6914}}}}