{"expireTime":9007200813389756000,"key":"transformer-remark-markdown-ast-e6290427d0e46dc6d43911a69afa0376-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"link","url":"#basic-operations","title":null,"data":{"hProperties":{"aria-label":"basic operations permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Basic Operations","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":20,"offset":19},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19},"indent":[]},"data":{"id":"basic-operations","htmlAttributes":{"id":"basic-operations"},"hProperties":{"id":"basic-operations"}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#initilize-tensors","title":null,"data":{"hProperties":{"aria-label":"initilize tensors permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"initilize tensors","position":{"start":{"line":3,"column":5,"offset":25},"end":{"line":3,"column":22,"offset":42},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":23,"offset":43},"indent":[]},"data":{"id":"initilize-tensors","htmlAttributes":{"id":"initilize-tensors"},"hProperties":{"id":"initilize-tensors"}}},{"type":"paragraph","children":[{"type":"text","value":"(10,10) array with zero elements","position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Using python state\nx = tf.zeros([10, 10])\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":79},"end":{"line":13,"column":4,"offset":238},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#initilize-tensors-1","title":null,"data":{"hProperties":{"aria-label":"initilize tensors 1 permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"initilize tensors","position":{"start":{"line":15,"column":5,"offset":244},"end":{"line":15,"column":22,"offset":261},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":15,"column":23,"offset":262},"indent":[]},"data":{"id":"initilize-tensors-1","htmlAttributes":{"id":"initilize-tensors-1"},"hProperties":{"id":"initilize-tensors-1"}}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import tensorflow as tf\nimport numpy \n\ntf.enable_eager_execution\n\nprint(tf.add(1, 2))\nprint(tf.add([1, 2], [3, 4]))\nprint(tf.square(5))\nprint(tf.reduce_sum([1, 2, 3]))\nprint(tf.encode_base64(&quot;hello world&quot;))\n\n# Operator overloading is also supported\nprint(tf.square(2) + tf.square(3))\n\nx = tf.matmul([[1]], [[2, 3]])\nprint(x.shape)\nprint(x.dtype)\n\nndarray = np.ones([3, 3])\n\nprint(&quot;TensorFlow operations convert numpy arrays to Tensors automatically&quot;)\ntensor = tf.multiply(ndarray, 42)\nprint(tensor)\n\nprint(&quot;And NumPy operations convert Tensors to numpy arrays automatically&quot;)\nprint(np.add(tensor, 1))\n\nprint(&quot;The .numpy() method explicitly converts a Tensor to a numpy array&quot;)\nprint(tensor.numpy())</code></pre></div>","position":{"start":{"line":17,"column":1,"offset":264},"end":{"line":47,"column":4,"offset":970},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#a-small-script-to-show-a-custom-training-using","title":null,"data":{"hProperties":{"aria-label":"a small script to show a custom training using permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"A small script to show a custom training using","position":{"start":{"line":52,"column":5,"offset":979},"end":{"line":52,"column":51,"offset":1025},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":975},"end":{"line":52,"column":52,"offset":1026},"indent":[]},"data":{"id":"a-small-script-to-show-a-custom-training-using","htmlAttributes":{"id":"a-small-script-to-show-a-custom-training-using"},"hProperties":{"id":"a-small-script-to-show-a-custom-training-using"}}},{"type":"paragraph","children":[{"type":"text","value":"*class,  assert, plot","position":{"start":{"line":54,"column":1,"offset":1028},"end":{"line":54,"column":22,"offset":1049},"indent":[]}},{"type":"break","position":{"start":{"line":54,"column":22,"offset":1049},"end":{"line":55,"column":1,"offset":1052},"indent":[1]}},{"type":"text","value":"*variable, gradient, and loss","position":{"start":{"line":55,"column":1,"offset":1052},"end":{"line":55,"column":30,"offset":1081},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1028},"end":{"line":55,"column":30,"offset":1081},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"# Custom training: basics\n\"\"\"","position":{"start":{"line":58,"column":1,"offset":1084},"end":{"line":59,"column":4,"offset":1116},"indent":[1]}}],"position":{"start":{"line":58,"column":1,"offset":1084},"end":{"line":59,"column":4,"offset":1116},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"from ","position":{"start":{"line":61,"column":1,"offset":1118},"end":{"line":61,"column":6,"offset":1123},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"future","position":{"start":{"line":61,"column":8,"offset":1125},"end":{"line":61,"column":14,"offset":1131},"indent":[]}}],"position":{"start":{"line":61,"column":6,"offset":1123},"end":{"line":61,"column":16,"offset":1133},"indent":[]}},{"type":"text","value":" import absolute","position":{"start":{"line":61,"column":16,"offset":1133},"end":{"line":61,"column":32,"offset":1149},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"import, division, print","position":{"start":{"line":61,"column":33,"offset":1150},"end":{"line":61,"column":56,"offset":1173},"indent":[]}}],"position":{"start":{"line":61,"column":32,"offset":1149},"end":{"line":61,"column":57,"offset":1174},"indent":[]}},{"type":"text","value":"function, unicode_literals","position":{"start":{"line":61,"column":57,"offset":1174},"end":{"line":61,"column":83,"offset":1200},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1118},"end":{"line":61,"column":83,"offset":1200},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import tensorflow as tf","position":{"start":{"line":63,"column":1,"offset":1202},"end":{"line":63,"column":24,"offset":1225},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1202},"end":{"line":63,"column":24,"offset":1225},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"tf.enable","position":{"start":{"line":65,"column":1,"offset":1227},"end":{"line":65,"column":10,"offset":1236},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"eager","position":{"start":{"line":65,"column":11,"offset":1237},"end":{"line":65,"column":16,"offset":1242},"indent":[]}}],"position":{"start":{"line":65,"column":10,"offset":1236},"end":{"line":65,"column":17,"offset":1243},"indent":[]}},{"type":"text","value":"execution()","position":{"start":{"line":65,"column":17,"offset":1243},"end":{"line":65,"column":28,"offset":1254},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1227},"end":{"line":65,"column":28,"offset":1254},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"## Variables","position":{"start":{"line":67,"column":1,"offset":1256},"end":{"line":67,"column":16,"offset":1271},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1256},"end":{"line":67,"column":16,"offset":1271},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Tensors in TensorFlow are immutable stateless objects. Machine learning models, however, need to have changing state: as your model trains, the same code to compute predictions should behave differently over time (hopefully with a lower loss!). To represent this state which needs to change over the course of your computation, you can choose to rely on the fact that Python is a stateful programming language:\n\"\"\"","position":{"start":{"line":69,"column":1,"offset":1273},"end":{"line":70,"column":4,"offset":1687},"indent":[1]}}],"position":{"start":{"line":69,"column":1,"offset":1273},"end":{"line":70,"column":4,"offset":1687},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#using-python-state","title":null,"data":{"hProperties":{"aria-label":"using python state permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Using python state","position":{"start":{"line":72,"column":3,"offset":1691},"end":{"line":72,"column":21,"offset":1709},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1689},"end":{"line":72,"column":21,"offset":1709},"indent":[]},"data":{"id":"using-python-state","htmlAttributes":{"id":"using-python-state"},"hProperties":{"id":"using-python-state"}}},{"type":"paragraph","children":[{"type":"text","value":"x = tf.zeros(","position":{"start":{"line":73,"column":1,"offset":1710},"end":{"line":73,"column":14,"offset":1723},"indent":[]}},{"type":"linkReference","identifier":"10, 10","referenceType":"shortcut","children":[{"type":"text","value":"10, 10","position":{"start":{"line":73,"column":15,"offset":1724},"end":{"line":73,"column":21,"offset":1730},"indent":[]}}],"position":{"start":{"line":73,"column":14,"offset":1723},"end":{"line":73,"column":22,"offset":1731},"indent":[]}},{"type":"text","value":")\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)","position":{"start":{"line":73,"column":22,"offset":1731},"end":{"line":76,"column":9,"offset":1840},"indent":[1,1,1]}}],"position":{"start":{"line":73,"column":1,"offset":1710},"end":{"line":76,"column":9,"offset":1840},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"TensorFlow, however, has stateful operations built in, and these are often more pleasant to use than low-level Python representations of your state. To represent weights in a model, for example, it's often convenient and efficient to use TensorFlow variables.","position":{"start":{"line":78,"column":1,"offset":1842},"end":{"line":78,"column":263,"offset":2104},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":1842},"end":{"line":78,"column":263,"offset":2104},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A Variable is an object which stores a value and, when used in a TensorFlow computation, will implicitly read from this stored value. There are operations (","position":{"start":{"line":80,"column":1,"offset":2106},"end":{"line":80,"column":157,"offset":2262},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">tf.assign_sub</code>","position":{"start":{"line":80,"column":157,"offset":2262},"end":{"line":80,"column":172,"offset":2277},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":80,"column":172,"offset":2277},"end":{"line":80,"column":174,"offset":2279},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">tf.scatter_update</code>","position":{"start":{"line":80,"column":174,"offset":2279},"end":{"line":80,"column":193,"offset":2298},"indent":[]}},{"type":"text","value":", etc) which manipulate the value stored in a TensorFlow variable.\n\"\"\"","position":{"start":{"line":80,"column":193,"offset":2298},"end":{"line":81,"column":4,"offset":2368},"indent":[1]}}],"position":{"start":{"line":80,"column":1,"offset":2106},"end":{"line":81,"column":4,"offset":2368},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"v = tf.Variable(1.0)\nassert v.numpy() == 1.0","position":{"start":{"line":83,"column":1,"offset":2370},"end":{"line":84,"column":24,"offset":2414},"indent":[1]}}],"position":{"start":{"line":83,"column":1,"offset":2370},"end":{"line":84,"column":24,"offset":2414},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#re-assign-the-value","title":null,"data":{"hProperties":{"aria-label":"re assign the value permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Re-assign the value","position":{"start":{"line":86,"column":3,"offset":2418},"end":{"line":86,"column":22,"offset":2437},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2416},"end":{"line":86,"column":22,"offset":2437},"indent":[]},"data":{"id":"re-assign-the-value","htmlAttributes":{"id":"re-assign-the-value"},"hProperties":{"id":"re-assign-the-value"}}},{"type":"paragraph","children":[{"type":"text","value":"v.assign(3.0)\nassert v.numpy() == 3.0","position":{"start":{"line":87,"column":1,"offset":2438},"end":{"line":88,"column":24,"offset":2475},"indent":[1]}}],"position":{"start":{"line":87,"column":1,"offset":2438},"end":{"line":88,"column":24,"offset":2475},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","title":null,"data":{"hProperties":{"aria-label":"use v in a tensorflow operation like tfsquare and reassign permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Use ","position":{"start":{"line":90,"column":3,"offset":2479},"end":{"line":90,"column":7,"offset":2483},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">v</code>","position":{"start":{"line":90,"column":7,"offset":2483},"end":{"line":90,"column":10,"offset":2486},"indent":[]}},{"type":"text","value":" in a TensorFlow operation like tf.square() and reassign","position":{"start":{"line":90,"column":10,"offset":2486},"end":{"line":90,"column":66,"offset":2542},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2477},"end":{"line":90,"column":66,"offset":2542},"indent":[]},"data":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","htmlAttributes":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"},"hProperties":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"}}},{"type":"paragraph","children":[{"type":"text","value":"v.assign(tf.square(v))\nassert v.numpy() == 9.0","position":{"start":{"line":91,"column":1,"offset":2543},"end":{"line":92,"column":24,"offset":2589},"indent":[1]}}],"position":{"start":{"line":91,"column":1,"offset":2543},"end":{"line":92,"column":24,"offset":2589},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"Computations using Variables are automatically traced when computing gradients. For Variables representing embeddings TensorFlow will do sparse updates by default, which are more computation and memory efficient.","position":{"start":{"line":94,"column":1,"offset":2591},"end":{"line":94,"column":216,"offset":2806},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2591},"end":{"line":94,"column":216,"offset":2806},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using Variables is also a way to quickly let a reader of your code know that this piece of state is mutable.","position":{"start":{"line":96,"column":1,"offset":2808},"end":{"line":96,"column":109,"offset":2916},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2808},"end":{"line":96,"column":109,"offset":2916},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#example-fitting-a-linear-model","title":null,"data":{"hProperties":{"aria-label":"example fitting a linear model permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Example: Fitting a linear model","position":{"start":{"line":98,"column":4,"offset":2921},"end":{"line":98,"column":35,"offset":2952},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":2918},"end":{"line":98,"column":35,"offset":2952},"indent":[]},"data":{"id":"example-fitting-a-linear-model","htmlAttributes":{"id":"example-fitting-a-linear-model"},"hProperties":{"id":"example-fitting-a-linear-model"}}},{"type":"paragraph","children":[{"type":"text","value":"Let's now put the few concepts we have so far ---","position":{"start":{"line":100,"column":1,"offset":2954},"end":{"line":100,"column":50,"offset":3003},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Tensor</code>","position":{"start":{"line":100,"column":50,"offset":3003},"end":{"line":100,"column":58,"offset":3011},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":100,"column":58,"offset":3011},"end":{"line":100,"column":60,"offset":3013},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">GradientTape</code>","position":{"start":{"line":100,"column":60,"offset":3013},"end":{"line":100,"column":74,"offset":3027},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":100,"column":74,"offset":3027},"end":{"line":100,"column":76,"offset":3029},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":100,"column":76,"offset":3029},"end":{"line":100,"column":86,"offset":3039},"indent":[]}},{"type":"text","value":" --- to build and train a simple model. This typically involves a few steps:","position":{"start":{"line":100,"column":86,"offset":3039},"end":{"line":100,"column":162,"offset":3115},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":2954},"end":{"line":100,"column":162,"offset":3115},"indent":[]}},{"type":"list","ordered":true,"start":1,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define the model.","position":{"start":{"line":102,"column":4,"offset":3120},"end":{"line":102,"column":21,"offset":3137},"indent":[]}}],"position":{"start":{"line":102,"column":4,"offset":3120},"end":{"line":102,"column":21,"offset":3137},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3117},"end":{"line":102,"column":21,"offset":3137},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define a loss function.","position":{"start":{"line":103,"column":4,"offset":3141},"end":{"line":103,"column":27,"offset":3164},"indent":[]}}],"position":{"start":{"line":103,"column":4,"offset":3141},"end":{"line":103,"column":27,"offset":3164},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3138},"end":{"line":103,"column":27,"offset":3164},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Obtain training data.","position":{"start":{"line":104,"column":4,"offset":3168},"end":{"line":104,"column":25,"offset":3189},"indent":[]}}],"position":{"start":{"line":104,"column":4,"offset":3168},"end":{"line":104,"column":25,"offset":3189},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3165},"end":{"line":104,"column":25,"offset":3189},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Run through the training data and use an \"optimizer\" to adjust the variables to fit the data.","position":{"start":{"line":105,"column":4,"offset":3193},"end":{"line":105,"column":97,"offset":3286},"indent":[]}}],"position":{"start":{"line":105,"column":4,"offset":3193},"end":{"line":105,"column":97,"offset":3286},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3190},"end":{"line":105,"column":97,"offset":3286},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3117},"end":{"line":105,"column":97,"offset":3286},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this tutorial, we'll walk through a trivial example of a simple linear model: ","position":{"start":{"line":107,"column":1,"offset":3288},"end":{"line":107,"column":82,"offset":3369},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f(x) = x * W + b</code>","position":{"start":{"line":107,"column":82,"offset":3369},"end":{"line":107,"column":100,"offset":3387},"indent":[]}},{"type":"text","value":", which has two variables - ","position":{"start":{"line":107,"column":100,"offset":3387},"end":{"line":107,"column":128,"offset":3415},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":107,"column":128,"offset":3415},"end":{"line":107,"column":131,"offset":3418},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":107,"column":131,"offset":3418},"end":{"line":107,"column":136,"offset":3423},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":107,"column":136,"offset":3423},"end":{"line":107,"column":139,"offset":3426},"indent":[]}},{"type":"text","value":". Furthermore, we'll synthesize data such that a well trained model would have ","position":{"start":{"line":107,"column":139,"offset":3426},"end":{"line":107,"column":218,"offset":3505},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W = 3.0</code>","position":{"start":{"line":107,"column":218,"offset":3505},"end":{"line":107,"column":227,"offset":3514},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":107,"column":227,"offset":3514},"end":{"line":107,"column":232,"offset":3519},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b = 2.0</code>","position":{"start":{"line":107,"column":232,"offset":3519},"end":{"line":107,"column":241,"offset":3528},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":107,"column":241,"offset":3528},"end":{"line":107,"column":242,"offset":3529},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3288},"end":{"line":107,"column":242,"offset":3529},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#define-the-model","title":null,"data":{"hProperties":{"aria-label":"define the model permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Define the model","position":{"start":{"line":109,"column":5,"offset":3535},"end":{"line":109,"column":21,"offset":3551},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3531},"end":{"line":109,"column":21,"offset":3551},"indent":[]},"data":{"id":"define-the-model","htmlAttributes":{"id":"define-the-model"},"hProperties":{"id":"define-the-model"}}},{"type":"paragraph","children":[{"type":"text","value":"Let's define a simple class to encapsulate the variables and the computation.\n\"\"\"","position":{"start":{"line":111,"column":1,"offset":3553},"end":{"line":112,"column":4,"offset":3634},"indent":[1]}}],"position":{"start":{"line":111,"column":1,"offset":3553},"end":{"line":112,"column":4,"offset":3634},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"class Model(object):\n  def ","position":{"start":{"line":114,"column":1,"offset":3636},"end":{"line":115,"column":7,"offset":3663},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"init","position":{"start":{"line":115,"column":9,"offset":3665},"end":{"line":115,"column":13,"offset":3669},"indent":[]}}],"position":{"start":{"line":115,"column":7,"offset":3663},"end":{"line":115,"column":15,"offset":3671},"indent":[]}},{"type":"text","value":"(self):\n    # Initialize variable to (5.0, 0.0)\n    # In practice, these should be initialized to random values.\n    self.W = tf.Variable(5.0)\n    self.b = tf.Variable(0.0)","position":{"start":{"line":115,"column":15,"offset":3671},"end":{"line":119,"column":30,"offset":3843},"indent":[1,1,1,1]}}],"position":{"start":{"line":114,"column":1,"offset":3636},"end":{"line":119,"column":30,"offset":3843},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"  def ","position":{"start":{"line":121,"column":1,"offset":3845},"end":{"line":121,"column":7,"offset":3851},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"call","position":{"start":{"line":121,"column":9,"offset":3853},"end":{"line":121,"column":13,"offset":3857},"indent":[]}}],"position":{"start":{"line":121,"column":7,"offset":3851},"end":{"line":121,"column":15,"offset":3859},"indent":[]}},{"type":"text","value":"(self, x):\n    return self.W * x + self.b","position":{"start":{"line":121,"column":15,"offset":3859},"end":{"line":122,"column":31,"offset":3900},"indent":[1]}}],"position":{"start":{"line":121,"column":1,"offset":3845},"end":{"line":122,"column":31,"offset":3900},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"model = Model()","position":{"start":{"line":124,"column":1,"offset":3902},"end":{"line":124,"column":16,"offset":3917},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":3902},"end":{"line":124,"column":16,"offset":3917},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"assert model(3.0).numpy() == 15.0","position":{"start":{"line":126,"column":1,"offset":3919},"end":{"line":126,"column":34,"offset":3952},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":3919},"end":{"line":126,"column":34,"offset":3952},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"### Define a loss function","position":{"start":{"line":128,"column":1,"offset":3954},"end":{"line":128,"column":30,"offset":3983},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":3954},"end":{"line":128,"column":30,"offset":3983},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A loss function measures how well the output of a model for a given input matches the desired output. Let's use the standard L2 loss.\n\"\"\"","position":{"start":{"line":130,"column":1,"offset":3985},"end":{"line":131,"column":4,"offset":4122},"indent":[1]}}],"position":{"start":{"line":130,"column":1,"offset":3985},"end":{"line":131,"column":4,"offset":4122},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"def loss(predicted","position":{"start":{"line":133,"column":1,"offset":4124},"end":{"line":133,"column":19,"offset":4142},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"y, desired","position":{"start":{"line":133,"column":20,"offset":4143},"end":{"line":133,"column":30,"offset":4153},"indent":[]}}],"position":{"start":{"line":133,"column":19,"offset":4142},"end":{"line":133,"column":31,"offset":4154},"indent":[]}},{"type":"text","value":"y):\n  return tf.reduce","position":{"start":{"line":133,"column":31,"offset":4154},"end":{"line":134,"column":19,"offset":4176},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"mean(tf.square(predicted","position":{"start":{"line":134,"column":20,"offset":4177},"end":{"line":134,"column":44,"offset":4201},"indent":[]}}],"position":{"start":{"line":134,"column":19,"offset":4176},"end":{"line":134,"column":45,"offset":4202},"indent":[]}},{"type":"text","value":"y - desired_y))","position":{"start":{"line":134,"column":45,"offset":4202},"end":{"line":134,"column":60,"offset":4217},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":4124},"end":{"line":134,"column":60,"offset":4217},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"### Obtain training data","position":{"start":{"line":136,"column":1,"offset":4219},"end":{"line":136,"column":28,"offset":4246},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4219},"end":{"line":136,"column":28,"offset":4246},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's synthesize the training data with some noise.\n\"\"\"","position":{"start":{"line":138,"column":1,"offset":4248},"end":{"line":139,"column":4,"offset":4303},"indent":[1]}}],"position":{"start":{"line":138,"column":1,"offset":4248},"end":{"line":139,"column":4,"offset":4303},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"TRUE","position":{"start":{"line":141,"column":1,"offset":4305},"end":{"line":141,"column":5,"offset":4309},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"W = 3.0\nTRUE","position":{"start":{"line":141,"column":6,"offset":4310},"end":{"line":142,"column":5,"offset":4322},"indent":[1]}}],"position":{"start":{"line":141,"column":5,"offset":4309},"end":{"line":142,"column":6,"offset":4323},"indent":[1]}},{"type":"text","value":"b = 2.0\nNUM_EXAMPLES = 1000","position":{"start":{"line":142,"column":6,"offset":4323},"end":{"line":143,"column":20,"offset":4350},"indent":[1]}}],"position":{"start":{"line":141,"column":1,"offset":4305},"end":{"line":143,"column":20,"offset":4350},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"inputs  = tf.random","position":{"start":{"line":145,"column":1,"offset":4352},"end":{"line":145,"column":20,"offset":4371},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":145,"column":21,"offset":4372},"end":{"line":145,"column":38,"offset":4389},"indent":[]}}],"position":{"start":{"line":145,"column":20,"offset":4371},"end":{"line":145,"column":39,"offset":4390},"indent":[]}},{"type":"text","value":"EXAMPLES])\nnoise   = tf.random","position":{"start":{"line":145,"column":39,"offset":4390},"end":{"line":146,"column":20,"offset":4420},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":146,"column":21,"offset":4421},"end":{"line":146,"column":38,"offset":4438},"indent":[]}}],"position":{"start":{"line":146,"column":20,"offset":4420},"end":{"line":146,"column":39,"offset":4439},"indent":[]}},{"type":"text","value":"EXAMPLES])\noutputs = inputs * TRUE","position":{"start":{"line":146,"column":39,"offset":4439},"end":{"line":147,"column":24,"offset":4473},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"W + TRUE","position":{"start":{"line":147,"column":25,"offset":4474},"end":{"line":147,"column":33,"offset":4482},"indent":[]}}],"position":{"start":{"line":147,"column":24,"offset":4473},"end":{"line":147,"column":34,"offset":4483},"indent":[]}},{"type":"text","value":"b + noise","position":{"start":{"line":147,"column":34,"offset":4483},"end":{"line":147,"column":43,"offset":4492},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":4352},"end":{"line":147,"column":43,"offset":4492},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"Before we train the model let's visualize where the model stands right now. We'll plot the model's predictions in red and the training data in blue.\"\"\"","position":{"start":{"line":149,"column":1,"offset":4494},"end":{"line":149,"column":155,"offset":4648},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":4494},"end":{"line":149,"column":155,"offset":4648},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import matplotlib.pyplot as plt","position":{"start":{"line":151,"column":1,"offset":4650},"end":{"line":151,"column":32,"offset":4681},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":4650},"end":{"line":151,"column":32,"offset":4681},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"plt.scatter(inputs, outputs, c='b')\nplt.scatter(inputs, model(inputs), c='r')\nplt.show()","position":{"start":{"line":153,"column":1,"offset":4683},"end":{"line":155,"column":11,"offset":4771},"indent":[1,1]}}],"position":{"start":{"line":153,"column":1,"offset":4683},"end":{"line":155,"column":11,"offset":4771},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"print('Current loss: '),\nprint(loss(model(inputs), outputs).numpy())","position":{"start":{"line":157,"column":1,"offset":4773},"end":{"line":158,"column":44,"offset":4841},"indent":[1]}}],"position":{"start":{"line":157,"column":1,"offset":4773},"end":{"line":158,"column":44,"offset":4841},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"### Define a training loop","position":{"start":{"line":160,"column":1,"offset":4843},"end":{"line":160,"column":30,"offset":4872},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":4843},"end":{"line":160,"column":30,"offset":4872},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We now have our network and our training data. Let's train it, i.e., use the training data to update the model's variables (","position":{"start":{"line":162,"column":1,"offset":4874},"end":{"line":162,"column":125,"offset":4998},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":162,"column":125,"offset":4998},"end":{"line":162,"column":128,"offset":5001},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":162,"column":128,"offset":5001},"end":{"line":162,"column":133,"offset":5006},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":162,"column":133,"offset":5006},"end":{"line":162,"column":136,"offset":5009},"indent":[]}},{"type":"text","value":") so that the loss goes down using ","position":{"start":{"line":162,"column":136,"offset":5009},"end":{"line":162,"column":171,"offset":5044},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Gradient_descent","children":[{"type":"text","value":"gradient descent","position":{"start":{"line":162,"column":172,"offset":5045},"end":{"line":162,"column":188,"offset":5061},"indent":[]}}],"position":{"start":{"line":162,"column":171,"offset":5044},"end":{"line":162,"column":237,"offset":5110},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":". There are many variants of the gradient descent scheme that are captured in ","position":{"start":{"line":162,"column":237,"offset":5110},"end":{"line":162,"column":315,"offset":5188},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">tf.train.Optimizer</code>","position":{"start":{"line":162,"column":315,"offset":5188},"end":{"line":162,"column":335,"offset":5208},"indent":[]}},{"type":"text","value":" implementations. We'd highly recommend using those implementations, but in the spirit of building from first principles, in this particular example we will implement the basic math ourselves.\n\"\"\"","position":{"start":{"line":162,"column":335,"offset":5208},"end":{"line":163,"column":4,"offset":5404},"indent":[1]}}],"position":{"start":{"line":162,"column":1,"offset":4874},"end":{"line":163,"column":4,"offset":5404},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"def train(model, inputs, outputs, learning","position":{"start":{"line":165,"column":1,"offset":5406},"end":{"line":165,"column":43,"offset":5448},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"rate):\n  with tf.GradientTape() as t:\n    current","position":{"start":{"line":165,"column":44,"offset":5449},"end":{"line":167,"column":12,"offset":5498},"indent":[1,1]}}],"position":{"start":{"line":165,"column":43,"offset":5448},"end":{"line":167,"column":13,"offset":5499},"indent":[1,1]}},{"type":"text","value":"loss = loss(model(inputs), outputs)\n  dW, db = t.gradient(current","position":{"start":{"line":167,"column":13,"offset":5499},"end":{"line":168,"column":30,"offset":5564},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"loss, ","position":{"start":{"line":168,"column":31,"offset":5565},"end":{"line":168,"column":37,"offset":5571},"indent":[]}},{"type":"linkReference","identifier":"model.w, model.b","referenceType":"shortcut","children":[{"type":"text","value":"model.W, model.b","position":{"start":{"line":168,"column":38,"offset":5572},"end":{"line":168,"column":54,"offset":5588},"indent":[]}}],"position":{"start":{"line":168,"column":37,"offset":5571},"end":{"line":168,"column":55,"offset":5589},"indent":[]}},{"type":"text","value":")\n  model.W.assign","position":{"start":{"line":168,"column":55,"offset":5589},"end":{"line":169,"column":17,"offset":5607},"indent":[1]}}],"position":{"start":{"line":168,"column":30,"offset":5564},"end":{"line":169,"column":18,"offset":5608},"indent":[1]}},{"type":"text","value":"sub(learning","position":{"start":{"line":169,"column":18,"offset":5608},"end":{"line":169,"column":30,"offset":5620},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"rate * dW)\n  model.b.assign","position":{"start":{"line":169,"column":31,"offset":5621},"end":{"line":170,"column":17,"offset":5648},"indent":[1]}}],"position":{"start":{"line":169,"column":30,"offset":5620},"end":{"line":170,"column":18,"offset":5649},"indent":[1]}},{"type":"text","value":"sub(learning_rate * db)","position":{"start":{"line":170,"column":18,"offset":5649},"end":{"line":170,"column":41,"offset":5672},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":5406},"end":{"line":170,"column":41,"offset":5672},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"Finally, let's repeatedly run through the training data and see how ","position":{"start":{"line":172,"column":1,"offset":5674},"end":{"line":172,"column":72,"offset":5745},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":172,"column":72,"offset":5745},"end":{"line":172,"column":75,"offset":5748},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":172,"column":75,"offset":5748},"end":{"line":172,"column":80,"offset":5753},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":172,"column":80,"offset":5753},"end":{"line":172,"column":83,"offset":5756},"indent":[]}},{"type":"text","value":" evolve.\"\"\"","position":{"start":{"line":172,"column":83,"offset":5756},"end":{"line":172,"column":94,"offset":5767},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":5674},"end":{"line":172,"column":94,"offset":5767},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"model = Model()","position":{"start":{"line":174,"column":1,"offset":5769},"end":{"line":174,"column":16,"offset":5784},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":5769},"end":{"line":174,"column":16,"offset":5784},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#collect-the-history-of-w-values-and-b-values-to-plot-later","title":null,"data":{"hProperties":{"aria-label":"collect the history of w values and b values to plot later permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Collect the history of W-values and b-values to plot later","position":{"start":{"line":176,"column":3,"offset":5788},"end":{"line":176,"column":61,"offset":5846},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":5786},"end":{"line":176,"column":61,"offset":5846},"indent":[]},"data":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later","htmlAttributes":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"},"hProperties":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"}}},{"type":"paragraph","children":[{"type":"text","value":"Ws, bs = [], []\nepochs = range(10)\nfor epoch in epochs:\n  Ws.append(model.W.numpy())\n  bs.append(model.b.numpy())\n  current_loss = loss(model(inputs), outputs)","position":{"start":{"line":177,"column":1,"offset":5847},"end":{"line":182,"column":46,"offset":6006},"indent":[1,1,1,1,1]}}],"position":{"start":{"line":177,"column":1,"offset":5847},"end":{"line":182,"column":46,"offset":6006},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"  train(model, inputs, outputs, learning","position":{"start":{"line":184,"column":1,"offset":6008},"end":{"line":184,"column":41,"offset":6048},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"rate=0.1)\n  print('Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f' %\n        (epoch, Ws","position":{"start":{"line":184,"column":42,"offset":6049},"end":{"line":186,"column":19,"offset":6128},"indent":[1,1]}},{"type":"linkReference","identifier":"-1","referenceType":"shortcut","children":[{"type":"text","value":"-1","position":{"start":{"line":186,"column":20,"offset":6129},"end":{"line":186,"column":22,"offset":6131},"indent":[]}}],"position":{"start":{"line":186,"column":19,"offset":6128},"end":{"line":186,"column":23,"offset":6132},"indent":[]}},{"type":"text","value":", bs","position":{"start":{"line":186,"column":23,"offset":6132},"end":{"line":186,"column":27,"offset":6136},"indent":[]}},{"type":"linkReference","identifier":"-1","referenceType":"shortcut","children":[{"type":"text","value":"-1","position":{"start":{"line":186,"column":28,"offset":6137},"end":{"line":186,"column":30,"offset":6139},"indent":[]}}],"position":{"start":{"line":186,"column":27,"offset":6136},"end":{"line":186,"column":31,"offset":6140},"indent":[]}},{"type":"text","value":", current","position":{"start":{"line":186,"column":31,"offset":6140},"end":{"line":186,"column":40,"offset":6149},"indent":[]}}],"position":{"start":{"line":184,"column":41,"offset":6048},"end":{"line":186,"column":41,"offset":6150},"indent":[1,1]}},{"type":"text","value":"loss))","position":{"start":{"line":186,"column":41,"offset":6150},"end":{"line":186,"column":47,"offset":6156},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":6008},"end":{"line":186,"column":47,"offset":6156},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#lets-plot-it-all","title":null,"data":{"hProperties":{"aria-label":"lets plot it all permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Let's plot it all","position":{"start":{"line":188,"column":3,"offset":6160},"end":{"line":188,"column":20,"offset":6177},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":6158},"end":{"line":188,"column":20,"offset":6177},"indent":[]},"data":{"id":"lets-plot-it-all","htmlAttributes":{"id":"lets-plot-it-all"},"hProperties":{"id":"lets-plot-it-all"}}},{"type":"paragraph","children":[{"type":"text","value":"plt.plot(epochs, Ws, 'r',\n         epochs, bs, 'b')\nplt.plot(","position":{"start":{"line":189,"column":1,"offset":6178},"end":{"line":191,"column":10,"offset":6239},"indent":[1,1]}},{"type":"linkReference","identifier":"true_w","referenceType":"shortcut","children":[{"type":"text","value":"TRUE_W","position":{"start":{"line":191,"column":11,"offset":6240},"end":{"line":191,"column":17,"offset":6246},"indent":[]}}],"position":{"start":{"line":191,"column":10,"offset":6239},"end":{"line":191,"column":18,"offset":6247},"indent":[]}},{"type":"text","value":" * len(epochs), 'r--',\n         ","position":{"start":{"line":191,"column":18,"offset":6247},"end":{"line":192,"column":10,"offset":6279},"indent":[1]}},{"type":"linkReference","identifier":"true_b","referenceType":"shortcut","children":[{"type":"text","value":"TRUE_b","position":{"start":{"line":192,"column":11,"offset":6280},"end":{"line":192,"column":17,"offset":6286},"indent":[]}}],"position":{"start":{"line":192,"column":10,"offset":6279},"end":{"line":192,"column":18,"offset":6287},"indent":[]}},{"type":"text","value":" * len(epochs), 'b--')\nplt.legend(","position":{"start":{"line":192,"column":18,"offset":6287},"end":{"line":193,"column":12,"offset":6321},"indent":[1]}},{"type":"linkReference","identifier":"'w', 'b', 'true w', 'true_b'","referenceType":"shortcut","children":[{"type":"text","value":"'W', 'b', 'true W', 'true_b'","position":{"start":{"line":193,"column":13,"offset":6322},"end":{"line":193,"column":41,"offset":6350},"indent":[]}}],"position":{"start":{"line":193,"column":12,"offset":6321},"end":{"line":193,"column":42,"offset":6351},"indent":[]}},{"type":"text","value":")\nplt.show()","position":{"start":{"line":193,"column":42,"offset":6351},"end":{"line":194,"column":11,"offset":6363},"indent":[1]}}],"position":{"start":{"line":189,"column":1,"offset":6178},"end":{"line":194,"column":11,"offset":6363},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"## Next Steps","position":{"start":{"line":196,"column":1,"offset":6365},"end":{"line":196,"column":17,"offset":6381},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":6365},"end":{"line":196,"column":17,"offset":6381},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this tutorial we covered ","position":{"start":{"line":198,"column":1,"offset":6383},"end":{"line":198,"column":29,"offset":6411},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":198,"column":29,"offset":6411},"end":{"line":198,"column":39,"offset":6421},"indent":[]}},{"type":"text","value":"s and built and trained a simple linear model using the TensorFlow primitives discussed so far.","position":{"start":{"line":198,"column":39,"offset":6421},"end":{"line":198,"column":134,"offset":6516},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":6383},"end":{"line":198,"column":134,"offset":6516},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In theory, this is pretty much all you need to use TensorFlow for your machine learning research.\nIn practice, particularly for neural networks, the higher level APIs like ","position":{"start":{"line":200,"column":1,"offset":6518},"end":{"line":201,"column":75,"offset":6690},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">tf.keras</code>","position":{"start":{"line":201,"column":75,"offset":6690},"end":{"line":201,"column":85,"offset":6700},"indent":[]}},{"type":"text","value":" will be much more convenient since it provides higher level building blocks (called \"layers\"), utilities to save and restore state, a suite of loss functions, a suite of optimization strategies etc.\n\"\"\"","position":{"start":{"line":201,"column":85,"offset":6700},"end":{"line":202,"column":4,"offset":6903},"indent":[1]}}],"position":{"start":{"line":200,"column":1,"offset":6518},"end":{"line":202,"column":4,"offset":6903},"indent":[1,1]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":204,"column":1,"offset":6905},"end":{"line":208,"column":1,"offset":6912},"indent":[1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":208,"column":1,"offset":6912}}}}