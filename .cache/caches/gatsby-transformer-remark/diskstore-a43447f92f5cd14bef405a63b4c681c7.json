{"expireTime":9007200813389896000,"key":"transformer-remark-markdown-ast-952121038e93bf7d3d31d5449c7f7c1b-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"link","url":"#basic-operations","title":null,"data":{"hProperties":{"aria-label":"basic operations permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Basic Operations","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":20,"offset":19},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19},"indent":[]},"data":{"id":"basic-operations","htmlAttributes":{"id":"basic-operations"},"hProperties":{"id":"basic-operations"}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#initilize-tensors","title":null,"data":{"hProperties":{"aria-label":"initilize tensors permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"initilize tensors","position":{"start":{"line":3,"column":5,"offset":25},"end":{"line":3,"column":22,"offset":42},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":23,"offset":43},"indent":[]},"data":{"id":"initilize-tensors","htmlAttributes":{"id":"initilize-tensors"},"hProperties":{"id":"initilize-tensors"}}},{"type":"paragraph","children":[{"type":"text","value":"(10,10) array with zero elements","position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Using python state\nx = tf.zeros([10, 10])\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":79},"end":{"line":13,"column":4,"offset":238},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#tensors-basic-operations","title":null,"data":{"hProperties":{"aria-label":"tensors basic operations permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"tensors basic operations","position":{"start":{"line":15,"column":5,"offset":244},"end":{"line":15,"column":29,"offset":268},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":15,"column":30,"offset":269},"indent":[]},"data":{"id":"tensors-basic-operations","htmlAttributes":{"id":"tensors-basic-operations"},"hProperties":{"id":"tensors-basic-operations"}}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import tensorflow as tf\nimport numpy \n\ntf.enable_eager_execution\n\nprint(tf.add(1, 2))\nprint(tf.add([1, 2], [3, 4]))\nprint(tf.square(5))\nprint(tf.reduce_sum([1, 2, 3]))\nprint(tf.encode_base64(&quot;hello world&quot;))\n\n# Operator overloading is also supported\nprint(tf.square(2) + tf.square(3))\n\nx = tf.matmul([[1]], [[2, 3]])\nprint(x.shape)\nprint(x.dtype)\n\nndarray = np.ones([3, 3])\n\nprint(&quot;TensorFlow operations convert numpy arrays to Tensors automatically&quot;)\ntensor = tf.multiply(ndarray, 42)\nprint(tensor)\n\nprint(&quot;And NumPy operations convert Tensors to numpy arrays automatically&quot;)\nprint(np.add(tensor, 1))\n\nprint(&quot;The .numpy() method explicitly converts a Tensor to a numpy array&quot;)\nprint(tensor.numpy())</code></pre></div>","position":{"start":{"line":17,"column":1,"offset":271},"end":{"line":48,"column":4,"offset":978},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#tensors-basic-operations-1","title":null,"data":{"hProperties":{"aria-label":"tensors basic operations 1 permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"tensors basic operations","position":{"start":{"line":50,"column":5,"offset":984},"end":{"line":50,"column":29,"offset":1008},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":980},"end":{"line":50,"column":30,"offset":1009},"indent":[]},"data":{"id":"tensors-basic-operations-1","htmlAttributes":{"id":"tensors-basic-operations-1"},"hProperties":{"id":"tensors-basic-operations-1"}}},{"type":"paragraph","children":[{"type":"text","value":"x = tf.random_uniform(","position":{"start":{"line":52,"column":1,"offset":1011},"end":{"line":52,"column":23,"offset":1033},"indent":[]}},{"type":"linkReference","identifier":"3, 3","referenceType":"shortcut","children":[{"type":"text","value":"3, 3","position":{"start":{"line":52,"column":24,"offset":1034},"end":{"line":52,"column":28,"offset":1038},"indent":[]}}],"position":{"start":{"line":52,"column":23,"offset":1033},"end":{"line":52,"column":29,"offset":1039},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":52,"column":29,"offset":1039},"end":{"line":52,"column":30,"offset":1040},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1011},"end":{"line":52,"column":30,"offset":1040},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"print(\"Is there a GPU available: \"),\nprint(tf.test.is","position":{"start":{"line":54,"column":1,"offset":1042},"end":{"line":55,"column":17,"offset":1095},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"gpu","position":{"start":{"line":55,"column":18,"offset":1096},"end":{"line":55,"column":21,"offset":1099},"indent":[]}}],"position":{"start":{"line":55,"column":17,"offset":1095},"end":{"line":55,"column":22,"offset":1100},"indent":[]}},{"type":"text","value":"available())","position":{"start":{"line":55,"column":22,"offset":1100},"end":{"line":55,"column":34,"offset":1112},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1042},"end":{"line":55,"column":34,"offset":1112},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"print(\"Is the Tensor on GPU #0:  \"),\nprint(x.device.endswith('GPU:0'))","position":{"start":{"line":57,"column":1,"offset":1114},"end":{"line":58,"column":34,"offset":1184},"indent":[1]}}],"position":{"start":{"line":57,"column":1,"offset":1114},"end":{"line":58,"column":34,"offset":1184},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#a-small-script-to-show-a-custom-training-using","title":null,"data":{"hProperties":{"aria-label":"a small script to show a custom training using permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"A small script to show a custom training using","position":{"start":{"line":64,"column":5,"offset":1194},"end":{"line":64,"column":51,"offset":1240},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1190},"end":{"line":64,"column":52,"offset":1241},"indent":[]},"data":{"id":"a-small-script-to-show-a-custom-training-using","htmlAttributes":{"id":"a-small-script-to-show-a-custom-training-using"},"hProperties":{"id":"a-small-script-to-show-a-custom-training-using"}}},{"type":"paragraph","children":[{"type":"text","value":"*class,  assert, plot","position":{"start":{"line":66,"column":1,"offset":1243},"end":{"line":66,"column":22,"offset":1264},"indent":[]}},{"type":"break","position":{"start":{"line":66,"column":22,"offset":1264},"end":{"line":67,"column":1,"offset":1267},"indent":[1]}},{"type":"text","value":"*variable, gradient, and loss","position":{"start":{"line":67,"column":1,"offset":1267},"end":{"line":67,"column":30,"offset":1296},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1243},"end":{"line":67,"column":30,"offset":1296},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"# Custom training: basics\n\"\"\"","position":{"start":{"line":70,"column":1,"offset":1299},"end":{"line":71,"column":4,"offset":1331},"indent":[1]}}],"position":{"start":{"line":70,"column":1,"offset":1299},"end":{"line":71,"column":4,"offset":1331},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"from ","position":{"start":{"line":73,"column":1,"offset":1333},"end":{"line":73,"column":6,"offset":1338},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"future","position":{"start":{"line":73,"column":8,"offset":1340},"end":{"line":73,"column":14,"offset":1346},"indent":[]}}],"position":{"start":{"line":73,"column":6,"offset":1338},"end":{"line":73,"column":16,"offset":1348},"indent":[]}},{"type":"text","value":" import absolute","position":{"start":{"line":73,"column":16,"offset":1348},"end":{"line":73,"column":32,"offset":1364},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"import, division, print","position":{"start":{"line":73,"column":33,"offset":1365},"end":{"line":73,"column":56,"offset":1388},"indent":[]}}],"position":{"start":{"line":73,"column":32,"offset":1364},"end":{"line":73,"column":57,"offset":1389},"indent":[]}},{"type":"text","value":"function, unicode_literals","position":{"start":{"line":73,"column":57,"offset":1389},"end":{"line":73,"column":83,"offset":1415},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1333},"end":{"line":73,"column":83,"offset":1415},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import tensorflow as tf","position":{"start":{"line":75,"column":1,"offset":1417},"end":{"line":75,"column":24,"offset":1440},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1417},"end":{"line":75,"column":24,"offset":1440},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"tf.enable","position":{"start":{"line":77,"column":1,"offset":1442},"end":{"line":77,"column":10,"offset":1451},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"eager","position":{"start":{"line":77,"column":11,"offset":1452},"end":{"line":77,"column":16,"offset":1457},"indent":[]}}],"position":{"start":{"line":77,"column":10,"offset":1451},"end":{"line":77,"column":17,"offset":1458},"indent":[]}},{"type":"text","value":"execution()","position":{"start":{"line":77,"column":17,"offset":1458},"end":{"line":77,"column":28,"offset":1469},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":1442},"end":{"line":77,"column":28,"offset":1469},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"## Variables","position":{"start":{"line":79,"column":1,"offset":1471},"end":{"line":79,"column":16,"offset":1486},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":1471},"end":{"line":79,"column":16,"offset":1486},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Tensors in TensorFlow are immutable stateless objects. Machine learning models, however, need to have changing state: as your model trains, the same code to compute predictions should behave differently over time (hopefully with a lower loss!). To represent this state which needs to change over the course of your computation, you can choose to rely on the fact that Python is a stateful programming language:\n\"\"\"","position":{"start":{"line":81,"column":1,"offset":1488},"end":{"line":82,"column":4,"offset":1902},"indent":[1]}}],"position":{"start":{"line":81,"column":1,"offset":1488},"end":{"line":82,"column":4,"offset":1902},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#using-python-state","title":null,"data":{"hProperties":{"aria-label":"using python state permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Using python state","position":{"start":{"line":84,"column":3,"offset":1906},"end":{"line":84,"column":21,"offset":1924},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":1904},"end":{"line":84,"column":21,"offset":1924},"indent":[]},"data":{"id":"using-python-state","htmlAttributes":{"id":"using-python-state"},"hProperties":{"id":"using-python-state"}}},{"type":"paragraph","children":[{"type":"text","value":"x = tf.zeros(","position":{"start":{"line":85,"column":1,"offset":1925},"end":{"line":85,"column":14,"offset":1938},"indent":[]}},{"type":"linkReference","identifier":"10, 10","referenceType":"shortcut","children":[{"type":"text","value":"10, 10","position":{"start":{"line":85,"column":15,"offset":1939},"end":{"line":85,"column":21,"offset":1945},"indent":[]}}],"position":{"start":{"line":85,"column":14,"offset":1938},"end":{"line":85,"column":22,"offset":1946},"indent":[]}},{"type":"text","value":")\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)","position":{"start":{"line":85,"column":22,"offset":1946},"end":{"line":88,"column":9,"offset":2055},"indent":[1,1,1]}}],"position":{"start":{"line":85,"column":1,"offset":1925},"end":{"line":88,"column":9,"offset":2055},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"TensorFlow, however, has stateful operations built in, and these are often more pleasant to use than low-level Python representations of your state. To represent weights in a model, for example, it's often convenient and efficient to use TensorFlow variables.","position":{"start":{"line":90,"column":1,"offset":2057},"end":{"line":90,"column":263,"offset":2319},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2057},"end":{"line":90,"column":263,"offset":2319},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A Variable is an object which stores a value and, when used in a TensorFlow computation, will implicitly read from this stored value. There are operations (","position":{"start":{"line":92,"column":1,"offset":2321},"end":{"line":92,"column":157,"offset":2477},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">tf.assign_sub</code>","position":{"start":{"line":92,"column":157,"offset":2477},"end":{"line":92,"column":172,"offset":2492},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":92,"column":172,"offset":2492},"end":{"line":92,"column":174,"offset":2494},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">tf.scatter_update</code>","position":{"start":{"line":92,"column":174,"offset":2494},"end":{"line":92,"column":193,"offset":2513},"indent":[]}},{"type":"text","value":", etc) which manipulate the value stored in a TensorFlow variable.\n\"\"\"","position":{"start":{"line":92,"column":193,"offset":2513},"end":{"line":93,"column":4,"offset":2583},"indent":[1]}}],"position":{"start":{"line":92,"column":1,"offset":2321},"end":{"line":93,"column":4,"offset":2583},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"v = tf.Variable(1.0)\nassert v.numpy() == 1.0","position":{"start":{"line":95,"column":1,"offset":2585},"end":{"line":96,"column":24,"offset":2629},"indent":[1]}}],"position":{"start":{"line":95,"column":1,"offset":2585},"end":{"line":96,"column":24,"offset":2629},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#re-assign-the-value","title":null,"data":{"hProperties":{"aria-label":"re assign the value permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Re-assign the value","position":{"start":{"line":98,"column":3,"offset":2633},"end":{"line":98,"column":22,"offset":2652},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":2631},"end":{"line":98,"column":22,"offset":2652},"indent":[]},"data":{"id":"re-assign-the-value","htmlAttributes":{"id":"re-assign-the-value"},"hProperties":{"id":"re-assign-the-value"}}},{"type":"paragraph","children":[{"type":"text","value":"v.assign(3.0)\nassert v.numpy() == 3.0","position":{"start":{"line":99,"column":1,"offset":2653},"end":{"line":100,"column":24,"offset":2690},"indent":[1]}}],"position":{"start":{"line":99,"column":1,"offset":2653},"end":{"line":100,"column":24,"offset":2690},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","title":null,"data":{"hProperties":{"aria-label":"use v in a tensorflow operation like tfsquare and reassign permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Use ","position":{"start":{"line":102,"column":3,"offset":2694},"end":{"line":102,"column":7,"offset":2698},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">v</code>","position":{"start":{"line":102,"column":7,"offset":2698},"end":{"line":102,"column":10,"offset":2701},"indent":[]}},{"type":"text","value":" in a TensorFlow operation like tf.square() and reassign","position":{"start":{"line":102,"column":10,"offset":2701},"end":{"line":102,"column":66,"offset":2757},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2692},"end":{"line":102,"column":66,"offset":2757},"indent":[]},"data":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","htmlAttributes":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"},"hProperties":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"}}},{"type":"paragraph","children":[{"type":"text","value":"v.assign(tf.square(v))\nassert v.numpy() == 9.0","position":{"start":{"line":103,"column":1,"offset":2758},"end":{"line":104,"column":24,"offset":2804},"indent":[1]}}],"position":{"start":{"line":103,"column":1,"offset":2758},"end":{"line":104,"column":24,"offset":2804},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"Computations using Variables are automatically traced when computing gradients. For Variables representing embeddings TensorFlow will do sparse updates by default, which are more computation and memory efficient.","position":{"start":{"line":106,"column":1,"offset":2806},"end":{"line":106,"column":216,"offset":3021},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":2806},"end":{"line":106,"column":216,"offset":3021},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using Variables is also a way to quickly let a reader of your code know that this piece of state is mutable.","position":{"start":{"line":108,"column":1,"offset":3023},"end":{"line":108,"column":109,"offset":3131},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3023},"end":{"line":108,"column":109,"offset":3131},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#example-fitting-a-linear-model","title":null,"data":{"hProperties":{"aria-label":"example fitting a linear model permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Example: Fitting a linear model","position":{"start":{"line":110,"column":4,"offset":3136},"end":{"line":110,"column":35,"offset":3167},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":3133},"end":{"line":110,"column":35,"offset":3167},"indent":[]},"data":{"id":"example-fitting-a-linear-model","htmlAttributes":{"id":"example-fitting-a-linear-model"},"hProperties":{"id":"example-fitting-a-linear-model"}}},{"type":"paragraph","children":[{"type":"text","value":"Let's now put the few concepts we have so far ---","position":{"start":{"line":112,"column":1,"offset":3169},"end":{"line":112,"column":50,"offset":3218},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Tensor</code>","position":{"start":{"line":112,"column":50,"offset":3218},"end":{"line":112,"column":58,"offset":3226},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":112,"column":58,"offset":3226},"end":{"line":112,"column":60,"offset":3228},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">GradientTape</code>","position":{"start":{"line":112,"column":60,"offset":3228},"end":{"line":112,"column":74,"offset":3242},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":112,"column":74,"offset":3242},"end":{"line":112,"column":76,"offset":3244},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":112,"column":76,"offset":3244},"end":{"line":112,"column":86,"offset":3254},"indent":[]}},{"type":"text","value":" --- to build and train a simple model. This typically involves a few steps:","position":{"start":{"line":112,"column":86,"offset":3254},"end":{"line":112,"column":162,"offset":3330},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":3169},"end":{"line":112,"column":162,"offset":3330},"indent":[]}},{"type":"list","ordered":true,"start":1,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define the model.","position":{"start":{"line":114,"column":4,"offset":3335},"end":{"line":114,"column":21,"offset":3352},"indent":[]}}],"position":{"start":{"line":114,"column":4,"offset":3335},"end":{"line":114,"column":21,"offset":3352},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":3332},"end":{"line":114,"column":21,"offset":3352},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define a loss function.","position":{"start":{"line":115,"column":4,"offset":3356},"end":{"line":115,"column":27,"offset":3379},"indent":[]}}],"position":{"start":{"line":115,"column":4,"offset":3356},"end":{"line":115,"column":27,"offset":3379},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":3353},"end":{"line":115,"column":27,"offset":3379},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Obtain training data.","position":{"start":{"line":116,"column":4,"offset":3383},"end":{"line":116,"column":25,"offset":3404},"indent":[]}}],"position":{"start":{"line":116,"column":4,"offset":3383},"end":{"line":116,"column":25,"offset":3404},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":3380},"end":{"line":116,"column":25,"offset":3404},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Run through the training data and use an \"optimizer\" to adjust the variables to fit the data.","position":{"start":{"line":117,"column":4,"offset":3408},"end":{"line":117,"column":97,"offset":3501},"indent":[]}}],"position":{"start":{"line":117,"column":4,"offset":3408},"end":{"line":117,"column":97,"offset":3501},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":3405},"end":{"line":117,"column":97,"offset":3501},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":3332},"end":{"line":117,"column":97,"offset":3501},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this tutorial, we'll walk through a trivial example of a simple linear model: ","position":{"start":{"line":119,"column":1,"offset":3503},"end":{"line":119,"column":82,"offset":3584},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f(x) = x * W + b</code>","position":{"start":{"line":119,"column":82,"offset":3584},"end":{"line":119,"column":100,"offset":3602},"indent":[]}},{"type":"text","value":", which has two variables - ","position":{"start":{"line":119,"column":100,"offset":3602},"end":{"line":119,"column":128,"offset":3630},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":119,"column":128,"offset":3630},"end":{"line":119,"column":131,"offset":3633},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":119,"column":131,"offset":3633},"end":{"line":119,"column":136,"offset":3638},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":119,"column":136,"offset":3638},"end":{"line":119,"column":139,"offset":3641},"indent":[]}},{"type":"text","value":". Furthermore, we'll synthesize data such that a well trained model would have ","position":{"start":{"line":119,"column":139,"offset":3641},"end":{"line":119,"column":218,"offset":3720},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W = 3.0</code>","position":{"start":{"line":119,"column":218,"offset":3720},"end":{"line":119,"column":227,"offset":3729},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":119,"column":227,"offset":3729},"end":{"line":119,"column":232,"offset":3734},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b = 2.0</code>","position":{"start":{"line":119,"column":232,"offset":3734},"end":{"line":119,"column":241,"offset":3743},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":119,"column":241,"offset":3743},"end":{"line":119,"column":242,"offset":3744},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":3503},"end":{"line":119,"column":242,"offset":3744},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#define-the-model","title":null,"data":{"hProperties":{"aria-label":"define the model permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Define the model","position":{"start":{"line":121,"column":5,"offset":3750},"end":{"line":121,"column":21,"offset":3766},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3746},"end":{"line":121,"column":21,"offset":3766},"indent":[]},"data":{"id":"define-the-model","htmlAttributes":{"id":"define-the-model"},"hProperties":{"id":"define-the-model"}}},{"type":"paragraph","children":[{"type":"text","value":"Let's define a simple class to encapsulate the variables and the computation.\n\"\"\"","position":{"start":{"line":123,"column":1,"offset":3768},"end":{"line":124,"column":4,"offset":3849},"indent":[1]}}],"position":{"start":{"line":123,"column":1,"offset":3768},"end":{"line":124,"column":4,"offset":3849},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"class Model(object):\n  def ","position":{"start":{"line":126,"column":1,"offset":3851},"end":{"line":127,"column":7,"offset":3878},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"init","position":{"start":{"line":127,"column":9,"offset":3880},"end":{"line":127,"column":13,"offset":3884},"indent":[]}}],"position":{"start":{"line":127,"column":7,"offset":3878},"end":{"line":127,"column":15,"offset":3886},"indent":[]}},{"type":"text","value":"(self):\n    # Initialize variable to (5.0, 0.0)\n    # In practice, these should be initialized to random values.\n    self.W = tf.Variable(5.0)\n    self.b = tf.Variable(0.0)","position":{"start":{"line":127,"column":15,"offset":3886},"end":{"line":131,"column":30,"offset":4058},"indent":[1,1,1,1]}}],"position":{"start":{"line":126,"column":1,"offset":3851},"end":{"line":131,"column":30,"offset":4058},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"  def ","position":{"start":{"line":133,"column":1,"offset":4060},"end":{"line":133,"column":7,"offset":4066},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"call","position":{"start":{"line":133,"column":9,"offset":4068},"end":{"line":133,"column":13,"offset":4072},"indent":[]}}],"position":{"start":{"line":133,"column":7,"offset":4066},"end":{"line":133,"column":15,"offset":4074},"indent":[]}},{"type":"text","value":"(self, x):\n    return self.W * x + self.b","position":{"start":{"line":133,"column":15,"offset":4074},"end":{"line":134,"column":31,"offset":4115},"indent":[1]}}],"position":{"start":{"line":133,"column":1,"offset":4060},"end":{"line":134,"column":31,"offset":4115},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"model = Model()","position":{"start":{"line":136,"column":1,"offset":4117},"end":{"line":136,"column":16,"offset":4132},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4117},"end":{"line":136,"column":16,"offset":4132},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"assert model(3.0).numpy() == 15.0","position":{"start":{"line":138,"column":1,"offset":4134},"end":{"line":138,"column":34,"offset":4167},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4134},"end":{"line":138,"column":34,"offset":4167},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"### Define a loss function","position":{"start":{"line":140,"column":1,"offset":4169},"end":{"line":140,"column":30,"offset":4198},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":4169},"end":{"line":140,"column":30,"offset":4198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A loss function measures how well the output of a model for a given input matches the desired output. Let's use the standard L2 loss.\n\"\"\"","position":{"start":{"line":142,"column":1,"offset":4200},"end":{"line":143,"column":4,"offset":4337},"indent":[1]}}],"position":{"start":{"line":142,"column":1,"offset":4200},"end":{"line":143,"column":4,"offset":4337},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"def loss(predicted","position":{"start":{"line":145,"column":1,"offset":4339},"end":{"line":145,"column":19,"offset":4357},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"y, desired","position":{"start":{"line":145,"column":20,"offset":4358},"end":{"line":145,"column":30,"offset":4368},"indent":[]}}],"position":{"start":{"line":145,"column":19,"offset":4357},"end":{"line":145,"column":31,"offset":4369},"indent":[]}},{"type":"text","value":"y):\n  return tf.reduce","position":{"start":{"line":145,"column":31,"offset":4369},"end":{"line":146,"column":19,"offset":4391},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"mean(tf.square(predicted","position":{"start":{"line":146,"column":20,"offset":4392},"end":{"line":146,"column":44,"offset":4416},"indent":[]}}],"position":{"start":{"line":146,"column":19,"offset":4391},"end":{"line":146,"column":45,"offset":4417},"indent":[]}},{"type":"text","value":"y - desired_y))","position":{"start":{"line":146,"column":45,"offset":4417},"end":{"line":146,"column":60,"offset":4432},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":4339},"end":{"line":146,"column":60,"offset":4432},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"### Obtain training data","position":{"start":{"line":148,"column":1,"offset":4434},"end":{"line":148,"column":28,"offset":4461},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":4434},"end":{"line":148,"column":28,"offset":4461},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's synthesize the training data with some noise.\n\"\"\"","position":{"start":{"line":150,"column":1,"offset":4463},"end":{"line":151,"column":4,"offset":4518},"indent":[1]}}],"position":{"start":{"line":150,"column":1,"offset":4463},"end":{"line":151,"column":4,"offset":4518},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"TRUE","position":{"start":{"line":153,"column":1,"offset":4520},"end":{"line":153,"column":5,"offset":4524},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"W = 3.0\nTRUE","position":{"start":{"line":153,"column":6,"offset":4525},"end":{"line":154,"column":5,"offset":4537},"indent":[1]}}],"position":{"start":{"line":153,"column":5,"offset":4524},"end":{"line":154,"column":6,"offset":4538},"indent":[1]}},{"type":"text","value":"b = 2.0\nNUM_EXAMPLES = 1000","position":{"start":{"line":154,"column":6,"offset":4538},"end":{"line":155,"column":20,"offset":4565},"indent":[1]}}],"position":{"start":{"line":153,"column":1,"offset":4520},"end":{"line":155,"column":20,"offset":4565},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"inputs  = tf.random","position":{"start":{"line":157,"column":1,"offset":4567},"end":{"line":157,"column":20,"offset":4586},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":157,"column":21,"offset":4587},"end":{"line":157,"column":38,"offset":4604},"indent":[]}}],"position":{"start":{"line":157,"column":20,"offset":4586},"end":{"line":157,"column":39,"offset":4605},"indent":[]}},{"type":"text","value":"EXAMPLES])\nnoise   = tf.random","position":{"start":{"line":157,"column":39,"offset":4605},"end":{"line":158,"column":20,"offset":4635},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":158,"column":21,"offset":4636},"end":{"line":158,"column":38,"offset":4653},"indent":[]}}],"position":{"start":{"line":158,"column":20,"offset":4635},"end":{"line":158,"column":39,"offset":4654},"indent":[]}},{"type":"text","value":"EXAMPLES])\noutputs = inputs * TRUE","position":{"start":{"line":158,"column":39,"offset":4654},"end":{"line":159,"column":24,"offset":4688},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"W + TRUE","position":{"start":{"line":159,"column":25,"offset":4689},"end":{"line":159,"column":33,"offset":4697},"indent":[]}}],"position":{"start":{"line":159,"column":24,"offset":4688},"end":{"line":159,"column":34,"offset":4698},"indent":[]}},{"type":"text","value":"b + noise","position":{"start":{"line":159,"column":34,"offset":4698},"end":{"line":159,"column":43,"offset":4707},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":4567},"end":{"line":159,"column":43,"offset":4707},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"Before we train the model let's visualize where the model stands right now. We'll plot the model's predictions in red and the training data in blue.\"\"\"","position":{"start":{"line":161,"column":1,"offset":4709},"end":{"line":161,"column":155,"offset":4863},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4709},"end":{"line":161,"column":155,"offset":4863},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import matplotlib.pyplot as plt","position":{"start":{"line":163,"column":1,"offset":4865},"end":{"line":163,"column":32,"offset":4896},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":4865},"end":{"line":163,"column":32,"offset":4896},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"plt.scatter(inputs, outputs, c='b')\nplt.scatter(inputs, model(inputs), c='r')\nplt.show()","position":{"start":{"line":165,"column":1,"offset":4898},"end":{"line":167,"column":11,"offset":4986},"indent":[1,1]}}],"position":{"start":{"line":165,"column":1,"offset":4898},"end":{"line":167,"column":11,"offset":4986},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"print('Current loss: '),\nprint(loss(model(inputs), outputs).numpy())","position":{"start":{"line":169,"column":1,"offset":4988},"end":{"line":170,"column":44,"offset":5056},"indent":[1]}}],"position":{"start":{"line":169,"column":1,"offset":4988},"end":{"line":170,"column":44,"offset":5056},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"### Define a training loop","position":{"start":{"line":172,"column":1,"offset":5058},"end":{"line":172,"column":30,"offset":5087},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":5058},"end":{"line":172,"column":30,"offset":5087},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We now have our network and our training data. Let's train it, i.e., use the training data to update the model's variables (","position":{"start":{"line":174,"column":1,"offset":5089},"end":{"line":174,"column":125,"offset":5213},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":174,"column":125,"offset":5213},"end":{"line":174,"column":128,"offset":5216},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":174,"column":128,"offset":5216},"end":{"line":174,"column":133,"offset":5221},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":174,"column":133,"offset":5221},"end":{"line":174,"column":136,"offset":5224},"indent":[]}},{"type":"text","value":") so that the loss goes down using ","position":{"start":{"line":174,"column":136,"offset":5224},"end":{"line":174,"column":171,"offset":5259},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Gradient_descent","children":[{"type":"text","value":"gradient descent","position":{"start":{"line":174,"column":172,"offset":5260},"end":{"line":174,"column":188,"offset":5276},"indent":[]}}],"position":{"start":{"line":174,"column":171,"offset":5259},"end":{"line":174,"column":237,"offset":5325},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":". There are many variants of the gradient descent scheme that are captured in ","position":{"start":{"line":174,"column":237,"offset":5325},"end":{"line":174,"column":315,"offset":5403},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">tf.train.Optimizer</code>","position":{"start":{"line":174,"column":315,"offset":5403},"end":{"line":174,"column":335,"offset":5423},"indent":[]}},{"type":"text","value":" implementations. We'd highly recommend using those implementations, but in the spirit of building from first principles, in this particular example we will implement the basic math ourselves.\n\"\"\"","position":{"start":{"line":174,"column":335,"offset":5423},"end":{"line":175,"column":4,"offset":5619},"indent":[1]}}],"position":{"start":{"line":174,"column":1,"offset":5089},"end":{"line":175,"column":4,"offset":5619},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"def train(model, inputs, outputs, learning","position":{"start":{"line":177,"column":1,"offset":5621},"end":{"line":177,"column":43,"offset":5663},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"rate):\n  with tf.GradientTape() as t:\n    current","position":{"start":{"line":177,"column":44,"offset":5664},"end":{"line":179,"column":12,"offset":5713},"indent":[1,1]}}],"position":{"start":{"line":177,"column":43,"offset":5663},"end":{"line":179,"column":13,"offset":5714},"indent":[1,1]}},{"type":"text","value":"loss = loss(model(inputs), outputs)\n  dW, db = t.gradient(current","position":{"start":{"line":179,"column":13,"offset":5714},"end":{"line":180,"column":30,"offset":5779},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"loss, ","position":{"start":{"line":180,"column":31,"offset":5780},"end":{"line":180,"column":37,"offset":5786},"indent":[]}},{"type":"linkReference","identifier":"model.w, model.b","referenceType":"shortcut","children":[{"type":"text","value":"model.W, model.b","position":{"start":{"line":180,"column":38,"offset":5787},"end":{"line":180,"column":54,"offset":5803},"indent":[]}}],"position":{"start":{"line":180,"column":37,"offset":5786},"end":{"line":180,"column":55,"offset":5804},"indent":[]}},{"type":"text","value":")\n  model.W.assign","position":{"start":{"line":180,"column":55,"offset":5804},"end":{"line":181,"column":17,"offset":5822},"indent":[1]}}],"position":{"start":{"line":180,"column":30,"offset":5779},"end":{"line":181,"column":18,"offset":5823},"indent":[1]}},{"type":"text","value":"sub(learning","position":{"start":{"line":181,"column":18,"offset":5823},"end":{"line":181,"column":30,"offset":5835},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"rate * dW)\n  model.b.assign","position":{"start":{"line":181,"column":31,"offset":5836},"end":{"line":182,"column":17,"offset":5863},"indent":[1]}}],"position":{"start":{"line":181,"column":30,"offset":5835},"end":{"line":182,"column":18,"offset":5864},"indent":[1]}},{"type":"text","value":"sub(learning_rate * db)","position":{"start":{"line":182,"column":18,"offset":5864},"end":{"line":182,"column":41,"offset":5887},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":5621},"end":{"line":182,"column":41,"offset":5887},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"Finally, let's repeatedly run through the training data and see how ","position":{"start":{"line":184,"column":1,"offset":5889},"end":{"line":184,"column":72,"offset":5960},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":184,"column":72,"offset":5960},"end":{"line":184,"column":75,"offset":5963},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":184,"column":75,"offset":5963},"end":{"line":184,"column":80,"offset":5968},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":184,"column":80,"offset":5968},"end":{"line":184,"column":83,"offset":5971},"indent":[]}},{"type":"text","value":" evolve.\"\"\"","position":{"start":{"line":184,"column":83,"offset":5971},"end":{"line":184,"column":94,"offset":5982},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":5889},"end":{"line":184,"column":94,"offset":5982},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"model = Model()","position":{"start":{"line":186,"column":1,"offset":5984},"end":{"line":186,"column":16,"offset":5999},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":5984},"end":{"line":186,"column":16,"offset":5999},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#collect-the-history-of-w-values-and-b-values-to-plot-later","title":null,"data":{"hProperties":{"aria-label":"collect the history of w values and b values to plot later permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Collect the history of W-values and b-values to plot later","position":{"start":{"line":188,"column":3,"offset":6003},"end":{"line":188,"column":61,"offset":6061},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":6001},"end":{"line":188,"column":61,"offset":6061},"indent":[]},"data":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later","htmlAttributes":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"},"hProperties":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"}}},{"type":"paragraph","children":[{"type":"text","value":"Ws, bs = [], []\nepochs = range(10)\nfor epoch in epochs:\n  Ws.append(model.W.numpy())\n  bs.append(model.b.numpy())\n  current_loss = loss(model(inputs), outputs)","position":{"start":{"line":189,"column":1,"offset":6062},"end":{"line":194,"column":46,"offset":6221},"indent":[1,1,1,1,1]}}],"position":{"start":{"line":189,"column":1,"offset":6062},"end":{"line":194,"column":46,"offset":6221},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"  train(model, inputs, outputs, learning","position":{"start":{"line":196,"column":1,"offset":6223},"end":{"line":196,"column":41,"offset":6263},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"rate=0.1)\n  print('Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f' %\n        (epoch, Ws","position":{"start":{"line":196,"column":42,"offset":6264},"end":{"line":198,"column":19,"offset":6343},"indent":[1,1]}},{"type":"linkReference","identifier":"-1","referenceType":"shortcut","children":[{"type":"text","value":"-1","position":{"start":{"line":198,"column":20,"offset":6344},"end":{"line":198,"column":22,"offset":6346},"indent":[]}}],"position":{"start":{"line":198,"column":19,"offset":6343},"end":{"line":198,"column":23,"offset":6347},"indent":[]}},{"type":"text","value":", bs","position":{"start":{"line":198,"column":23,"offset":6347},"end":{"line":198,"column":27,"offset":6351},"indent":[]}},{"type":"linkReference","identifier":"-1","referenceType":"shortcut","children":[{"type":"text","value":"-1","position":{"start":{"line":198,"column":28,"offset":6352},"end":{"line":198,"column":30,"offset":6354},"indent":[]}}],"position":{"start":{"line":198,"column":27,"offset":6351},"end":{"line":198,"column":31,"offset":6355},"indent":[]}},{"type":"text","value":", current","position":{"start":{"line":198,"column":31,"offset":6355},"end":{"line":198,"column":40,"offset":6364},"indent":[]}}],"position":{"start":{"line":196,"column":41,"offset":6263},"end":{"line":198,"column":41,"offset":6365},"indent":[1,1]}},{"type":"text","value":"loss))","position":{"start":{"line":198,"column":41,"offset":6365},"end":{"line":198,"column":47,"offset":6371},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":6223},"end":{"line":198,"column":47,"offset":6371},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#lets-plot-it-all","title":null,"data":{"hProperties":{"aria-label":"lets plot it all permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Let's plot it all","position":{"start":{"line":200,"column":3,"offset":6375},"end":{"line":200,"column":20,"offset":6392},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":6373},"end":{"line":200,"column":20,"offset":6392},"indent":[]},"data":{"id":"lets-plot-it-all","htmlAttributes":{"id":"lets-plot-it-all"},"hProperties":{"id":"lets-plot-it-all"}}},{"type":"paragraph","children":[{"type":"text","value":"plt.plot(epochs, Ws, 'r',\n         epochs, bs, 'b')\nplt.plot(","position":{"start":{"line":201,"column":1,"offset":6393},"end":{"line":203,"column":10,"offset":6454},"indent":[1,1]}},{"type":"linkReference","identifier":"true_w","referenceType":"shortcut","children":[{"type":"text","value":"TRUE_W","position":{"start":{"line":203,"column":11,"offset":6455},"end":{"line":203,"column":17,"offset":6461},"indent":[]}}],"position":{"start":{"line":203,"column":10,"offset":6454},"end":{"line":203,"column":18,"offset":6462},"indent":[]}},{"type":"text","value":" * len(epochs), 'r--',\n         ","position":{"start":{"line":203,"column":18,"offset":6462},"end":{"line":204,"column":10,"offset":6494},"indent":[1]}},{"type":"linkReference","identifier":"true_b","referenceType":"shortcut","children":[{"type":"text","value":"TRUE_b","position":{"start":{"line":204,"column":11,"offset":6495},"end":{"line":204,"column":17,"offset":6501},"indent":[]}}],"position":{"start":{"line":204,"column":10,"offset":6494},"end":{"line":204,"column":18,"offset":6502},"indent":[]}},{"type":"text","value":" * len(epochs), 'b--')\nplt.legend(","position":{"start":{"line":204,"column":18,"offset":6502},"end":{"line":205,"column":12,"offset":6536},"indent":[1]}},{"type":"linkReference","identifier":"'w', 'b', 'true w', 'true_b'","referenceType":"shortcut","children":[{"type":"text","value":"'W', 'b', 'true W', 'true_b'","position":{"start":{"line":205,"column":13,"offset":6537},"end":{"line":205,"column":41,"offset":6565},"indent":[]}}],"position":{"start":{"line":205,"column":12,"offset":6536},"end":{"line":205,"column":42,"offset":6566},"indent":[]}},{"type":"text","value":")\nplt.show()","position":{"start":{"line":205,"column":42,"offset":6566},"end":{"line":206,"column":11,"offset":6578},"indent":[1]}}],"position":{"start":{"line":201,"column":1,"offset":6393},"end":{"line":206,"column":11,"offset":6578},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"## Next Steps","position":{"start":{"line":208,"column":1,"offset":6580},"end":{"line":208,"column":17,"offset":6596},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":6580},"end":{"line":208,"column":17,"offset":6596},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this tutorial we covered ","position":{"start":{"line":210,"column":1,"offset":6598},"end":{"line":210,"column":29,"offset":6626},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":210,"column":29,"offset":6626},"end":{"line":210,"column":39,"offset":6636},"indent":[]}},{"type":"text","value":"s and built and trained a simple linear model using the TensorFlow primitives discussed so far.","position":{"start":{"line":210,"column":39,"offset":6636},"end":{"line":210,"column":134,"offset":6731},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":6598},"end":{"line":210,"column":134,"offset":6731},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In theory, this is pretty much all you need to use TensorFlow for your machine learning research.\nIn practice, particularly for neural networks, the higher level APIs like ","position":{"start":{"line":212,"column":1,"offset":6733},"end":{"line":213,"column":75,"offset":6905},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">tf.keras</code>","position":{"start":{"line":213,"column":75,"offset":6905},"end":{"line":213,"column":85,"offset":6915},"indent":[]}},{"type":"text","value":" will be much more convenient since it provides higher level building blocks (called \"layers\"), utilities to save and restore state, a suite of loss functions, a suite of optimization strategies etc.\n\"\"\"","position":{"start":{"line":213,"column":85,"offset":6915},"end":{"line":214,"column":4,"offset":7118},"indent":[1]}}],"position":{"start":{"line":212,"column":1,"offset":6733},"end":{"line":214,"column":4,"offset":7118},"indent":[1,1]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":216,"column":1,"offset":7120},"end":{"line":220,"column":1,"offset":7127},"indent":[1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":220,"column":1,"offset":7127}}}}