{"expireTime":9007200813389834000,"key":"transformer-remark-markdown-html-ast-bcd8a94fc6120bcd1c72925a1d611d56-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#basic-operations","aria-label":"basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Basic Operations","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":20,"offset":19}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initilize-tensors"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initilize-tensors","aria-label":"initilize tensors permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"initilize tensors","position":{"start":{"line":3,"column":5,"offset":25},"end":{"line":3,"column":22,"offset":42}}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":23,"offset":43}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(10,10) array with zero elements","position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}}],"position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Using python state\nx = tf.zeros([10, 10])\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":79},"end":{"line":13,"column":4,"offset":238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensors-basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensors-basic-operations","aria-label":"tensors basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensors basic operations","position":{"start":{"line":15,"column":6,"offset":245},"end":{"line":15,"column":30,"offset":269}}}],"position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":15,"column":31,"offset":270}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import tensorflow as tf\nimport numpy \n\ntf.enable_eager_execution\n\nprint(tf.add(1, 2))\nprint(tf.add([1, 2], [3, 4]))\nprint(tf.square(5))\nprint(tf.reduce_sum([1, 2, 3]))\nprint(tf.encode_base64(&quot;hello world&quot;))\n\n# Operator overloading is also supported\nprint(tf.square(2) + tf.square(3))\n\nx = tf.matmul([[1]], [[2, 3]])\nprint(x.shape)\nprint(x.dtype)\n\nndarray = np.ones([3, 3])\n\nprint(&quot;TensorFlow operations convert numpy arrays to Tensors automatically&quot;)\ntensor = tf.multiply(ndarray, 42)\nprint(tensor)\n\nprint(&quot;And NumPy operations convert Tensors to numpy arrays automatically&quot;)\nprint(np.add(tensor, 1))\n\nprint(&quot;The .numpy() method explicitly converts a Tensor to a numpy array&quot;)\nprint(tensor.numpy())</code></pre></div>","position":{"start":{"line":17,"column":1,"offset":272},"end":{"line":48,"column":4,"offset":979}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"a-small-script-to-show-a-custom-training-using"},"children":[{"type":"element","tagName":"a","properties":{"href":"#a-small-script-to-show-a-custom-training-using","aria-label":"a small script to show a custom training using permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"A small script to show a custom training using","position":{"start":{"line":55,"column":5,"offset":990},"end":{"line":55,"column":51,"offset":1036}}}],"position":{"start":{"line":55,"column":1,"offset":986},"end":{"line":55,"column":52,"offset":1037}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*class,  assert, plot","position":{"start":{"line":57,"column":1,"offset":1039},"end":{"line":57,"column":22,"offset":1060}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":57,"column":22,"offset":1060},"end":{"line":58,"column":1,"offset":1063}}},{"type":"text","value":"\n"},{"type":"text","value":"*variable, gradient, and loss","position":{"start":{"line":58,"column":1,"offset":1063},"end":{"line":58,"column":30,"offset":1092}}}],"position":{"start":{"line":57,"column":1,"offset":1039},"end":{"line":58,"column":30,"offset":1092}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"# Custom training: basics\n\"\"\"","position":{"start":{"line":61,"column":1,"offset":1095},"end":{"line":62,"column":4,"offset":1127}}}],"position":{"start":{"line":61,"column":1,"offset":1095},"end":{"line":62,"column":4,"offset":1127}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from ","position":{"start":{"line":64,"column":1,"offset":1129},"end":{"line":64,"column":6,"offset":1134}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"future","position":{"start":{"line":64,"column":8,"offset":1136},"end":{"line":64,"column":14,"offset":1142}}}],"position":{"start":{"line":64,"column":6,"offset":1134},"end":{"line":64,"column":16,"offset":1144}}},{"type":"text","value":" import absolute","position":{"start":{"line":64,"column":16,"offset":1144},"end":{"line":64,"column":32,"offset":1160}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"import, division, print","position":{"start":{"line":64,"column":33,"offset":1161},"end":{"line":64,"column":56,"offset":1184}}}],"position":{"start":{"line":64,"column":32,"offset":1160},"end":{"line":64,"column":57,"offset":1185}}},{"type":"text","value":"function, unicode_literals","position":{"start":{"line":64,"column":57,"offset":1185},"end":{"line":64,"column":83,"offset":1211}}}],"position":{"start":{"line":64,"column":1,"offset":1129},"end":{"line":64,"column":83,"offset":1211}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import tensorflow as tf","position":{"start":{"line":66,"column":1,"offset":1213},"end":{"line":66,"column":24,"offset":1236}}}],"position":{"start":{"line":66,"column":1,"offset":1213},"end":{"line":66,"column":24,"offset":1236}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"tf.enable","position":{"start":{"line":68,"column":1,"offset":1238},"end":{"line":68,"column":10,"offset":1247}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"eager","position":{"start":{"line":68,"column":11,"offset":1248},"end":{"line":68,"column":16,"offset":1253}}}],"position":{"start":{"line":68,"column":10,"offset":1247},"end":{"line":68,"column":17,"offset":1254}}},{"type":"text","value":"execution()","position":{"start":{"line":68,"column":17,"offset":1254},"end":{"line":68,"column":28,"offset":1265}}}],"position":{"start":{"line":68,"column":1,"offset":1238},"end":{"line":68,"column":28,"offset":1265}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Variables","position":{"start":{"line":70,"column":1,"offset":1267},"end":{"line":70,"column":16,"offset":1282}}}],"position":{"start":{"line":70,"column":1,"offset":1267},"end":{"line":70,"column":16,"offset":1282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Tensors in TensorFlow are immutable stateless objects. Machine learning models, however, need to have changing state: as your model trains, the same code to compute predictions should behave differently over time (hopefully with a lower loss!). To represent this state which needs to change over the course of your computation, you can choose to rely on the fact that Python is a stateful programming language:\n\"\"\"","position":{"start":{"line":72,"column":1,"offset":1284},"end":{"line":73,"column":4,"offset":1698}}}],"position":{"start":{"line":72,"column":1,"offset":1284},"end":{"line":73,"column":4,"offset":1698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"using-python-state"},"children":[{"type":"element","tagName":"a","properties":{"href":"#using-python-state","aria-label":"using python state permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Using python state","position":{"start":{"line":75,"column":3,"offset":1702},"end":{"line":75,"column":21,"offset":1720}}}],"position":{"start":{"line":75,"column":1,"offset":1700},"end":{"line":75,"column":21,"offset":1720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x = tf.zeros(","position":{"start":{"line":76,"column":1,"offset":1721},"end":{"line":76,"column":14,"offset":1734}}},{"type":"text","value":"[10, 10]","position":{"start":{"line":76,"column":15,"offset":1735},"end":{"line":76,"column":21,"offset":1741}}},{"type":"text","value":")\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n# value of x\nprint(x)","position":{"start":{"line":76,"column":22,"offset":1742},"end":{"line":79,"column":9,"offset":1851}}}],"position":{"start":{"line":76,"column":1,"offset":1721},"end":{"line":79,"column":9,"offset":1851}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"TensorFlow, however, has stateful operations built in, and these are often more pleasant to use than low-level Python representations of your state. To represent weights in a model, for example, it's often convenient and efficient to use TensorFlow variables.","position":{"start":{"line":81,"column":1,"offset":1853},"end":{"line":81,"column":263,"offset":2115}}}],"position":{"start":{"line":81,"column":1,"offset":1853},"end":{"line":81,"column":263,"offset":2115}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A Variable is an object which stores a value and, when used in a TensorFlow computation, will implicitly read from this stored value. There are operations (","position":{"start":{"line":83,"column":1,"offset":2117},"end":{"line":83,"column":157,"offset":2273}}},{"type":"raw","value":"<code class=\"language-text\">tf.assign_sub</code>","position":{"start":{"line":83,"column":157,"offset":2273},"end":{"line":83,"column":172,"offset":2288}}},{"type":"text","value":", ","position":{"start":{"line":83,"column":172,"offset":2288},"end":{"line":83,"column":174,"offset":2290}}},{"type":"raw","value":"<code class=\"language-text\">tf.scatter_update</code>","position":{"start":{"line":83,"column":174,"offset":2290},"end":{"line":83,"column":193,"offset":2309}}},{"type":"text","value":", etc) which manipulate the value stored in a TensorFlow variable.\n\"\"\"","position":{"start":{"line":83,"column":193,"offset":2309},"end":{"line":84,"column":4,"offset":2379}}}],"position":{"start":{"line":83,"column":1,"offset":2117},"end":{"line":84,"column":4,"offset":2379}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v = tf.Variable(1.0)\nassert v.numpy() == 1.0","position":{"start":{"line":86,"column":1,"offset":2381},"end":{"line":87,"column":24,"offset":2425}}}],"position":{"start":{"line":86,"column":1,"offset":2381},"end":{"line":87,"column":24,"offset":2425}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"re-assign-the-value"},"children":[{"type":"element","tagName":"a","properties":{"href":"#re-assign-the-value","aria-label":"re assign the value permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Re-assign the value","position":{"start":{"line":89,"column":3,"offset":2429},"end":{"line":89,"column":22,"offset":2448}}}],"position":{"start":{"line":89,"column":1,"offset":2427},"end":{"line":89,"column":22,"offset":2448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(3.0)\nassert v.numpy() == 3.0","position":{"start":{"line":90,"column":1,"offset":2449},"end":{"line":91,"column":24,"offset":2486}}}],"position":{"start":{"line":90,"column":1,"offset":2449},"end":{"line":91,"column":24,"offset":2486}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"},"children":[{"type":"element","tagName":"a","properties":{"href":"#use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","aria-label":"use v in a tensorflow operation like tfsquare and reassign permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Use ","position":{"start":{"line":93,"column":3,"offset":2490},"end":{"line":93,"column":7,"offset":2494}}},{"type":"raw","value":"<code class=\"language-text\">v</code>","position":{"start":{"line":93,"column":7,"offset":2494},"end":{"line":93,"column":10,"offset":2497}}},{"type":"text","value":" in a TensorFlow operation like tf.square() and reassign","position":{"start":{"line":93,"column":10,"offset":2497},"end":{"line":93,"column":66,"offset":2553}}}],"position":{"start":{"line":93,"column":1,"offset":2488},"end":{"line":93,"column":66,"offset":2553}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(tf.square(v))\nassert v.numpy() == 9.0","position":{"start":{"line":94,"column":1,"offset":2554},"end":{"line":95,"column":24,"offset":2600}}}],"position":{"start":{"line":94,"column":1,"offset":2554},"end":{"line":95,"column":24,"offset":2600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Computations using Variables are automatically traced when computing gradients. For Variables representing embeddings TensorFlow will do sparse updates by default, which are more computation and memory efficient.","position":{"start":{"line":97,"column":1,"offset":2602},"end":{"line":97,"column":216,"offset":2817}}}],"position":{"start":{"line":97,"column":1,"offset":2602},"end":{"line":97,"column":216,"offset":2817}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using Variables is also a way to quickly let a reader of your code know that this piece of state is mutable.","position":{"start":{"line":99,"column":1,"offset":2819},"end":{"line":99,"column":109,"offset":2927}}}],"position":{"start":{"line":99,"column":1,"offset":2819},"end":{"line":99,"column":109,"offset":2927}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"example-fitting-a-linear-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#example-fitting-a-linear-model","aria-label":"example fitting a linear model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Example: Fitting a linear model","position":{"start":{"line":101,"column":4,"offset":2932},"end":{"line":101,"column":35,"offset":2963}}}],"position":{"start":{"line":101,"column":1,"offset":2929},"end":{"line":101,"column":35,"offset":2963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's now put the few concepts we have so far ---","position":{"start":{"line":103,"column":1,"offset":2965},"end":{"line":103,"column":50,"offset":3014}}},{"type":"raw","value":"<code class=\"language-text\">Tensor</code>","position":{"start":{"line":103,"column":50,"offset":3014},"end":{"line":103,"column":58,"offset":3022}}},{"type":"text","value":", ","position":{"start":{"line":103,"column":58,"offset":3022},"end":{"line":103,"column":60,"offset":3024}}},{"type":"raw","value":"<code class=\"language-text\">GradientTape</code>","position":{"start":{"line":103,"column":60,"offset":3024},"end":{"line":103,"column":74,"offset":3038}}},{"type":"text","value":", ","position":{"start":{"line":103,"column":74,"offset":3038},"end":{"line":103,"column":76,"offset":3040}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":103,"column":76,"offset":3040},"end":{"line":103,"column":86,"offset":3050}}},{"type":"text","value":" --- to build and train a simple model. This typically involves a few steps:","position":{"start":{"line":103,"column":86,"offset":3050},"end":{"line":103,"column":162,"offset":3126}}}],"position":{"start":{"line":103,"column":1,"offset":2965},"end":{"line":103,"column":162,"offset":3126}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define the model.","position":{"start":{"line":105,"column":4,"offset":3131},"end":{"line":105,"column":21,"offset":3148}}}],"position":{"start":{"line":105,"column":1,"offset":3128},"end":{"line":105,"column":21,"offset":3148}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define a loss function.","position":{"start":{"line":106,"column":4,"offset":3152},"end":{"line":106,"column":27,"offset":3175}}}],"position":{"start":{"line":106,"column":1,"offset":3149},"end":{"line":106,"column":27,"offset":3175}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Obtain training data.","position":{"start":{"line":107,"column":4,"offset":3179},"end":{"line":107,"column":25,"offset":3200}}}],"position":{"start":{"line":107,"column":1,"offset":3176},"end":{"line":107,"column":25,"offset":3200}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Run through the training data and use an \"optimizer\" to adjust the variables to fit the data.","position":{"start":{"line":108,"column":4,"offset":3204},"end":{"line":108,"column":97,"offset":3297}}}],"position":{"start":{"line":108,"column":1,"offset":3201},"end":{"line":108,"column":97,"offset":3297}}},{"type":"text","value":"\n"}],"position":{"start":{"line":105,"column":1,"offset":3128},"end":{"line":108,"column":97,"offset":3297}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial, we'll walk through a trivial example of a simple linear model: ","position":{"start":{"line":110,"column":1,"offset":3299},"end":{"line":110,"column":82,"offset":3380}}},{"type":"raw","value":"<code class=\"language-text\">f(x) = x * W + b</code>","position":{"start":{"line":110,"column":82,"offset":3380},"end":{"line":110,"column":100,"offset":3398}}},{"type":"text","value":", which has two variables - ","position":{"start":{"line":110,"column":100,"offset":3398},"end":{"line":110,"column":128,"offset":3426}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":110,"column":128,"offset":3426},"end":{"line":110,"column":131,"offset":3429}}},{"type":"text","value":" and ","position":{"start":{"line":110,"column":131,"offset":3429},"end":{"line":110,"column":136,"offset":3434}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":110,"column":136,"offset":3434},"end":{"line":110,"column":139,"offset":3437}}},{"type":"text","value":". Furthermore, we'll synthesize data such that a well trained model would have ","position":{"start":{"line":110,"column":139,"offset":3437},"end":{"line":110,"column":218,"offset":3516}}},{"type":"raw","value":"<code class=\"language-text\">W = 3.0</code>","position":{"start":{"line":110,"column":218,"offset":3516},"end":{"line":110,"column":227,"offset":3525}}},{"type":"text","value":" and ","position":{"start":{"line":110,"column":227,"offset":3525},"end":{"line":110,"column":232,"offset":3530}}},{"type":"raw","value":"<code class=\"language-text\">b = 2.0</code>","position":{"start":{"line":110,"column":232,"offset":3530},"end":{"line":110,"column":241,"offset":3539}}},{"type":"text","value":".","position":{"start":{"line":110,"column":241,"offset":3539},"end":{"line":110,"column":242,"offset":3540}}}],"position":{"start":{"line":110,"column":1,"offset":3299},"end":{"line":110,"column":242,"offset":3540}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"define-the-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#define-the-model","aria-label":"define the model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Define the model","position":{"start":{"line":112,"column":5,"offset":3546},"end":{"line":112,"column":21,"offset":3562}}}],"position":{"start":{"line":112,"column":1,"offset":3542},"end":{"line":112,"column":21,"offset":3562}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's define a simple class to encapsulate the variables and the computation.\n\"\"\"","position":{"start":{"line":114,"column":1,"offset":3564},"end":{"line":115,"column":4,"offset":3645}}}],"position":{"start":{"line":114,"column":1,"offset":3564},"end":{"line":115,"column":4,"offset":3645}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"class Model(object):\ndef ","position":{"start":{"line":117,"column":1,"offset":3647},"end":{"line":118,"column":7,"offset":3674}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"init","position":{"start":{"line":118,"column":9,"offset":3676},"end":{"line":118,"column":13,"offset":3680}}}],"position":{"start":{"line":118,"column":7,"offset":3674},"end":{"line":118,"column":15,"offset":3682}}},{"type":"text","value":"(self):\n# Initialize variable to (5.0, 0.0)\n# In practice, these should be initialized to random values.\nself.W = tf.Variable(5.0)\nself.b = tf.Variable(0.0)","position":{"start":{"line":118,"column":15,"offset":3682},"end":{"line":122,"column":30,"offset":3854}}}],"position":{"start":{"line":117,"column":1,"offset":3647},"end":{"line":122,"column":30,"offset":3854}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  def ","position":{"start":{"line":124,"column":1,"offset":3856},"end":{"line":124,"column":7,"offset":3862}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"call","position":{"start":{"line":124,"column":9,"offset":3864},"end":{"line":124,"column":13,"offset":3868}}}],"position":{"start":{"line":124,"column":7,"offset":3862},"end":{"line":124,"column":15,"offset":3870}}},{"type":"text","value":"(self, x):\nreturn self.W * x + self.b","position":{"start":{"line":124,"column":15,"offset":3870},"end":{"line":125,"column":31,"offset":3911}}}],"position":{"start":{"line":124,"column":1,"offset":3856},"end":{"line":125,"column":31,"offset":3911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":127,"column":1,"offset":3913},"end":{"line":127,"column":16,"offset":3928}}}],"position":{"start":{"line":127,"column":1,"offset":3913},"end":{"line":127,"column":16,"offset":3928}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"assert model(3.0).numpy() == 15.0","position":{"start":{"line":129,"column":1,"offset":3930},"end":{"line":129,"column":34,"offset":3963}}}],"position":{"start":{"line":129,"column":1,"offset":3930},"end":{"line":129,"column":34,"offset":3963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a loss function","position":{"start":{"line":131,"column":1,"offset":3965},"end":{"line":131,"column":30,"offset":3994}}}],"position":{"start":{"line":131,"column":1,"offset":3965},"end":{"line":131,"column":30,"offset":3994}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A loss function measures how well the output of a model for a given input matches the desired output. Let's use the standard L2 loss.\n\"\"\"","position":{"start":{"line":133,"column":1,"offset":3996},"end":{"line":134,"column":4,"offset":4133}}}],"position":{"start":{"line":133,"column":1,"offset":3996},"end":{"line":134,"column":4,"offset":4133}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def loss(predicted","position":{"start":{"line":136,"column":1,"offset":4135},"end":{"line":136,"column":19,"offset":4153}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"y, desired","position":{"start":{"line":136,"column":20,"offset":4154},"end":{"line":136,"column":30,"offset":4164}}}],"position":{"start":{"line":136,"column":19,"offset":4153},"end":{"line":136,"column":31,"offset":4165}}},{"type":"text","value":"y):\nreturn tf.reduce","position":{"start":{"line":136,"column":31,"offset":4165},"end":{"line":137,"column":19,"offset":4187}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"mean(tf.square(predicted","position":{"start":{"line":137,"column":20,"offset":4188},"end":{"line":137,"column":44,"offset":4212}}}],"position":{"start":{"line":137,"column":19,"offset":4187},"end":{"line":137,"column":45,"offset":4213}}},{"type":"text","value":"y - desired_y))","position":{"start":{"line":137,"column":45,"offset":4213},"end":{"line":137,"column":60,"offset":4228}}}],"position":{"start":{"line":136,"column":1,"offset":4135},"end":{"line":137,"column":60,"offset":4228}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Obtain training data","position":{"start":{"line":139,"column":1,"offset":4230},"end":{"line":139,"column":28,"offset":4257}}}],"position":{"start":{"line":139,"column":1,"offset":4230},"end":{"line":139,"column":28,"offset":4257}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's synthesize the training data with some noise.\n\"\"\"","position":{"start":{"line":141,"column":1,"offset":4259},"end":{"line":142,"column":4,"offset":4314}}}],"position":{"start":{"line":141,"column":1,"offset":4259},"end":{"line":142,"column":4,"offset":4314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"TRUE","position":{"start":{"line":144,"column":1,"offset":4316},"end":{"line":144,"column":5,"offset":4320}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W = 3.0\nTRUE","position":{"start":{"line":144,"column":6,"offset":4321},"end":{"line":145,"column":5,"offset":4333}}}],"position":{"start":{"line":144,"column":5,"offset":4320},"end":{"line":145,"column":6,"offset":4334}}},{"type":"text","value":"b = 2.0\nNUM_EXAMPLES = 1000","position":{"start":{"line":145,"column":6,"offset":4334},"end":{"line":146,"column":20,"offset":4361}}}],"position":{"start":{"line":144,"column":1,"offset":4316},"end":{"line":146,"column":20,"offset":4361}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"inputs  = tf.random","position":{"start":{"line":148,"column":1,"offset":4363},"end":{"line":148,"column":20,"offset":4382}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":148,"column":21,"offset":4383},"end":{"line":148,"column":38,"offset":4400}}}],"position":{"start":{"line":148,"column":20,"offset":4382},"end":{"line":148,"column":39,"offset":4401}}},{"type":"text","value":"EXAMPLES])\nnoise   = tf.random","position":{"start":{"line":148,"column":39,"offset":4401},"end":{"line":149,"column":20,"offset":4431}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":149,"column":21,"offset":4432},"end":{"line":149,"column":38,"offset":4449}}}],"position":{"start":{"line":149,"column":20,"offset":4431},"end":{"line":149,"column":39,"offset":4450}}},{"type":"text","value":"EXAMPLES])\noutputs = inputs * TRUE","position":{"start":{"line":149,"column":39,"offset":4450},"end":{"line":150,"column":24,"offset":4484}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W + TRUE","position":{"start":{"line":150,"column":25,"offset":4485},"end":{"line":150,"column":33,"offset":4493}}}],"position":{"start":{"line":150,"column":24,"offset":4484},"end":{"line":150,"column":34,"offset":4494}}},{"type":"text","value":"b + noise","position":{"start":{"line":150,"column":34,"offset":4494},"end":{"line":150,"column":43,"offset":4503}}}],"position":{"start":{"line":148,"column":1,"offset":4363},"end":{"line":150,"column":43,"offset":4503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Before we train the model let's visualize where the model stands right now. We'll plot the model's predictions in red and the training data in blue.\"\"\"","position":{"start":{"line":152,"column":1,"offset":4505},"end":{"line":152,"column":155,"offset":4659}}}],"position":{"start":{"line":152,"column":1,"offset":4505},"end":{"line":152,"column":155,"offset":4659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import matplotlib.pyplot as plt","position":{"start":{"line":154,"column":1,"offset":4661},"end":{"line":154,"column":32,"offset":4692}}}],"position":{"start":{"line":154,"column":1,"offset":4661},"end":{"line":154,"column":32,"offset":4692}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.scatter(inputs, outputs, c='b')\nplt.scatter(inputs, model(inputs), c='r')\nplt.show()","position":{"start":{"line":156,"column":1,"offset":4694},"end":{"line":158,"column":11,"offset":4782}}}],"position":{"start":{"line":156,"column":1,"offset":4694},"end":{"line":158,"column":11,"offset":4782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print('Current loss: '),\nprint(loss(model(inputs), outputs).numpy())","position":{"start":{"line":160,"column":1,"offset":4784},"end":{"line":161,"column":44,"offset":4852}}}],"position":{"start":{"line":160,"column":1,"offset":4784},"end":{"line":161,"column":44,"offset":4852}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a training loop","position":{"start":{"line":163,"column":1,"offset":4854},"end":{"line":163,"column":30,"offset":4883}}}],"position":{"start":{"line":163,"column":1,"offset":4854},"end":{"line":163,"column":30,"offset":4883}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We now have our network and our training data. Let's train it, i.e., use the training data to update the model's variables (","position":{"start":{"line":165,"column":1,"offset":4885},"end":{"line":165,"column":125,"offset":5009}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":165,"column":125,"offset":5009},"end":{"line":165,"column":128,"offset":5012}}},{"type":"text","value":" and ","position":{"start":{"line":165,"column":128,"offset":5012},"end":{"line":165,"column":133,"offset":5017}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":165,"column":133,"offset":5017},"end":{"line":165,"column":136,"offset":5020}}},{"type":"text","value":") so that the loss goes down using ","position":{"start":{"line":165,"column":136,"offset":5020},"end":{"line":165,"column":171,"offset":5055}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Gradient_descent","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"gradient descent","position":{"start":{"line":165,"column":172,"offset":5056},"end":{"line":165,"column":188,"offset":5072}}}],"position":{"start":{"line":165,"column":171,"offset":5055},"end":{"line":165,"column":237,"offset":5121}}},{"type":"text","value":". There are many variants of the gradient descent scheme that are captured in ","position":{"start":{"line":165,"column":237,"offset":5121},"end":{"line":165,"column":315,"offset":5199}}},{"type":"raw","value":"<code class=\"language-text\">tf.train.Optimizer</code>","position":{"start":{"line":165,"column":315,"offset":5199},"end":{"line":165,"column":335,"offset":5219}}},{"type":"text","value":" implementations. We'd highly recommend using those implementations, but in the spirit of building from first principles, in this particular example we will implement the basic math ourselves.\n\"\"\"","position":{"start":{"line":165,"column":335,"offset":5219},"end":{"line":166,"column":4,"offset":5415}}}],"position":{"start":{"line":165,"column":1,"offset":4885},"end":{"line":166,"column":4,"offset":5415}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def train(model, inputs, outputs, learning","position":{"start":{"line":168,"column":1,"offset":5417},"end":{"line":168,"column":43,"offset":5459}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate):\nwith tf.GradientTape() as t:\ncurrent","position":{"start":{"line":168,"column":44,"offset":5460},"end":{"line":170,"column":12,"offset":5509}}}],"position":{"start":{"line":168,"column":43,"offset":5459},"end":{"line":170,"column":13,"offset":5510}}},{"type":"text","value":"loss = loss(model(inputs), outputs)\ndW, db = t.gradient(current","position":{"start":{"line":170,"column":13,"offset":5510},"end":{"line":171,"column":30,"offset":5575}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"loss, ","position":{"start":{"line":171,"column":31,"offset":5576},"end":{"line":171,"column":37,"offset":5582}}},{"type":"text","value":"[model.W, model.b]","position":{"start":{"line":171,"column":38,"offset":5583},"end":{"line":171,"column":54,"offset":5599}}},{"type":"text","value":")\nmodel.W.assign","position":{"start":{"line":171,"column":55,"offset":5600},"end":{"line":172,"column":17,"offset":5618}}}],"position":{"start":{"line":171,"column":30,"offset":5575},"end":{"line":172,"column":18,"offset":5619}}},{"type":"text","value":"sub(learning","position":{"start":{"line":172,"column":18,"offset":5619},"end":{"line":172,"column":30,"offset":5631}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate * dW)\nmodel.b.assign","position":{"start":{"line":172,"column":31,"offset":5632},"end":{"line":173,"column":17,"offset":5659}}}],"position":{"start":{"line":172,"column":30,"offset":5631},"end":{"line":173,"column":18,"offset":5660}}},{"type":"text","value":"sub(learning_rate * db)","position":{"start":{"line":173,"column":18,"offset":5660},"end":{"line":173,"column":41,"offset":5683}}}],"position":{"start":{"line":168,"column":1,"offset":5417},"end":{"line":173,"column":41,"offset":5683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Finally, let's repeatedly run through the training data and see how ","position":{"start":{"line":175,"column":1,"offset":5685},"end":{"line":175,"column":72,"offset":5756}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":175,"column":72,"offset":5756},"end":{"line":175,"column":75,"offset":5759}}},{"type":"text","value":" and ","position":{"start":{"line":175,"column":75,"offset":5759},"end":{"line":175,"column":80,"offset":5764}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":175,"column":80,"offset":5764},"end":{"line":175,"column":83,"offset":5767}}},{"type":"text","value":" evolve.\"\"\"","position":{"start":{"line":175,"column":83,"offset":5767},"end":{"line":175,"column":94,"offset":5778}}}],"position":{"start":{"line":175,"column":1,"offset":5685},"end":{"line":175,"column":94,"offset":5778}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":177,"column":1,"offset":5780},"end":{"line":177,"column":16,"offset":5795}}}],"position":{"start":{"line":177,"column":1,"offset":5780},"end":{"line":177,"column":16,"offset":5795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"},"children":[{"type":"element","tagName":"a","properties":{"href":"#collect-the-history-of-w-values-and-b-values-to-plot-later","aria-label":"collect the history of w values and b values to plot later permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Collect the history of W-values and b-values to plot later","position":{"start":{"line":179,"column":3,"offset":5799},"end":{"line":179,"column":61,"offset":5857}}}],"position":{"start":{"line":179,"column":1,"offset":5797},"end":{"line":179,"column":61,"offset":5857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ws, bs = [], []\nepochs = range(10)\nfor epoch in epochs:\nWs.append(model.W.numpy())\nbs.append(model.b.numpy())\ncurrent_loss = loss(model(inputs), outputs)","position":{"start":{"line":180,"column":1,"offset":5858},"end":{"line":185,"column":46,"offset":6017}}}],"position":{"start":{"line":180,"column":1,"offset":5858},"end":{"line":185,"column":46,"offset":6017}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  train(model, inputs, outputs, learning","position":{"start":{"line":187,"column":1,"offset":6019},"end":{"line":187,"column":41,"offset":6059}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate=0.1)\nprint('Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f' %\n(epoch, Ws","position":{"start":{"line":187,"column":42,"offset":6060},"end":{"line":189,"column":19,"offset":6139}}},{"type":"text","value":"[-1]","position":{"start":{"line":189,"column":20,"offset":6140},"end":{"line":189,"column":22,"offset":6142}}},{"type":"text","value":", bs","position":{"start":{"line":189,"column":23,"offset":6143},"end":{"line":189,"column":27,"offset":6147}}},{"type":"text","value":"[-1]","position":{"start":{"line":189,"column":28,"offset":6148},"end":{"line":189,"column":30,"offset":6150}}},{"type":"text","value":", current","position":{"start":{"line":189,"column":31,"offset":6151},"end":{"line":189,"column":40,"offset":6160}}}],"position":{"start":{"line":187,"column":41,"offset":6059},"end":{"line":189,"column":41,"offset":6161}}},{"type":"text","value":"loss))","position":{"start":{"line":189,"column":41,"offset":6161},"end":{"line":189,"column":47,"offset":6167}}}],"position":{"start":{"line":187,"column":1,"offset":6019},"end":{"line":189,"column":47,"offset":6167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"lets-plot-it-all"},"children":[{"type":"element","tagName":"a","properties":{"href":"#lets-plot-it-all","aria-label":"lets plot it all permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Let's plot it all","position":{"start":{"line":191,"column":3,"offset":6171},"end":{"line":191,"column":20,"offset":6188}}}],"position":{"start":{"line":191,"column":1,"offset":6169},"end":{"line":191,"column":20,"offset":6188}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.plot(epochs, Ws, 'r',\nepochs, bs, 'b')\nplt.plot(","position":{"start":{"line":192,"column":1,"offset":6189},"end":{"line":194,"column":10,"offset":6250}}},{"type":"text","value":"[TRUE_W]","position":{"start":{"line":194,"column":11,"offset":6251},"end":{"line":194,"column":17,"offset":6257}}},{"type":"text","value":" * len(epochs), 'r--',\n","position":{"start":{"line":194,"column":18,"offset":6258},"end":{"line":195,"column":10,"offset":6290}}},{"type":"text","value":"[TRUE_b]","position":{"start":{"line":195,"column":11,"offset":6291},"end":{"line":195,"column":17,"offset":6297}}},{"type":"text","value":" * len(epochs), 'b--')\nplt.legend(","position":{"start":{"line":195,"column":18,"offset":6298},"end":{"line":196,"column":12,"offset":6332}}},{"type":"text","value":"['W', 'b', 'true W', 'true_b']","position":{"start":{"line":196,"column":13,"offset":6333},"end":{"line":196,"column":41,"offset":6361}}},{"type":"text","value":")\nplt.show()","position":{"start":{"line":196,"column":42,"offset":6362},"end":{"line":197,"column":11,"offset":6374}}}],"position":{"start":{"line":192,"column":1,"offset":6189},"end":{"line":197,"column":11,"offset":6374}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Next Steps","position":{"start":{"line":199,"column":1,"offset":6376},"end":{"line":199,"column":17,"offset":6392}}}],"position":{"start":{"line":199,"column":1,"offset":6376},"end":{"line":199,"column":17,"offset":6392}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial we covered ","position":{"start":{"line":201,"column":1,"offset":6394},"end":{"line":201,"column":29,"offset":6422}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":201,"column":29,"offset":6422},"end":{"line":201,"column":39,"offset":6432}}},{"type":"text","value":"s and built and trained a simple linear model using the TensorFlow primitives discussed so far.","position":{"start":{"line":201,"column":39,"offset":6432},"end":{"line":201,"column":134,"offset":6527}}}],"position":{"start":{"line":201,"column":1,"offset":6394},"end":{"line":201,"column":134,"offset":6527}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In theory, this is pretty much all you need to use TensorFlow for your machine learning research.\nIn practice, particularly for neural networks, the higher level APIs like ","position":{"start":{"line":203,"column":1,"offset":6529},"end":{"line":204,"column":75,"offset":6701}}},{"type":"raw","value":"<code class=\"language-text\">tf.keras</code>","position":{"start":{"line":204,"column":75,"offset":6701},"end":{"line":204,"column":85,"offset":6711}}},{"type":"text","value":" will be much more convenient since it provides higher level building blocks (called \"layers\"), utilities to save and restore state, a suite of loss functions, a suite of optimization strategies etc.\n\"\"\"","position":{"start":{"line":204,"column":85,"offset":6711},"end":{"line":205,"column":4,"offset":6914}}}],"position":{"start":{"line":203,"column":1,"offset":6529},"end":{"line":205,"column":4,"offset":6914}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":207,"column":1,"offset":6916},"end":{"line":211,"column":1,"offset":6923}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":211,"column":1,"offset":6923}}}}