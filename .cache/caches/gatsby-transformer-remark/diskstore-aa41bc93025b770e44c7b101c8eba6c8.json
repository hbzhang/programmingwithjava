{"expireTime":9007200813400783000,"key":"transformer-remark-markdown-html-ast-46848b3bc5d5262f9f8530e6c6ef9eba-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#basic-operations","aria-label":"basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Basic Operations","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":20,"offset":19}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initilize-tensors"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initilize-tensors","aria-label":"initilize tensors permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"initilize tensors","position":{"start":{"line":3,"column":5,"offset":25},"end":{"line":3,"column":22,"offset":42}}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":23,"offset":43}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(10,10) array with zero elements","position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}}],"position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Using python state\nx = tf.zeros([10, 10])\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":79},"end":{"line":13,"column":4,"offset":238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensors-basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensors-basic-operations","aria-label":"tensors basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensors basic operations","position":{"start":{"line":15,"column":5,"offset":244},"end":{"line":15,"column":29,"offset":268}}}],"position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":15,"column":30,"offset":269}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import tensorflow as tf\nimport numpy \n\ntf.enable_eager_execution\n\nprint(tf.add(1, 2))\nprint(tf.add([1, 2], [3, 4]))\nprint(tf.square(5))\nprint(tf.reduce_sum([1, 2, 3]))\nprint(tf.encode_base64(&quot;hello world&quot;))\n\n# Operator overloading is also supported\nprint(tf.square(2) + tf.square(3))\n\nx = tf.matmul([[1]], [[2, 3]])\nprint(x.shape)\nprint(x.dtype)\n\nndarray = np.ones([3, 3])\n\nprint(&quot;TensorFlow operations convert numpy arrays to Tensors automatically&quot;)\ntensor = tf.multiply(ndarray, 42)\nprint(tensor)\n\nprint(&quot;And NumPy operations convert Tensors to numpy arrays automatically&quot;)\nprint(np.add(tensor, 1))\n\nprint(&quot;The .numpy() method explicitly converts a Tensor to a numpy array&quot;)\nprint(tensor.numpy())</code></pre></div>","position":{"start":{"line":17,"column":1,"offset":271},"end":{"line":48,"column":4,"offset":978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensorflow-save-on-gpu"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensorflow-save-on-gpu","aria-label":"tensorflow save on gpu permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensorflow save on GPU","position":{"start":{"line":50,"column":5,"offset":984},"end":{"line":50,"column":27,"offset":1006}}}],"position":{"start":{"line":50,"column":1,"offset":980},"end":{"line":50,"column":27,"offset":1006}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">x = tf.random_uniform([3, 3])\n\nprint(&quot;Is there a GPU available: &quot;),\nprint(tf.test.is_gpu_available())\n\nprint(&quot;Is the Tensor on GPU #0:  &quot;),\nprint(x.device.endswith(&#39;GPU:0&#39;))</code></pre></div>","position":{"start":{"line":52,"column":1,"offset":1008},"end":{"line":61,"column":4,"offset":1190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensorflow-uses-gpu"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensorflow-uses-gpu","aria-label":"tensorflow uses gpu permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensorflow uses GPU","position":{"start":{"line":63,"column":5,"offset":1196},"end":{"line":63,"column":24,"offset":1215}}}],"position":{"start":{"line":63,"column":1,"offset":1192},"end":{"line":63,"column":24,"offset":1215}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import time\n\ndef time_matmul(x):\n  start = time.time()\n  for loop in range(10):\n    tf.matmul(x, x)\n\n  result = time.time()-start\n    \n  print(&quot;10 loops: {:0.2f}ms&quot;.format(1000*result))\n\n\n# Force execution on CPU\nprint(&quot;On CPU:&quot;)\nwith tf.device(&quot;CPU:0&quot;):\n  x = tf.random_uniform([1000, 1000])\n  assert x.device.endswith(&quot;CPU:0&quot;)\n  time_matmul(x)\n\n# Force execution on GPU #0 if available\nif tf.test.is_gpu_available():\n  with tf.device(&quot;GPU:0&quot;): # Or GPU:1 for the 2nd GPU, GPU:2 for the 3rd etc.\n    x = tf.random_uniform([1000, 1000])\n    assert x.device.endswith(&quot;GPU:0&quot;)\n    time_matmul(x)</code></pre></div>","position":{"start":{"line":65,"column":1,"offset":1217},"end":{"line":93,"column":4,"offset":1820}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"a-small-script-to-show-a-custom-training-using"},"children":[{"type":"element","tagName":"a","properties":{"href":"#a-small-script-to-show-a-custom-training-using","aria-label":"a small script to show a custom training using permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"A small script to show a custom training using","position":{"start":{"line":99,"column":5,"offset":1830},"end":{"line":99,"column":51,"offset":1876}}}],"position":{"start":{"line":99,"column":1,"offset":1826},"end":{"line":99,"column":52,"offset":1877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*class,  assert, plot","position":{"start":{"line":101,"column":1,"offset":1879},"end":{"line":101,"column":22,"offset":1900}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":101,"column":22,"offset":1900},"end":{"line":102,"column":1,"offset":1903}}},{"type":"text","value":"\n"},{"type":"text","value":"*variable, gradient, and loss","position":{"start":{"line":102,"column":1,"offset":1903},"end":{"line":102,"column":30,"offset":1932}}}],"position":{"start":{"line":101,"column":1,"offset":1879},"end":{"line":102,"column":30,"offset":1932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"# Custom training: basics\n\"\"\"","position":{"start":{"line":105,"column":1,"offset":1935},"end":{"line":106,"column":4,"offset":1967}}}],"position":{"start":{"line":105,"column":1,"offset":1935},"end":{"line":106,"column":4,"offset":1967}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from ","position":{"start":{"line":108,"column":1,"offset":1969},"end":{"line":108,"column":6,"offset":1974}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"future","position":{"start":{"line":108,"column":8,"offset":1976},"end":{"line":108,"column":14,"offset":1982}}}],"position":{"start":{"line":108,"column":6,"offset":1974},"end":{"line":108,"column":16,"offset":1984}}},{"type":"text","value":" import absolute","position":{"start":{"line":108,"column":16,"offset":1984},"end":{"line":108,"column":32,"offset":2000}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"import, division, print","position":{"start":{"line":108,"column":33,"offset":2001},"end":{"line":108,"column":56,"offset":2024}}}],"position":{"start":{"line":108,"column":32,"offset":2000},"end":{"line":108,"column":57,"offset":2025}}},{"type":"text","value":"function, unicode_literals","position":{"start":{"line":108,"column":57,"offset":2025},"end":{"line":108,"column":83,"offset":2051}}}],"position":{"start":{"line":108,"column":1,"offset":1969},"end":{"line":108,"column":83,"offset":2051}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import tensorflow as tf","position":{"start":{"line":110,"column":1,"offset":2053},"end":{"line":110,"column":24,"offset":2076}}}],"position":{"start":{"line":110,"column":1,"offset":2053},"end":{"line":110,"column":24,"offset":2076}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"tf.enable","position":{"start":{"line":112,"column":1,"offset":2078},"end":{"line":112,"column":10,"offset":2087}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"eager","position":{"start":{"line":112,"column":11,"offset":2088},"end":{"line":112,"column":16,"offset":2093}}}],"position":{"start":{"line":112,"column":10,"offset":2087},"end":{"line":112,"column":17,"offset":2094}}},{"type":"text","value":"execution()","position":{"start":{"line":112,"column":17,"offset":2094},"end":{"line":112,"column":28,"offset":2105}}}],"position":{"start":{"line":112,"column":1,"offset":2078},"end":{"line":112,"column":28,"offset":2105}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Variables","position":{"start":{"line":114,"column":1,"offset":2107},"end":{"line":114,"column":16,"offset":2122}}}],"position":{"start":{"line":114,"column":1,"offset":2107},"end":{"line":114,"column":16,"offset":2122}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Tensors in TensorFlow are immutable stateless objects. Machine learning models, however, need to have changing state: as your model trains, the same code to compute predictions should behave differently over time (hopefully with a lower loss!). To represent this state which needs to change over the course of your computation, you can choose to rely on the fact that Python is a stateful programming language:\n\"\"\"","position":{"start":{"line":116,"column":1,"offset":2124},"end":{"line":117,"column":4,"offset":2538}}}],"position":{"start":{"line":116,"column":1,"offset":2124},"end":{"line":117,"column":4,"offset":2538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"using-python-state"},"children":[{"type":"element","tagName":"a","properties":{"href":"#using-python-state","aria-label":"using python state permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Using python state","position":{"start":{"line":119,"column":3,"offset":2542},"end":{"line":119,"column":21,"offset":2560}}}],"position":{"start":{"line":119,"column":1,"offset":2540},"end":{"line":119,"column":21,"offset":2560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x = tf.zeros(","position":{"start":{"line":120,"column":1,"offset":2561},"end":{"line":120,"column":14,"offset":2574}}},{"type":"text","value":"[10, 10]","position":{"start":{"line":120,"column":15,"offset":2575},"end":{"line":120,"column":21,"offset":2581}}},{"type":"text","value":")\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n# value of x\nprint(x)","position":{"start":{"line":120,"column":22,"offset":2582},"end":{"line":123,"column":9,"offset":2691}}}],"position":{"start":{"line":120,"column":1,"offset":2561},"end":{"line":123,"column":9,"offset":2691}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"TensorFlow, however, has stateful operations built in, and these are often more pleasant to use than low-level Python representations of your state. To represent weights in a model, for example, it's often convenient and efficient to use TensorFlow variables.","position":{"start":{"line":125,"column":1,"offset":2693},"end":{"line":125,"column":263,"offset":2955}}}],"position":{"start":{"line":125,"column":1,"offset":2693},"end":{"line":125,"column":263,"offset":2955}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A Variable is an object which stores a value and, when used in a TensorFlow computation, will implicitly read from this stored value. There are operations (","position":{"start":{"line":127,"column":1,"offset":2957},"end":{"line":127,"column":157,"offset":3113}}},{"type":"raw","value":"<code class=\"language-text\">tf.assign_sub</code>","position":{"start":{"line":127,"column":157,"offset":3113},"end":{"line":127,"column":172,"offset":3128}}},{"type":"text","value":", ","position":{"start":{"line":127,"column":172,"offset":3128},"end":{"line":127,"column":174,"offset":3130}}},{"type":"raw","value":"<code class=\"language-text\">tf.scatter_update</code>","position":{"start":{"line":127,"column":174,"offset":3130},"end":{"line":127,"column":193,"offset":3149}}},{"type":"text","value":", etc) which manipulate the value stored in a TensorFlow variable.\n\"\"\"","position":{"start":{"line":127,"column":193,"offset":3149},"end":{"line":128,"column":4,"offset":3219}}}],"position":{"start":{"line":127,"column":1,"offset":2957},"end":{"line":128,"column":4,"offset":3219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v = tf.Variable(1.0)\nassert v.numpy() == 1.0","position":{"start":{"line":130,"column":1,"offset":3221},"end":{"line":131,"column":24,"offset":3265}}}],"position":{"start":{"line":130,"column":1,"offset":3221},"end":{"line":131,"column":24,"offset":3265}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"re-assign-the-value"},"children":[{"type":"element","tagName":"a","properties":{"href":"#re-assign-the-value","aria-label":"re assign the value permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Re-assign the value","position":{"start":{"line":133,"column":3,"offset":3269},"end":{"line":133,"column":22,"offset":3288}}}],"position":{"start":{"line":133,"column":1,"offset":3267},"end":{"line":133,"column":22,"offset":3288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(3.0)\nassert v.numpy() == 3.0","position":{"start":{"line":134,"column":1,"offset":3289},"end":{"line":135,"column":24,"offset":3326}}}],"position":{"start":{"line":134,"column":1,"offset":3289},"end":{"line":135,"column":24,"offset":3326}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"},"children":[{"type":"element","tagName":"a","properties":{"href":"#use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","aria-label":"use v in a tensorflow operation like tfsquare and reassign permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Use ","position":{"start":{"line":137,"column":3,"offset":3330},"end":{"line":137,"column":7,"offset":3334}}},{"type":"raw","value":"<code class=\"language-text\">v</code>","position":{"start":{"line":137,"column":7,"offset":3334},"end":{"line":137,"column":10,"offset":3337}}},{"type":"text","value":" in a TensorFlow operation like tf.square() and reassign","position":{"start":{"line":137,"column":10,"offset":3337},"end":{"line":137,"column":66,"offset":3393}}}],"position":{"start":{"line":137,"column":1,"offset":3328},"end":{"line":137,"column":66,"offset":3393}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(tf.square(v))\nassert v.numpy() == 9.0","position":{"start":{"line":138,"column":1,"offset":3394},"end":{"line":139,"column":24,"offset":3440}}}],"position":{"start":{"line":138,"column":1,"offset":3394},"end":{"line":139,"column":24,"offset":3440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Computations using Variables are automatically traced when computing gradients. For Variables representing embeddings TensorFlow will do sparse updates by default, which are more computation and memory efficient.","position":{"start":{"line":141,"column":1,"offset":3442},"end":{"line":141,"column":216,"offset":3657}}}],"position":{"start":{"line":141,"column":1,"offset":3442},"end":{"line":141,"column":216,"offset":3657}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using Variables is also a way to quickly let a reader of your code know that this piece of state is mutable.","position":{"start":{"line":143,"column":1,"offset":3659},"end":{"line":143,"column":109,"offset":3767}}}],"position":{"start":{"line":143,"column":1,"offset":3659},"end":{"line":143,"column":109,"offset":3767}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"example-fitting-a-linear-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#example-fitting-a-linear-model","aria-label":"example fitting a linear model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Example: Fitting a linear model","position":{"start":{"line":145,"column":4,"offset":3772},"end":{"line":145,"column":35,"offset":3803}}}],"position":{"start":{"line":145,"column":1,"offset":3769},"end":{"line":145,"column":35,"offset":3803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's now put the few concepts we have so far ---","position":{"start":{"line":147,"column":1,"offset":3805},"end":{"line":147,"column":50,"offset":3854}}},{"type":"raw","value":"<code class=\"language-text\">Tensor</code>","position":{"start":{"line":147,"column":50,"offset":3854},"end":{"line":147,"column":58,"offset":3862}}},{"type":"text","value":", ","position":{"start":{"line":147,"column":58,"offset":3862},"end":{"line":147,"column":60,"offset":3864}}},{"type":"raw","value":"<code class=\"language-text\">GradientTape</code>","position":{"start":{"line":147,"column":60,"offset":3864},"end":{"line":147,"column":74,"offset":3878}}},{"type":"text","value":", ","position":{"start":{"line":147,"column":74,"offset":3878},"end":{"line":147,"column":76,"offset":3880}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":147,"column":76,"offset":3880},"end":{"line":147,"column":86,"offset":3890}}},{"type":"text","value":" --- to build and train a simple model. This typically involves a few steps:","position":{"start":{"line":147,"column":86,"offset":3890},"end":{"line":147,"column":162,"offset":3966}}}],"position":{"start":{"line":147,"column":1,"offset":3805},"end":{"line":147,"column":162,"offset":3966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define the model.","position":{"start":{"line":149,"column":4,"offset":3971},"end":{"line":149,"column":21,"offset":3988}}}],"position":{"start":{"line":149,"column":1,"offset":3968},"end":{"line":149,"column":21,"offset":3988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define a loss function.","position":{"start":{"line":150,"column":4,"offset":3992},"end":{"line":150,"column":27,"offset":4015}}}],"position":{"start":{"line":150,"column":1,"offset":3989},"end":{"line":150,"column":27,"offset":4015}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Obtain training data.","position":{"start":{"line":151,"column":4,"offset":4019},"end":{"line":151,"column":25,"offset":4040}}}],"position":{"start":{"line":151,"column":1,"offset":4016},"end":{"line":151,"column":25,"offset":4040}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Run through the training data and use an \"optimizer\" to adjust the variables to fit the data.","position":{"start":{"line":152,"column":4,"offset":4044},"end":{"line":152,"column":97,"offset":4137}}}],"position":{"start":{"line":152,"column":1,"offset":4041},"end":{"line":152,"column":97,"offset":4137}}},{"type":"text","value":"\n"}],"position":{"start":{"line":149,"column":1,"offset":3968},"end":{"line":152,"column":97,"offset":4137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial, we'll walk through a trivial example of a simple linear model: ","position":{"start":{"line":154,"column":1,"offset":4139},"end":{"line":154,"column":82,"offset":4220}}},{"type":"raw","value":"<code class=\"language-text\">f(x) = x * W + b</code>","position":{"start":{"line":154,"column":82,"offset":4220},"end":{"line":154,"column":100,"offset":4238}}},{"type":"text","value":", which has two variables - ","position":{"start":{"line":154,"column":100,"offset":4238},"end":{"line":154,"column":128,"offset":4266}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":154,"column":128,"offset":4266},"end":{"line":154,"column":131,"offset":4269}}},{"type":"text","value":" and ","position":{"start":{"line":154,"column":131,"offset":4269},"end":{"line":154,"column":136,"offset":4274}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":154,"column":136,"offset":4274},"end":{"line":154,"column":139,"offset":4277}}},{"type":"text","value":". Furthermore, we'll synthesize data such that a well trained model would have ","position":{"start":{"line":154,"column":139,"offset":4277},"end":{"line":154,"column":218,"offset":4356}}},{"type":"raw","value":"<code class=\"language-text\">W = 3.0</code>","position":{"start":{"line":154,"column":218,"offset":4356},"end":{"line":154,"column":227,"offset":4365}}},{"type":"text","value":" and ","position":{"start":{"line":154,"column":227,"offset":4365},"end":{"line":154,"column":232,"offset":4370}}},{"type":"raw","value":"<code class=\"language-text\">b = 2.0</code>","position":{"start":{"line":154,"column":232,"offset":4370},"end":{"line":154,"column":241,"offset":4379}}},{"type":"text","value":".","position":{"start":{"line":154,"column":241,"offset":4379},"end":{"line":154,"column":242,"offset":4380}}}],"position":{"start":{"line":154,"column":1,"offset":4139},"end":{"line":154,"column":242,"offset":4380}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"define-the-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#define-the-model","aria-label":"define the model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Define the model","position":{"start":{"line":156,"column":5,"offset":4386},"end":{"line":156,"column":21,"offset":4402}}}],"position":{"start":{"line":156,"column":1,"offset":4382},"end":{"line":156,"column":21,"offset":4402}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's define a simple class to encapsulate the variables and the computation.\n\"\"\"","position":{"start":{"line":158,"column":1,"offset":4404},"end":{"line":159,"column":4,"offset":4485}}}],"position":{"start":{"line":158,"column":1,"offset":4404},"end":{"line":159,"column":4,"offset":4485}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"class Model(object):\ndef ","position":{"start":{"line":161,"column":1,"offset":4487},"end":{"line":162,"column":7,"offset":4514}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"init","position":{"start":{"line":162,"column":9,"offset":4516},"end":{"line":162,"column":13,"offset":4520}}}],"position":{"start":{"line":162,"column":7,"offset":4514},"end":{"line":162,"column":15,"offset":4522}}},{"type":"text","value":"(self):\n# Initialize variable to (5.0, 0.0)\n# In practice, these should be initialized to random values.\nself.W = tf.Variable(5.0)\nself.b = tf.Variable(0.0)","position":{"start":{"line":162,"column":15,"offset":4522},"end":{"line":166,"column":30,"offset":4694}}}],"position":{"start":{"line":161,"column":1,"offset":4487},"end":{"line":166,"column":30,"offset":4694}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  def ","position":{"start":{"line":168,"column":1,"offset":4696},"end":{"line":168,"column":7,"offset":4702}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"call","position":{"start":{"line":168,"column":9,"offset":4704},"end":{"line":168,"column":13,"offset":4708}}}],"position":{"start":{"line":168,"column":7,"offset":4702},"end":{"line":168,"column":15,"offset":4710}}},{"type":"text","value":"(self, x):\nreturn self.W * x + self.b","position":{"start":{"line":168,"column":15,"offset":4710},"end":{"line":169,"column":31,"offset":4751}}}],"position":{"start":{"line":168,"column":1,"offset":4696},"end":{"line":169,"column":31,"offset":4751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":171,"column":1,"offset":4753},"end":{"line":171,"column":16,"offset":4768}}}],"position":{"start":{"line":171,"column":1,"offset":4753},"end":{"line":171,"column":16,"offset":4768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"assert model(3.0).numpy() == 15.0","position":{"start":{"line":173,"column":1,"offset":4770},"end":{"line":173,"column":34,"offset":4803}}}],"position":{"start":{"line":173,"column":1,"offset":4770},"end":{"line":173,"column":34,"offset":4803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a loss function","position":{"start":{"line":175,"column":1,"offset":4805},"end":{"line":175,"column":30,"offset":4834}}}],"position":{"start":{"line":175,"column":1,"offset":4805},"end":{"line":175,"column":30,"offset":4834}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A loss function measures how well the output of a model for a given input matches the desired output. Let's use the standard L2 loss.\n\"\"\"","position":{"start":{"line":177,"column":1,"offset":4836},"end":{"line":178,"column":4,"offset":4973}}}],"position":{"start":{"line":177,"column":1,"offset":4836},"end":{"line":178,"column":4,"offset":4973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def loss(predicted","position":{"start":{"line":180,"column":1,"offset":4975},"end":{"line":180,"column":19,"offset":4993}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"y, desired","position":{"start":{"line":180,"column":20,"offset":4994},"end":{"line":180,"column":30,"offset":5004}}}],"position":{"start":{"line":180,"column":19,"offset":4993},"end":{"line":180,"column":31,"offset":5005}}},{"type":"text","value":"y):\nreturn tf.reduce","position":{"start":{"line":180,"column":31,"offset":5005},"end":{"line":181,"column":19,"offset":5027}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"mean(tf.square(predicted","position":{"start":{"line":181,"column":20,"offset":5028},"end":{"line":181,"column":44,"offset":5052}}}],"position":{"start":{"line":181,"column":19,"offset":5027},"end":{"line":181,"column":45,"offset":5053}}},{"type":"text","value":"y - desired_y))","position":{"start":{"line":181,"column":45,"offset":5053},"end":{"line":181,"column":60,"offset":5068}}}],"position":{"start":{"line":180,"column":1,"offset":4975},"end":{"line":181,"column":60,"offset":5068}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Obtain training data","position":{"start":{"line":183,"column":1,"offset":5070},"end":{"line":183,"column":28,"offset":5097}}}],"position":{"start":{"line":183,"column":1,"offset":5070},"end":{"line":183,"column":28,"offset":5097}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's synthesize the training data with some noise.\n\"\"\"","position":{"start":{"line":185,"column":1,"offset":5099},"end":{"line":186,"column":4,"offset":5154}}}],"position":{"start":{"line":185,"column":1,"offset":5099},"end":{"line":186,"column":4,"offset":5154}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"TRUE","position":{"start":{"line":188,"column":1,"offset":5156},"end":{"line":188,"column":5,"offset":5160}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W = 3.0\nTRUE","position":{"start":{"line":188,"column":6,"offset":5161},"end":{"line":189,"column":5,"offset":5173}}}],"position":{"start":{"line":188,"column":5,"offset":5160},"end":{"line":189,"column":6,"offset":5174}}},{"type":"text","value":"b = 2.0\nNUM_EXAMPLES = 1000","position":{"start":{"line":189,"column":6,"offset":5174},"end":{"line":190,"column":20,"offset":5201}}}],"position":{"start":{"line":188,"column":1,"offset":5156},"end":{"line":190,"column":20,"offset":5201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"inputs  = tf.random","position":{"start":{"line":192,"column":1,"offset":5203},"end":{"line":192,"column":20,"offset":5222}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":192,"column":21,"offset":5223},"end":{"line":192,"column":38,"offset":5240}}}],"position":{"start":{"line":192,"column":20,"offset":5222},"end":{"line":192,"column":39,"offset":5241}}},{"type":"text","value":"EXAMPLES])\nnoise   = tf.random","position":{"start":{"line":192,"column":39,"offset":5241},"end":{"line":193,"column":20,"offset":5271}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":193,"column":21,"offset":5272},"end":{"line":193,"column":38,"offset":5289}}}],"position":{"start":{"line":193,"column":20,"offset":5271},"end":{"line":193,"column":39,"offset":5290}}},{"type":"text","value":"EXAMPLES])\noutputs = inputs * TRUE","position":{"start":{"line":193,"column":39,"offset":5290},"end":{"line":194,"column":24,"offset":5324}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W + TRUE","position":{"start":{"line":194,"column":25,"offset":5325},"end":{"line":194,"column":33,"offset":5333}}}],"position":{"start":{"line":194,"column":24,"offset":5324},"end":{"line":194,"column":34,"offset":5334}}},{"type":"text","value":"b + noise","position":{"start":{"line":194,"column":34,"offset":5334},"end":{"line":194,"column":43,"offset":5343}}}],"position":{"start":{"line":192,"column":1,"offset":5203},"end":{"line":194,"column":43,"offset":5343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Before we train the model let's visualize where the model stands right now. We'll plot the model's predictions in red and the training data in blue.\"\"\"","position":{"start":{"line":196,"column":1,"offset":5345},"end":{"line":196,"column":155,"offset":5499}}}],"position":{"start":{"line":196,"column":1,"offset":5345},"end":{"line":196,"column":155,"offset":5499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import matplotlib.pyplot as plt","position":{"start":{"line":198,"column":1,"offset":5501},"end":{"line":198,"column":32,"offset":5532}}}],"position":{"start":{"line":198,"column":1,"offset":5501},"end":{"line":198,"column":32,"offset":5532}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.scatter(inputs, outputs, c='b')\nplt.scatter(inputs, model(inputs), c='r')\nplt.show()","position":{"start":{"line":200,"column":1,"offset":5534},"end":{"line":202,"column":11,"offset":5622}}}],"position":{"start":{"line":200,"column":1,"offset":5534},"end":{"line":202,"column":11,"offset":5622}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print('Current loss: '),\nprint(loss(model(inputs), outputs).numpy())","position":{"start":{"line":204,"column":1,"offset":5624},"end":{"line":205,"column":44,"offset":5692}}}],"position":{"start":{"line":204,"column":1,"offset":5624},"end":{"line":205,"column":44,"offset":5692}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a training loop","position":{"start":{"line":207,"column":1,"offset":5694},"end":{"line":207,"column":30,"offset":5723}}}],"position":{"start":{"line":207,"column":1,"offset":5694},"end":{"line":207,"column":30,"offset":5723}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We now have our network and our training data. Let's train it, i.e., use the training data to update the model's variables (","position":{"start":{"line":209,"column":1,"offset":5725},"end":{"line":209,"column":125,"offset":5849}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":209,"column":125,"offset":5849},"end":{"line":209,"column":128,"offset":5852}}},{"type":"text","value":" and ","position":{"start":{"line":209,"column":128,"offset":5852},"end":{"line":209,"column":133,"offset":5857}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":209,"column":133,"offset":5857},"end":{"line":209,"column":136,"offset":5860}}},{"type":"text","value":") so that the loss goes down using ","position":{"start":{"line":209,"column":136,"offset":5860},"end":{"line":209,"column":171,"offset":5895}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Gradient_descent","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"gradient descent","position":{"start":{"line":209,"column":172,"offset":5896},"end":{"line":209,"column":188,"offset":5912}}}],"position":{"start":{"line":209,"column":171,"offset":5895},"end":{"line":209,"column":237,"offset":5961}}},{"type":"text","value":". There are many variants of the gradient descent scheme that are captured in ","position":{"start":{"line":209,"column":237,"offset":5961},"end":{"line":209,"column":315,"offset":6039}}},{"type":"raw","value":"<code class=\"language-text\">tf.train.Optimizer</code>","position":{"start":{"line":209,"column":315,"offset":6039},"end":{"line":209,"column":335,"offset":6059}}},{"type":"text","value":" implementations. We'd highly recommend using those implementations, but in the spirit of building from first principles, in this particular example we will implement the basic math ourselves.\n\"\"\"","position":{"start":{"line":209,"column":335,"offset":6059},"end":{"line":210,"column":4,"offset":6255}}}],"position":{"start":{"line":209,"column":1,"offset":5725},"end":{"line":210,"column":4,"offset":6255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def train(model, inputs, outputs, learning","position":{"start":{"line":212,"column":1,"offset":6257},"end":{"line":212,"column":43,"offset":6299}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate):\nwith tf.GradientTape() as t:\ncurrent","position":{"start":{"line":212,"column":44,"offset":6300},"end":{"line":214,"column":12,"offset":6349}}}],"position":{"start":{"line":212,"column":43,"offset":6299},"end":{"line":214,"column":13,"offset":6350}}},{"type":"text","value":"loss = loss(model(inputs), outputs)\ndW, db = t.gradient(current","position":{"start":{"line":214,"column":13,"offset":6350},"end":{"line":215,"column":30,"offset":6415}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"loss, ","position":{"start":{"line":215,"column":31,"offset":6416},"end":{"line":215,"column":37,"offset":6422}}},{"type":"text","value":"[model.W, model.b]","position":{"start":{"line":215,"column":38,"offset":6423},"end":{"line":215,"column":54,"offset":6439}}},{"type":"text","value":")\nmodel.W.assign","position":{"start":{"line":215,"column":55,"offset":6440},"end":{"line":216,"column":17,"offset":6458}}}],"position":{"start":{"line":215,"column":30,"offset":6415},"end":{"line":216,"column":18,"offset":6459}}},{"type":"text","value":"sub(learning","position":{"start":{"line":216,"column":18,"offset":6459},"end":{"line":216,"column":30,"offset":6471}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate * dW)\nmodel.b.assign","position":{"start":{"line":216,"column":31,"offset":6472},"end":{"line":217,"column":17,"offset":6499}}}],"position":{"start":{"line":216,"column":30,"offset":6471},"end":{"line":217,"column":18,"offset":6500}}},{"type":"text","value":"sub(learning_rate * db)","position":{"start":{"line":217,"column":18,"offset":6500},"end":{"line":217,"column":41,"offset":6523}}}],"position":{"start":{"line":212,"column":1,"offset":6257},"end":{"line":217,"column":41,"offset":6523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Finally, let's repeatedly run through the training data and see how ","position":{"start":{"line":219,"column":1,"offset":6525},"end":{"line":219,"column":72,"offset":6596}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":219,"column":72,"offset":6596},"end":{"line":219,"column":75,"offset":6599}}},{"type":"text","value":" and ","position":{"start":{"line":219,"column":75,"offset":6599},"end":{"line":219,"column":80,"offset":6604}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":219,"column":80,"offset":6604},"end":{"line":219,"column":83,"offset":6607}}},{"type":"text","value":" evolve.\"\"\"","position":{"start":{"line":219,"column":83,"offset":6607},"end":{"line":219,"column":94,"offset":6618}}}],"position":{"start":{"line":219,"column":1,"offset":6525},"end":{"line":219,"column":94,"offset":6618}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":221,"column":1,"offset":6620},"end":{"line":221,"column":16,"offset":6635}}}],"position":{"start":{"line":221,"column":1,"offset":6620},"end":{"line":221,"column":16,"offset":6635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"},"children":[{"type":"element","tagName":"a","properties":{"href":"#collect-the-history-of-w-values-and-b-values-to-plot-later","aria-label":"collect the history of w values and b values to plot later permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Collect the history of W-values and b-values to plot later","position":{"start":{"line":223,"column":3,"offset":6639},"end":{"line":223,"column":61,"offset":6697}}}],"position":{"start":{"line":223,"column":1,"offset":6637},"end":{"line":223,"column":61,"offset":6697}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ws, bs = [], []\nepochs = range(10)\nfor epoch in epochs:\nWs.append(model.W.numpy())\nbs.append(model.b.numpy())\ncurrent_loss = loss(model(inputs), outputs)","position":{"start":{"line":224,"column":1,"offset":6698},"end":{"line":229,"column":46,"offset":6857}}}],"position":{"start":{"line":224,"column":1,"offset":6698},"end":{"line":229,"column":46,"offset":6857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  train(model, inputs, outputs, learning","position":{"start":{"line":231,"column":1,"offset":6859},"end":{"line":231,"column":41,"offset":6899}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate=0.1)\nprint('Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f' %\n(epoch, Ws","position":{"start":{"line":231,"column":42,"offset":6900},"end":{"line":233,"column":19,"offset":6979}}},{"type":"text","value":"[-1]","position":{"start":{"line":233,"column":20,"offset":6980},"end":{"line":233,"column":22,"offset":6982}}},{"type":"text","value":", bs","position":{"start":{"line":233,"column":23,"offset":6983},"end":{"line":233,"column":27,"offset":6987}}},{"type":"text","value":"[-1]","position":{"start":{"line":233,"column":28,"offset":6988},"end":{"line":233,"column":30,"offset":6990}}},{"type":"text","value":", current","position":{"start":{"line":233,"column":31,"offset":6991},"end":{"line":233,"column":40,"offset":7000}}}],"position":{"start":{"line":231,"column":41,"offset":6899},"end":{"line":233,"column":41,"offset":7001}}},{"type":"text","value":"loss))","position":{"start":{"line":233,"column":41,"offset":7001},"end":{"line":233,"column":47,"offset":7007}}}],"position":{"start":{"line":231,"column":1,"offset":6859},"end":{"line":233,"column":47,"offset":7007}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"lets-plot-it-all"},"children":[{"type":"element","tagName":"a","properties":{"href":"#lets-plot-it-all","aria-label":"lets plot it all permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Let's plot it all","position":{"start":{"line":235,"column":3,"offset":7011},"end":{"line":235,"column":20,"offset":7028}}}],"position":{"start":{"line":235,"column":1,"offset":7009},"end":{"line":235,"column":20,"offset":7028}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.plot(epochs, Ws, 'r',\nepochs, bs, 'b')\nplt.plot(","position":{"start":{"line":236,"column":1,"offset":7029},"end":{"line":238,"column":10,"offset":7090}}},{"type":"text","value":"[TRUE_W]","position":{"start":{"line":238,"column":11,"offset":7091},"end":{"line":238,"column":17,"offset":7097}}},{"type":"text","value":" * len(epochs), 'r--',\n","position":{"start":{"line":238,"column":18,"offset":7098},"end":{"line":239,"column":10,"offset":7130}}},{"type":"text","value":"[TRUE_b]","position":{"start":{"line":239,"column":11,"offset":7131},"end":{"line":239,"column":17,"offset":7137}}},{"type":"text","value":" * len(epochs), 'b--')\nplt.legend(","position":{"start":{"line":239,"column":18,"offset":7138},"end":{"line":240,"column":12,"offset":7172}}},{"type":"text","value":"['W', 'b', 'true W', 'true_b']","position":{"start":{"line":240,"column":13,"offset":7173},"end":{"line":240,"column":41,"offset":7201}}},{"type":"text","value":")\nplt.show()","position":{"start":{"line":240,"column":42,"offset":7202},"end":{"line":241,"column":11,"offset":7214}}}],"position":{"start":{"line":236,"column":1,"offset":7029},"end":{"line":241,"column":11,"offset":7214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Next Steps","position":{"start":{"line":243,"column":1,"offset":7216},"end":{"line":243,"column":17,"offset":7232}}}],"position":{"start":{"line":243,"column":1,"offset":7216},"end":{"line":243,"column":17,"offset":7232}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial we covered ","position":{"start":{"line":245,"column":1,"offset":7234},"end":{"line":245,"column":29,"offset":7262}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":245,"column":29,"offset":7262},"end":{"line":245,"column":39,"offset":7272}}},{"type":"text","value":"s and built and trained a simple linear model using the TensorFlow primitives discussed so far.","position":{"start":{"line":245,"column":39,"offset":7272},"end":{"line":245,"column":134,"offset":7367}}}],"position":{"start":{"line":245,"column":1,"offset":7234},"end":{"line":245,"column":134,"offset":7367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In theory, this is pretty much all you need to use TensorFlow for your machine learning research.\nIn practice, particularly for neural networks, the higher level APIs like ","position":{"start":{"line":247,"column":1,"offset":7369},"end":{"line":248,"column":75,"offset":7541}}},{"type":"raw","value":"<code class=\"language-text\">tf.keras</code>","position":{"start":{"line":248,"column":75,"offset":7541},"end":{"line":248,"column":85,"offset":7551}}},{"type":"text","value":" will be much more convenient since it provides higher level building blocks (called \"layers\"), utilities to save and restore state, a suite of loss functions, a suite of optimization strategies etc.\n\"\"\"","position":{"start":{"line":248,"column":85,"offset":7551},"end":{"line":249,"column":4,"offset":7754}}}],"position":{"start":{"line":247,"column":1,"offset":7369},"end":{"line":249,"column":4,"offset":7754}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":251,"column":1,"offset":7756},"end":{"line":255,"column":1,"offset":7763}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":255,"column":1,"offset":7763}}}}