{"expireTime":9007200813400665000,"key":"transformer-remark-markdown-html-ast-fe12546f15503f9274149849859fc476-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#basic-operations","aria-label":"basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Basic Operations","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":20,"offset":19}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initilize-tensors"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initilize-tensors","aria-label":"initilize tensors permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"initilize tensors","position":{"start":{"line":3,"column":5,"offset":25},"end":{"line":3,"column":22,"offset":42}}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":23,"offset":43}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(10,10) array with zero elements","position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}}],"position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Using python state\nx = tf.zeros([10, 10])\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":79},"end":{"line":13,"column":4,"offset":238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensors-basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensors-basic-operations","aria-label":"tensors basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensors basic operations","position":{"start":{"line":15,"column":5,"offset":244},"end":{"line":15,"column":29,"offset":268}}}],"position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":15,"column":30,"offset":269}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import tensorflow as tf\nimport numpy \n\ntf.enable_eager_execution\n\nprint(tf.add(1, 2))\nprint(tf.add([1, 2], [3, 4]))\nprint(tf.square(5))\nprint(tf.reduce_sum([1, 2, 3]))\nprint(tf.encode_base64(&quot;hello world&quot;))\n\n# Operator overloading is also supported\nprint(tf.square(2) + tf.square(3))\n\nx = tf.matmul([[1]], [[2, 3]])\nprint(x.shape)\nprint(x.dtype)\n\nndarray = np.ones([3, 3])\n\nprint(&quot;TensorFlow operations convert numpy arrays to Tensors automatically&quot;)\ntensor = tf.multiply(ndarray, 42)\nprint(tensor)\n\nprint(&quot;And NumPy operations convert Tensors to numpy arrays automatically&quot;)\nprint(np.add(tensor, 1))\n\nprint(&quot;The .numpy() method explicitly converts a Tensor to a numpy array&quot;)\nprint(tensor.numpy())</code></pre></div>","position":{"start":{"line":17,"column":1,"offset":271},"end":{"line":48,"column":4,"offset":978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensorflow-save-on-gpu"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensorflow-save-on-gpu","aria-label":"tensorflow save on gpu permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensorflow save on GPU","position":{"start":{"line":50,"column":5,"offset":984},"end":{"line":50,"column":27,"offset":1006}}}],"position":{"start":{"line":50,"column":1,"offset":980},"end":{"line":50,"column":27,"offset":1006}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">x = tf.random_uniform([3, 3])\n\nprint(&quot;Is there a GPU available: &quot;),\nprint(tf.test.is_gpu_available())\n\nprint(&quot;Is the Tensor on GPU #0:  &quot;),\nprint(x.device.endswith(&#39;GPU:0&#39;))</code></pre></div>","position":{"start":{"line":52,"column":1,"offset":1008},"end":{"line":61,"column":4,"offset":1190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensorflow-save-on-gpu-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensorflow-save-on-gpu-1","aria-label":"tensorflow save on gpu 1 permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensorflow save on GPU","position":{"start":{"line":63,"column":5,"offset":1196},"end":{"line":63,"column":27,"offset":1218}}}],"position":{"start":{"line":63,"column":1,"offset":1192},"end":{"line":63,"column":27,"offset":1218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"a-small-script-to-show-a-custom-training-using"},"children":[{"type":"element","tagName":"a","properties":{"href":"#a-small-script-to-show-a-custom-training-using","aria-label":"a small script to show a custom training using permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"A small script to show a custom training using","position":{"start":{"line":72,"column":5,"offset":1231},"end":{"line":72,"column":51,"offset":1277}}}],"position":{"start":{"line":72,"column":1,"offset":1227},"end":{"line":72,"column":52,"offset":1278}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*class,  assert, plot","position":{"start":{"line":74,"column":1,"offset":1280},"end":{"line":74,"column":22,"offset":1301}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":74,"column":22,"offset":1301},"end":{"line":75,"column":1,"offset":1304}}},{"type":"text","value":"\n"},{"type":"text","value":"*variable, gradient, and loss","position":{"start":{"line":75,"column":1,"offset":1304},"end":{"line":75,"column":30,"offset":1333}}}],"position":{"start":{"line":74,"column":1,"offset":1280},"end":{"line":75,"column":30,"offset":1333}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"# Custom training: basics\n\"\"\"","position":{"start":{"line":78,"column":1,"offset":1336},"end":{"line":79,"column":4,"offset":1368}}}],"position":{"start":{"line":78,"column":1,"offset":1336},"end":{"line":79,"column":4,"offset":1368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from ","position":{"start":{"line":81,"column":1,"offset":1370},"end":{"line":81,"column":6,"offset":1375}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"future","position":{"start":{"line":81,"column":8,"offset":1377},"end":{"line":81,"column":14,"offset":1383}}}],"position":{"start":{"line":81,"column":6,"offset":1375},"end":{"line":81,"column":16,"offset":1385}}},{"type":"text","value":" import absolute","position":{"start":{"line":81,"column":16,"offset":1385},"end":{"line":81,"column":32,"offset":1401}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"import, division, print","position":{"start":{"line":81,"column":33,"offset":1402},"end":{"line":81,"column":56,"offset":1425}}}],"position":{"start":{"line":81,"column":32,"offset":1401},"end":{"line":81,"column":57,"offset":1426}}},{"type":"text","value":"function, unicode_literals","position":{"start":{"line":81,"column":57,"offset":1426},"end":{"line":81,"column":83,"offset":1452}}}],"position":{"start":{"line":81,"column":1,"offset":1370},"end":{"line":81,"column":83,"offset":1452}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import tensorflow as tf","position":{"start":{"line":83,"column":1,"offset":1454},"end":{"line":83,"column":24,"offset":1477}}}],"position":{"start":{"line":83,"column":1,"offset":1454},"end":{"line":83,"column":24,"offset":1477}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"tf.enable","position":{"start":{"line":85,"column":1,"offset":1479},"end":{"line":85,"column":10,"offset":1488}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"eager","position":{"start":{"line":85,"column":11,"offset":1489},"end":{"line":85,"column":16,"offset":1494}}}],"position":{"start":{"line":85,"column":10,"offset":1488},"end":{"line":85,"column":17,"offset":1495}}},{"type":"text","value":"execution()","position":{"start":{"line":85,"column":17,"offset":1495},"end":{"line":85,"column":28,"offset":1506}}}],"position":{"start":{"line":85,"column":1,"offset":1479},"end":{"line":85,"column":28,"offset":1506}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Variables","position":{"start":{"line":87,"column":1,"offset":1508},"end":{"line":87,"column":16,"offset":1523}}}],"position":{"start":{"line":87,"column":1,"offset":1508},"end":{"line":87,"column":16,"offset":1523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Tensors in TensorFlow are immutable stateless objects. Machine learning models, however, need to have changing state: as your model trains, the same code to compute predictions should behave differently over time (hopefully with a lower loss!). To represent this state which needs to change over the course of your computation, you can choose to rely on the fact that Python is a stateful programming language:\n\"\"\"","position":{"start":{"line":89,"column":1,"offset":1525},"end":{"line":90,"column":4,"offset":1939}}}],"position":{"start":{"line":89,"column":1,"offset":1525},"end":{"line":90,"column":4,"offset":1939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"using-python-state"},"children":[{"type":"element","tagName":"a","properties":{"href":"#using-python-state","aria-label":"using python state permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Using python state","position":{"start":{"line":92,"column":3,"offset":1943},"end":{"line":92,"column":21,"offset":1961}}}],"position":{"start":{"line":92,"column":1,"offset":1941},"end":{"line":92,"column":21,"offset":1961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x = tf.zeros(","position":{"start":{"line":93,"column":1,"offset":1962},"end":{"line":93,"column":14,"offset":1975}}},{"type":"text","value":"[10, 10]","position":{"start":{"line":93,"column":15,"offset":1976},"end":{"line":93,"column":21,"offset":1982}}},{"type":"text","value":")\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n# value of x\nprint(x)","position":{"start":{"line":93,"column":22,"offset":1983},"end":{"line":96,"column":9,"offset":2092}}}],"position":{"start":{"line":93,"column":1,"offset":1962},"end":{"line":96,"column":9,"offset":2092}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"TensorFlow, however, has stateful operations built in, and these are often more pleasant to use than low-level Python representations of your state. To represent weights in a model, for example, it's often convenient and efficient to use TensorFlow variables.","position":{"start":{"line":98,"column":1,"offset":2094},"end":{"line":98,"column":263,"offset":2356}}}],"position":{"start":{"line":98,"column":1,"offset":2094},"end":{"line":98,"column":263,"offset":2356}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A Variable is an object which stores a value and, when used in a TensorFlow computation, will implicitly read from this stored value. There are operations (","position":{"start":{"line":100,"column":1,"offset":2358},"end":{"line":100,"column":157,"offset":2514}}},{"type":"raw","value":"<code class=\"language-text\">tf.assign_sub</code>","position":{"start":{"line":100,"column":157,"offset":2514},"end":{"line":100,"column":172,"offset":2529}}},{"type":"text","value":", ","position":{"start":{"line":100,"column":172,"offset":2529},"end":{"line":100,"column":174,"offset":2531}}},{"type":"raw","value":"<code class=\"language-text\">tf.scatter_update</code>","position":{"start":{"line":100,"column":174,"offset":2531},"end":{"line":100,"column":193,"offset":2550}}},{"type":"text","value":", etc) which manipulate the value stored in a TensorFlow variable.\n\"\"\"","position":{"start":{"line":100,"column":193,"offset":2550},"end":{"line":101,"column":4,"offset":2620}}}],"position":{"start":{"line":100,"column":1,"offset":2358},"end":{"line":101,"column":4,"offset":2620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v = tf.Variable(1.0)\nassert v.numpy() == 1.0","position":{"start":{"line":103,"column":1,"offset":2622},"end":{"line":104,"column":24,"offset":2666}}}],"position":{"start":{"line":103,"column":1,"offset":2622},"end":{"line":104,"column":24,"offset":2666}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"re-assign-the-value"},"children":[{"type":"element","tagName":"a","properties":{"href":"#re-assign-the-value","aria-label":"re assign the value permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Re-assign the value","position":{"start":{"line":106,"column":3,"offset":2670},"end":{"line":106,"column":22,"offset":2689}}}],"position":{"start":{"line":106,"column":1,"offset":2668},"end":{"line":106,"column":22,"offset":2689}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(3.0)\nassert v.numpy() == 3.0","position":{"start":{"line":107,"column":1,"offset":2690},"end":{"line":108,"column":24,"offset":2727}}}],"position":{"start":{"line":107,"column":1,"offset":2690},"end":{"line":108,"column":24,"offset":2727}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"},"children":[{"type":"element","tagName":"a","properties":{"href":"#use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","aria-label":"use v in a tensorflow operation like tfsquare and reassign permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Use ","position":{"start":{"line":110,"column":3,"offset":2731},"end":{"line":110,"column":7,"offset":2735}}},{"type":"raw","value":"<code class=\"language-text\">v</code>","position":{"start":{"line":110,"column":7,"offset":2735},"end":{"line":110,"column":10,"offset":2738}}},{"type":"text","value":" in a TensorFlow operation like tf.square() and reassign","position":{"start":{"line":110,"column":10,"offset":2738},"end":{"line":110,"column":66,"offset":2794}}}],"position":{"start":{"line":110,"column":1,"offset":2729},"end":{"line":110,"column":66,"offset":2794}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(tf.square(v))\nassert v.numpy() == 9.0","position":{"start":{"line":111,"column":1,"offset":2795},"end":{"line":112,"column":24,"offset":2841}}}],"position":{"start":{"line":111,"column":1,"offset":2795},"end":{"line":112,"column":24,"offset":2841}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Computations using Variables are automatically traced when computing gradients. For Variables representing embeddings TensorFlow will do sparse updates by default, which are more computation and memory efficient.","position":{"start":{"line":114,"column":1,"offset":2843},"end":{"line":114,"column":216,"offset":3058}}}],"position":{"start":{"line":114,"column":1,"offset":2843},"end":{"line":114,"column":216,"offset":3058}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using Variables is also a way to quickly let a reader of your code know that this piece of state is mutable.","position":{"start":{"line":116,"column":1,"offset":3060},"end":{"line":116,"column":109,"offset":3168}}}],"position":{"start":{"line":116,"column":1,"offset":3060},"end":{"line":116,"column":109,"offset":3168}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"example-fitting-a-linear-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#example-fitting-a-linear-model","aria-label":"example fitting a linear model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Example: Fitting a linear model","position":{"start":{"line":118,"column":4,"offset":3173},"end":{"line":118,"column":35,"offset":3204}}}],"position":{"start":{"line":118,"column":1,"offset":3170},"end":{"line":118,"column":35,"offset":3204}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's now put the few concepts we have so far ---","position":{"start":{"line":120,"column":1,"offset":3206},"end":{"line":120,"column":50,"offset":3255}}},{"type":"raw","value":"<code class=\"language-text\">Tensor</code>","position":{"start":{"line":120,"column":50,"offset":3255},"end":{"line":120,"column":58,"offset":3263}}},{"type":"text","value":", ","position":{"start":{"line":120,"column":58,"offset":3263},"end":{"line":120,"column":60,"offset":3265}}},{"type":"raw","value":"<code class=\"language-text\">GradientTape</code>","position":{"start":{"line":120,"column":60,"offset":3265},"end":{"line":120,"column":74,"offset":3279}}},{"type":"text","value":", ","position":{"start":{"line":120,"column":74,"offset":3279},"end":{"line":120,"column":76,"offset":3281}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":120,"column":76,"offset":3281},"end":{"line":120,"column":86,"offset":3291}}},{"type":"text","value":" --- to build and train a simple model. This typically involves a few steps:","position":{"start":{"line":120,"column":86,"offset":3291},"end":{"line":120,"column":162,"offset":3367}}}],"position":{"start":{"line":120,"column":1,"offset":3206},"end":{"line":120,"column":162,"offset":3367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define the model.","position":{"start":{"line":122,"column":4,"offset":3372},"end":{"line":122,"column":21,"offset":3389}}}],"position":{"start":{"line":122,"column":1,"offset":3369},"end":{"line":122,"column":21,"offset":3389}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define a loss function.","position":{"start":{"line":123,"column":4,"offset":3393},"end":{"line":123,"column":27,"offset":3416}}}],"position":{"start":{"line":123,"column":1,"offset":3390},"end":{"line":123,"column":27,"offset":3416}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Obtain training data.","position":{"start":{"line":124,"column":4,"offset":3420},"end":{"line":124,"column":25,"offset":3441}}}],"position":{"start":{"line":124,"column":1,"offset":3417},"end":{"line":124,"column":25,"offset":3441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Run through the training data and use an \"optimizer\" to adjust the variables to fit the data.","position":{"start":{"line":125,"column":4,"offset":3445},"end":{"line":125,"column":97,"offset":3538}}}],"position":{"start":{"line":125,"column":1,"offset":3442},"end":{"line":125,"column":97,"offset":3538}}},{"type":"text","value":"\n"}],"position":{"start":{"line":122,"column":1,"offset":3369},"end":{"line":125,"column":97,"offset":3538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial, we'll walk through a trivial example of a simple linear model: ","position":{"start":{"line":127,"column":1,"offset":3540},"end":{"line":127,"column":82,"offset":3621}}},{"type":"raw","value":"<code class=\"language-text\">f(x) = x * W + b</code>","position":{"start":{"line":127,"column":82,"offset":3621},"end":{"line":127,"column":100,"offset":3639}}},{"type":"text","value":", which has two variables - ","position":{"start":{"line":127,"column":100,"offset":3639},"end":{"line":127,"column":128,"offset":3667}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":127,"column":128,"offset":3667},"end":{"line":127,"column":131,"offset":3670}}},{"type":"text","value":" and ","position":{"start":{"line":127,"column":131,"offset":3670},"end":{"line":127,"column":136,"offset":3675}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":127,"column":136,"offset":3675},"end":{"line":127,"column":139,"offset":3678}}},{"type":"text","value":". Furthermore, we'll synthesize data such that a well trained model would have ","position":{"start":{"line":127,"column":139,"offset":3678},"end":{"line":127,"column":218,"offset":3757}}},{"type":"raw","value":"<code class=\"language-text\">W = 3.0</code>","position":{"start":{"line":127,"column":218,"offset":3757},"end":{"line":127,"column":227,"offset":3766}}},{"type":"text","value":" and ","position":{"start":{"line":127,"column":227,"offset":3766},"end":{"line":127,"column":232,"offset":3771}}},{"type":"raw","value":"<code class=\"language-text\">b = 2.0</code>","position":{"start":{"line":127,"column":232,"offset":3771},"end":{"line":127,"column":241,"offset":3780}}},{"type":"text","value":".","position":{"start":{"line":127,"column":241,"offset":3780},"end":{"line":127,"column":242,"offset":3781}}}],"position":{"start":{"line":127,"column":1,"offset":3540},"end":{"line":127,"column":242,"offset":3781}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"define-the-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#define-the-model","aria-label":"define the model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Define the model","position":{"start":{"line":129,"column":5,"offset":3787},"end":{"line":129,"column":21,"offset":3803}}}],"position":{"start":{"line":129,"column":1,"offset":3783},"end":{"line":129,"column":21,"offset":3803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's define a simple class to encapsulate the variables and the computation.\n\"\"\"","position":{"start":{"line":131,"column":1,"offset":3805},"end":{"line":132,"column":4,"offset":3886}}}],"position":{"start":{"line":131,"column":1,"offset":3805},"end":{"line":132,"column":4,"offset":3886}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"class Model(object):\ndef ","position":{"start":{"line":134,"column":1,"offset":3888},"end":{"line":135,"column":7,"offset":3915}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"init","position":{"start":{"line":135,"column":9,"offset":3917},"end":{"line":135,"column":13,"offset":3921}}}],"position":{"start":{"line":135,"column":7,"offset":3915},"end":{"line":135,"column":15,"offset":3923}}},{"type":"text","value":"(self):\n# Initialize variable to (5.0, 0.0)\n# In practice, these should be initialized to random values.\nself.W = tf.Variable(5.0)\nself.b = tf.Variable(0.0)","position":{"start":{"line":135,"column":15,"offset":3923},"end":{"line":139,"column":30,"offset":4095}}}],"position":{"start":{"line":134,"column":1,"offset":3888},"end":{"line":139,"column":30,"offset":4095}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  def ","position":{"start":{"line":141,"column":1,"offset":4097},"end":{"line":141,"column":7,"offset":4103}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"call","position":{"start":{"line":141,"column":9,"offset":4105},"end":{"line":141,"column":13,"offset":4109}}}],"position":{"start":{"line":141,"column":7,"offset":4103},"end":{"line":141,"column":15,"offset":4111}}},{"type":"text","value":"(self, x):\nreturn self.W * x + self.b","position":{"start":{"line":141,"column":15,"offset":4111},"end":{"line":142,"column":31,"offset":4152}}}],"position":{"start":{"line":141,"column":1,"offset":4097},"end":{"line":142,"column":31,"offset":4152}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":144,"column":1,"offset":4154},"end":{"line":144,"column":16,"offset":4169}}}],"position":{"start":{"line":144,"column":1,"offset":4154},"end":{"line":144,"column":16,"offset":4169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"assert model(3.0).numpy() == 15.0","position":{"start":{"line":146,"column":1,"offset":4171},"end":{"line":146,"column":34,"offset":4204}}}],"position":{"start":{"line":146,"column":1,"offset":4171},"end":{"line":146,"column":34,"offset":4204}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a loss function","position":{"start":{"line":148,"column":1,"offset":4206},"end":{"line":148,"column":30,"offset":4235}}}],"position":{"start":{"line":148,"column":1,"offset":4206},"end":{"line":148,"column":30,"offset":4235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A loss function measures how well the output of a model for a given input matches the desired output. Let's use the standard L2 loss.\n\"\"\"","position":{"start":{"line":150,"column":1,"offset":4237},"end":{"line":151,"column":4,"offset":4374}}}],"position":{"start":{"line":150,"column":1,"offset":4237},"end":{"line":151,"column":4,"offset":4374}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def loss(predicted","position":{"start":{"line":153,"column":1,"offset":4376},"end":{"line":153,"column":19,"offset":4394}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"y, desired","position":{"start":{"line":153,"column":20,"offset":4395},"end":{"line":153,"column":30,"offset":4405}}}],"position":{"start":{"line":153,"column":19,"offset":4394},"end":{"line":153,"column":31,"offset":4406}}},{"type":"text","value":"y):\nreturn tf.reduce","position":{"start":{"line":153,"column":31,"offset":4406},"end":{"line":154,"column":19,"offset":4428}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"mean(tf.square(predicted","position":{"start":{"line":154,"column":20,"offset":4429},"end":{"line":154,"column":44,"offset":4453}}}],"position":{"start":{"line":154,"column":19,"offset":4428},"end":{"line":154,"column":45,"offset":4454}}},{"type":"text","value":"y - desired_y))","position":{"start":{"line":154,"column":45,"offset":4454},"end":{"line":154,"column":60,"offset":4469}}}],"position":{"start":{"line":153,"column":1,"offset":4376},"end":{"line":154,"column":60,"offset":4469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Obtain training data","position":{"start":{"line":156,"column":1,"offset":4471},"end":{"line":156,"column":28,"offset":4498}}}],"position":{"start":{"line":156,"column":1,"offset":4471},"end":{"line":156,"column":28,"offset":4498}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's synthesize the training data with some noise.\n\"\"\"","position":{"start":{"line":158,"column":1,"offset":4500},"end":{"line":159,"column":4,"offset":4555}}}],"position":{"start":{"line":158,"column":1,"offset":4500},"end":{"line":159,"column":4,"offset":4555}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"TRUE","position":{"start":{"line":161,"column":1,"offset":4557},"end":{"line":161,"column":5,"offset":4561}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W = 3.0\nTRUE","position":{"start":{"line":161,"column":6,"offset":4562},"end":{"line":162,"column":5,"offset":4574}}}],"position":{"start":{"line":161,"column":5,"offset":4561},"end":{"line":162,"column":6,"offset":4575}}},{"type":"text","value":"b = 2.0\nNUM_EXAMPLES = 1000","position":{"start":{"line":162,"column":6,"offset":4575},"end":{"line":163,"column":20,"offset":4602}}}],"position":{"start":{"line":161,"column":1,"offset":4557},"end":{"line":163,"column":20,"offset":4602}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"inputs  = tf.random","position":{"start":{"line":165,"column":1,"offset":4604},"end":{"line":165,"column":20,"offset":4623}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":165,"column":21,"offset":4624},"end":{"line":165,"column":38,"offset":4641}}}],"position":{"start":{"line":165,"column":20,"offset":4623},"end":{"line":165,"column":39,"offset":4642}}},{"type":"text","value":"EXAMPLES])\nnoise   = tf.random","position":{"start":{"line":165,"column":39,"offset":4642},"end":{"line":166,"column":20,"offset":4672}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":166,"column":21,"offset":4673},"end":{"line":166,"column":38,"offset":4690}}}],"position":{"start":{"line":166,"column":20,"offset":4672},"end":{"line":166,"column":39,"offset":4691}}},{"type":"text","value":"EXAMPLES])\noutputs = inputs * TRUE","position":{"start":{"line":166,"column":39,"offset":4691},"end":{"line":167,"column":24,"offset":4725}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W + TRUE","position":{"start":{"line":167,"column":25,"offset":4726},"end":{"line":167,"column":33,"offset":4734}}}],"position":{"start":{"line":167,"column":24,"offset":4725},"end":{"line":167,"column":34,"offset":4735}}},{"type":"text","value":"b + noise","position":{"start":{"line":167,"column":34,"offset":4735},"end":{"line":167,"column":43,"offset":4744}}}],"position":{"start":{"line":165,"column":1,"offset":4604},"end":{"line":167,"column":43,"offset":4744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Before we train the model let's visualize where the model stands right now. We'll plot the model's predictions in red and the training data in blue.\"\"\"","position":{"start":{"line":169,"column":1,"offset":4746},"end":{"line":169,"column":155,"offset":4900}}}],"position":{"start":{"line":169,"column":1,"offset":4746},"end":{"line":169,"column":155,"offset":4900}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import matplotlib.pyplot as plt","position":{"start":{"line":171,"column":1,"offset":4902},"end":{"line":171,"column":32,"offset":4933}}}],"position":{"start":{"line":171,"column":1,"offset":4902},"end":{"line":171,"column":32,"offset":4933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.scatter(inputs, outputs, c='b')\nplt.scatter(inputs, model(inputs), c='r')\nplt.show()","position":{"start":{"line":173,"column":1,"offset":4935},"end":{"line":175,"column":11,"offset":5023}}}],"position":{"start":{"line":173,"column":1,"offset":4935},"end":{"line":175,"column":11,"offset":5023}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print('Current loss: '),\nprint(loss(model(inputs), outputs).numpy())","position":{"start":{"line":177,"column":1,"offset":5025},"end":{"line":178,"column":44,"offset":5093}}}],"position":{"start":{"line":177,"column":1,"offset":5025},"end":{"line":178,"column":44,"offset":5093}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a training loop","position":{"start":{"line":180,"column":1,"offset":5095},"end":{"line":180,"column":30,"offset":5124}}}],"position":{"start":{"line":180,"column":1,"offset":5095},"end":{"line":180,"column":30,"offset":5124}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We now have our network and our training data. Let's train it, i.e., use the training data to update the model's variables (","position":{"start":{"line":182,"column":1,"offset":5126},"end":{"line":182,"column":125,"offset":5250}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":182,"column":125,"offset":5250},"end":{"line":182,"column":128,"offset":5253}}},{"type":"text","value":" and ","position":{"start":{"line":182,"column":128,"offset":5253},"end":{"line":182,"column":133,"offset":5258}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":182,"column":133,"offset":5258},"end":{"line":182,"column":136,"offset":5261}}},{"type":"text","value":") so that the loss goes down using ","position":{"start":{"line":182,"column":136,"offset":5261},"end":{"line":182,"column":171,"offset":5296}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Gradient_descent","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"gradient descent","position":{"start":{"line":182,"column":172,"offset":5297},"end":{"line":182,"column":188,"offset":5313}}}],"position":{"start":{"line":182,"column":171,"offset":5296},"end":{"line":182,"column":237,"offset":5362}}},{"type":"text","value":". There are many variants of the gradient descent scheme that are captured in ","position":{"start":{"line":182,"column":237,"offset":5362},"end":{"line":182,"column":315,"offset":5440}}},{"type":"raw","value":"<code class=\"language-text\">tf.train.Optimizer</code>","position":{"start":{"line":182,"column":315,"offset":5440},"end":{"line":182,"column":335,"offset":5460}}},{"type":"text","value":" implementations. We'd highly recommend using those implementations, but in the spirit of building from first principles, in this particular example we will implement the basic math ourselves.\n\"\"\"","position":{"start":{"line":182,"column":335,"offset":5460},"end":{"line":183,"column":4,"offset":5656}}}],"position":{"start":{"line":182,"column":1,"offset":5126},"end":{"line":183,"column":4,"offset":5656}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def train(model, inputs, outputs, learning","position":{"start":{"line":185,"column":1,"offset":5658},"end":{"line":185,"column":43,"offset":5700}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate):\nwith tf.GradientTape() as t:\ncurrent","position":{"start":{"line":185,"column":44,"offset":5701},"end":{"line":187,"column":12,"offset":5750}}}],"position":{"start":{"line":185,"column":43,"offset":5700},"end":{"line":187,"column":13,"offset":5751}}},{"type":"text","value":"loss = loss(model(inputs), outputs)\ndW, db = t.gradient(current","position":{"start":{"line":187,"column":13,"offset":5751},"end":{"line":188,"column":30,"offset":5816}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"loss, ","position":{"start":{"line":188,"column":31,"offset":5817},"end":{"line":188,"column":37,"offset":5823}}},{"type":"text","value":"[model.W, model.b]","position":{"start":{"line":188,"column":38,"offset":5824},"end":{"line":188,"column":54,"offset":5840}}},{"type":"text","value":")\nmodel.W.assign","position":{"start":{"line":188,"column":55,"offset":5841},"end":{"line":189,"column":17,"offset":5859}}}],"position":{"start":{"line":188,"column":30,"offset":5816},"end":{"line":189,"column":18,"offset":5860}}},{"type":"text","value":"sub(learning","position":{"start":{"line":189,"column":18,"offset":5860},"end":{"line":189,"column":30,"offset":5872}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate * dW)\nmodel.b.assign","position":{"start":{"line":189,"column":31,"offset":5873},"end":{"line":190,"column":17,"offset":5900}}}],"position":{"start":{"line":189,"column":30,"offset":5872},"end":{"line":190,"column":18,"offset":5901}}},{"type":"text","value":"sub(learning_rate * db)","position":{"start":{"line":190,"column":18,"offset":5901},"end":{"line":190,"column":41,"offset":5924}}}],"position":{"start":{"line":185,"column":1,"offset":5658},"end":{"line":190,"column":41,"offset":5924}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Finally, let's repeatedly run through the training data and see how ","position":{"start":{"line":192,"column":1,"offset":5926},"end":{"line":192,"column":72,"offset":5997}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":192,"column":72,"offset":5997},"end":{"line":192,"column":75,"offset":6000}}},{"type":"text","value":" and ","position":{"start":{"line":192,"column":75,"offset":6000},"end":{"line":192,"column":80,"offset":6005}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":192,"column":80,"offset":6005},"end":{"line":192,"column":83,"offset":6008}}},{"type":"text","value":" evolve.\"\"\"","position":{"start":{"line":192,"column":83,"offset":6008},"end":{"line":192,"column":94,"offset":6019}}}],"position":{"start":{"line":192,"column":1,"offset":5926},"end":{"line":192,"column":94,"offset":6019}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":194,"column":1,"offset":6021},"end":{"line":194,"column":16,"offset":6036}}}],"position":{"start":{"line":194,"column":1,"offset":6021},"end":{"line":194,"column":16,"offset":6036}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"},"children":[{"type":"element","tagName":"a","properties":{"href":"#collect-the-history-of-w-values-and-b-values-to-plot-later","aria-label":"collect the history of w values and b values to plot later permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Collect the history of W-values and b-values to plot later","position":{"start":{"line":196,"column":3,"offset":6040},"end":{"line":196,"column":61,"offset":6098}}}],"position":{"start":{"line":196,"column":1,"offset":6038},"end":{"line":196,"column":61,"offset":6098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ws, bs = [], []\nepochs = range(10)\nfor epoch in epochs:\nWs.append(model.W.numpy())\nbs.append(model.b.numpy())\ncurrent_loss = loss(model(inputs), outputs)","position":{"start":{"line":197,"column":1,"offset":6099},"end":{"line":202,"column":46,"offset":6258}}}],"position":{"start":{"line":197,"column":1,"offset":6099},"end":{"line":202,"column":46,"offset":6258}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  train(model, inputs, outputs, learning","position":{"start":{"line":204,"column":1,"offset":6260},"end":{"line":204,"column":41,"offset":6300}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate=0.1)\nprint('Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f' %\n(epoch, Ws","position":{"start":{"line":204,"column":42,"offset":6301},"end":{"line":206,"column":19,"offset":6380}}},{"type":"text","value":"[-1]","position":{"start":{"line":206,"column":20,"offset":6381},"end":{"line":206,"column":22,"offset":6383}}},{"type":"text","value":", bs","position":{"start":{"line":206,"column":23,"offset":6384},"end":{"line":206,"column":27,"offset":6388}}},{"type":"text","value":"[-1]","position":{"start":{"line":206,"column":28,"offset":6389},"end":{"line":206,"column":30,"offset":6391}}},{"type":"text","value":", current","position":{"start":{"line":206,"column":31,"offset":6392},"end":{"line":206,"column":40,"offset":6401}}}],"position":{"start":{"line":204,"column":41,"offset":6300},"end":{"line":206,"column":41,"offset":6402}}},{"type":"text","value":"loss))","position":{"start":{"line":206,"column":41,"offset":6402},"end":{"line":206,"column":47,"offset":6408}}}],"position":{"start":{"line":204,"column":1,"offset":6260},"end":{"line":206,"column":47,"offset":6408}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"lets-plot-it-all"},"children":[{"type":"element","tagName":"a","properties":{"href":"#lets-plot-it-all","aria-label":"lets plot it all permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Let's plot it all","position":{"start":{"line":208,"column":3,"offset":6412},"end":{"line":208,"column":20,"offset":6429}}}],"position":{"start":{"line":208,"column":1,"offset":6410},"end":{"line":208,"column":20,"offset":6429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.plot(epochs, Ws, 'r',\nepochs, bs, 'b')\nplt.plot(","position":{"start":{"line":209,"column":1,"offset":6430},"end":{"line":211,"column":10,"offset":6491}}},{"type":"text","value":"[TRUE_W]","position":{"start":{"line":211,"column":11,"offset":6492},"end":{"line":211,"column":17,"offset":6498}}},{"type":"text","value":" * len(epochs), 'r--',\n","position":{"start":{"line":211,"column":18,"offset":6499},"end":{"line":212,"column":10,"offset":6531}}},{"type":"text","value":"[TRUE_b]","position":{"start":{"line":212,"column":11,"offset":6532},"end":{"line":212,"column":17,"offset":6538}}},{"type":"text","value":" * len(epochs), 'b--')\nplt.legend(","position":{"start":{"line":212,"column":18,"offset":6539},"end":{"line":213,"column":12,"offset":6573}}},{"type":"text","value":"['W', 'b', 'true W', 'true_b']","position":{"start":{"line":213,"column":13,"offset":6574},"end":{"line":213,"column":41,"offset":6602}}},{"type":"text","value":")\nplt.show()","position":{"start":{"line":213,"column":42,"offset":6603},"end":{"line":214,"column":11,"offset":6615}}}],"position":{"start":{"line":209,"column":1,"offset":6430},"end":{"line":214,"column":11,"offset":6615}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Next Steps","position":{"start":{"line":216,"column":1,"offset":6617},"end":{"line":216,"column":17,"offset":6633}}}],"position":{"start":{"line":216,"column":1,"offset":6617},"end":{"line":216,"column":17,"offset":6633}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial we covered ","position":{"start":{"line":218,"column":1,"offset":6635},"end":{"line":218,"column":29,"offset":6663}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":218,"column":29,"offset":6663},"end":{"line":218,"column":39,"offset":6673}}},{"type":"text","value":"s and built and trained a simple linear model using the TensorFlow primitives discussed so far.","position":{"start":{"line":218,"column":39,"offset":6673},"end":{"line":218,"column":134,"offset":6768}}}],"position":{"start":{"line":218,"column":1,"offset":6635},"end":{"line":218,"column":134,"offset":6768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In theory, this is pretty much all you need to use TensorFlow for your machine learning research.\nIn practice, particularly for neural networks, the higher level APIs like ","position":{"start":{"line":220,"column":1,"offset":6770},"end":{"line":221,"column":75,"offset":6942}}},{"type":"raw","value":"<code class=\"language-text\">tf.keras</code>","position":{"start":{"line":221,"column":75,"offset":6942},"end":{"line":221,"column":85,"offset":6952}}},{"type":"text","value":" will be much more convenient since it provides higher level building blocks (called \"layers\"), utilities to save and restore state, a suite of loss functions, a suite of optimization strategies etc.\n\"\"\"","position":{"start":{"line":221,"column":85,"offset":6952},"end":{"line":222,"column":4,"offset":7155}}}],"position":{"start":{"line":220,"column":1,"offset":6770},"end":{"line":222,"column":4,"offset":7155}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":224,"column":1,"offset":7157},"end":{"line":228,"column":1,"offset":7164}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":228,"column":1,"offset":7164}}}}