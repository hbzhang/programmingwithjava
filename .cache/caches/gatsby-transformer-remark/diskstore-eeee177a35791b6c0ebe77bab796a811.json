{"expireTime":9007200813389795000,"key":"transformer-remark-markdown-ast-6c9ddf772b8981f16ae004fab3657072-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"link","url":"#basic-operations","title":null,"data":{"hProperties":{"aria-label":"basic operations permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Basic Operations","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":20,"offset":19},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19},"indent":[]},"data":{"id":"basic-operations","htmlAttributes":{"id":"basic-operations"},"hProperties":{"id":"basic-operations"}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#initilize-tensors","title":null,"data":{"hProperties":{"aria-label":"initilize tensors permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"initilize tensors","position":{"start":{"line":3,"column":5,"offset":25},"end":{"line":3,"column":22,"offset":42},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":23,"offset":43},"indent":[]},"data":{"id":"initilize-tensors","htmlAttributes":{"id":"initilize-tensors"},"hProperties":{"id":"initilize-tensors"}}},{"type":"paragraph","children":[{"type":"text","value":"(10,10) array with zero elements","position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Using python state\nx = tf.zeros([10, 10])\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":79},"end":{"line":13,"column":4,"offset":238},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#initilize-tensors-1","title":null,"data":{"hProperties":{"aria-label":"initilize tensors 1 permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"initilize tensors","position":{"start":{"line":15,"column":5,"offset":244},"end":{"line":15,"column":22,"offset":261},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":15,"column":23,"offset":262},"indent":[]},"data":{"id":"initilize-tensors-1","htmlAttributes":{"id":"initilize-tensors-1"},"hProperties":{"id":"initilize-tensors-1"}}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import tensorflow as tf\nimport numpy \n\ntf.enable_eager_execution\n\nprint(tf.add(1, 2))\nprint(tf.add([1, 2], [3, 4]))\nprint(tf.square(5))\nprint(tf.reduce_sum([1, 2, 3]))\nprint(tf.encode_base64(&quot;hello world&quot;))\n\n# Operator overloading is also supported\nprint(tf.square(2) + tf.square(3))\n\nx = tf.matmul([[1]], [[2, 3]])\nprint(x.shape)\nprint(x.dtype)\n\nndarray = np.ones([3, 3])\n\nprint(&quot;TensorFlow operations convert numpy arrays to Tensors automatically&quot;)\ntensor = tf.multiply(ndarray, 42)\nprint(tensor)\n\nprint(&quot;And NumPy operations convert Tensors to numpy arrays automatically&quot;)\nprint(np.add(tensor, 1))\n\nprint(&quot;The .numpy() method explicitly converts a Tensor to a numpy array&quot;)\nprint(tensor.numpy())</code></pre></div>","position":{"start":{"line":17,"column":1,"offset":264},"end":{"line":48,"column":4,"offset":971},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#a-small-script-to-show-a-custom-training-using","title":null,"data":{"hProperties":{"aria-label":"a small script to show a custom training using permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"A small script to show a custom training using","position":{"start":{"line":55,"column":5,"offset":982},"end":{"line":55,"column":51,"offset":1028},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":978},"end":{"line":55,"column":52,"offset":1029},"indent":[]},"data":{"id":"a-small-script-to-show-a-custom-training-using","htmlAttributes":{"id":"a-small-script-to-show-a-custom-training-using"},"hProperties":{"id":"a-small-script-to-show-a-custom-training-using"}}},{"type":"paragraph","children":[{"type":"text","value":"*class,  assert, plot","position":{"start":{"line":57,"column":1,"offset":1031},"end":{"line":57,"column":22,"offset":1052},"indent":[]}},{"type":"break","position":{"start":{"line":57,"column":22,"offset":1052},"end":{"line":58,"column":1,"offset":1055},"indent":[1]}},{"type":"text","value":"*variable, gradient, and loss","position":{"start":{"line":58,"column":1,"offset":1055},"end":{"line":58,"column":30,"offset":1084},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1031},"end":{"line":58,"column":30,"offset":1084},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"# Custom training: basics\n\"\"\"","position":{"start":{"line":61,"column":1,"offset":1087},"end":{"line":62,"column":4,"offset":1119},"indent":[1]}}],"position":{"start":{"line":61,"column":1,"offset":1087},"end":{"line":62,"column":4,"offset":1119},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"from ","position":{"start":{"line":64,"column":1,"offset":1121},"end":{"line":64,"column":6,"offset":1126},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"future","position":{"start":{"line":64,"column":8,"offset":1128},"end":{"line":64,"column":14,"offset":1134},"indent":[]}}],"position":{"start":{"line":64,"column":6,"offset":1126},"end":{"line":64,"column":16,"offset":1136},"indent":[]}},{"type":"text","value":" import absolute","position":{"start":{"line":64,"column":16,"offset":1136},"end":{"line":64,"column":32,"offset":1152},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"import, division, print","position":{"start":{"line":64,"column":33,"offset":1153},"end":{"line":64,"column":56,"offset":1176},"indent":[]}}],"position":{"start":{"line":64,"column":32,"offset":1152},"end":{"line":64,"column":57,"offset":1177},"indent":[]}},{"type":"text","value":"function, unicode_literals","position":{"start":{"line":64,"column":57,"offset":1177},"end":{"line":64,"column":83,"offset":1203},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1121},"end":{"line":64,"column":83,"offset":1203},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import tensorflow as tf","position":{"start":{"line":66,"column":1,"offset":1205},"end":{"line":66,"column":24,"offset":1228},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1205},"end":{"line":66,"column":24,"offset":1228},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"tf.enable","position":{"start":{"line":68,"column":1,"offset":1230},"end":{"line":68,"column":10,"offset":1239},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"eager","position":{"start":{"line":68,"column":11,"offset":1240},"end":{"line":68,"column":16,"offset":1245},"indent":[]}}],"position":{"start":{"line":68,"column":10,"offset":1239},"end":{"line":68,"column":17,"offset":1246},"indent":[]}},{"type":"text","value":"execution()","position":{"start":{"line":68,"column":17,"offset":1246},"end":{"line":68,"column":28,"offset":1257},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1230},"end":{"line":68,"column":28,"offset":1257},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"## Variables","position":{"start":{"line":70,"column":1,"offset":1259},"end":{"line":70,"column":16,"offset":1274},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1259},"end":{"line":70,"column":16,"offset":1274},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Tensors in TensorFlow are immutable stateless objects. Machine learning models, however, need to have changing state: as your model trains, the same code to compute predictions should behave differently over time (hopefully with a lower loss!). To represent this state which needs to change over the course of your computation, you can choose to rely on the fact that Python is a stateful programming language:\n\"\"\"","position":{"start":{"line":72,"column":1,"offset":1276},"end":{"line":73,"column":4,"offset":1690},"indent":[1]}}],"position":{"start":{"line":72,"column":1,"offset":1276},"end":{"line":73,"column":4,"offset":1690},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#using-python-state","title":null,"data":{"hProperties":{"aria-label":"using python state permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Using python state","position":{"start":{"line":75,"column":3,"offset":1694},"end":{"line":75,"column":21,"offset":1712},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1692},"end":{"line":75,"column":21,"offset":1712},"indent":[]},"data":{"id":"using-python-state","htmlAttributes":{"id":"using-python-state"},"hProperties":{"id":"using-python-state"}}},{"type":"paragraph","children":[{"type":"text","value":"x = tf.zeros(","position":{"start":{"line":76,"column":1,"offset":1713},"end":{"line":76,"column":14,"offset":1726},"indent":[]}},{"type":"linkReference","identifier":"10, 10","referenceType":"shortcut","children":[{"type":"text","value":"10, 10","position":{"start":{"line":76,"column":15,"offset":1727},"end":{"line":76,"column":21,"offset":1733},"indent":[]}}],"position":{"start":{"line":76,"column":14,"offset":1726},"end":{"line":76,"column":22,"offset":1734},"indent":[]}},{"type":"text","value":")\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)","position":{"start":{"line":76,"column":22,"offset":1734},"end":{"line":79,"column":9,"offset":1843},"indent":[1,1,1]}}],"position":{"start":{"line":76,"column":1,"offset":1713},"end":{"line":79,"column":9,"offset":1843},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"TensorFlow, however, has stateful operations built in, and these are often more pleasant to use than low-level Python representations of your state. To represent weights in a model, for example, it's often convenient and efficient to use TensorFlow variables.","position":{"start":{"line":81,"column":1,"offset":1845},"end":{"line":81,"column":263,"offset":2107},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1845},"end":{"line":81,"column":263,"offset":2107},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A Variable is an object which stores a value and, when used in a TensorFlow computation, will implicitly read from this stored value. There are operations (","position":{"start":{"line":83,"column":1,"offset":2109},"end":{"line":83,"column":157,"offset":2265},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">tf.assign_sub</code>","position":{"start":{"line":83,"column":157,"offset":2265},"end":{"line":83,"column":172,"offset":2280},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":83,"column":172,"offset":2280},"end":{"line":83,"column":174,"offset":2282},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">tf.scatter_update</code>","position":{"start":{"line":83,"column":174,"offset":2282},"end":{"line":83,"column":193,"offset":2301},"indent":[]}},{"type":"text","value":", etc) which manipulate the value stored in a TensorFlow variable.\n\"\"\"","position":{"start":{"line":83,"column":193,"offset":2301},"end":{"line":84,"column":4,"offset":2371},"indent":[1]}}],"position":{"start":{"line":83,"column":1,"offset":2109},"end":{"line":84,"column":4,"offset":2371},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"v = tf.Variable(1.0)\nassert v.numpy() == 1.0","position":{"start":{"line":86,"column":1,"offset":2373},"end":{"line":87,"column":24,"offset":2417},"indent":[1]}}],"position":{"start":{"line":86,"column":1,"offset":2373},"end":{"line":87,"column":24,"offset":2417},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#re-assign-the-value","title":null,"data":{"hProperties":{"aria-label":"re assign the value permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Re-assign the value","position":{"start":{"line":89,"column":3,"offset":2421},"end":{"line":89,"column":22,"offset":2440},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":2419},"end":{"line":89,"column":22,"offset":2440},"indent":[]},"data":{"id":"re-assign-the-value","htmlAttributes":{"id":"re-assign-the-value"},"hProperties":{"id":"re-assign-the-value"}}},{"type":"paragraph","children":[{"type":"text","value":"v.assign(3.0)\nassert v.numpy() == 3.0","position":{"start":{"line":90,"column":1,"offset":2441},"end":{"line":91,"column":24,"offset":2478},"indent":[1]}}],"position":{"start":{"line":90,"column":1,"offset":2441},"end":{"line":91,"column":24,"offset":2478},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","title":null,"data":{"hProperties":{"aria-label":"use v in a tensorflow operation like tfsquare and reassign permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Use ","position":{"start":{"line":93,"column":3,"offset":2482},"end":{"line":93,"column":7,"offset":2486},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">v</code>","position":{"start":{"line":93,"column":7,"offset":2486},"end":{"line":93,"column":10,"offset":2489},"indent":[]}},{"type":"text","value":" in a TensorFlow operation like tf.square() and reassign","position":{"start":{"line":93,"column":10,"offset":2489},"end":{"line":93,"column":66,"offset":2545},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":2480},"end":{"line":93,"column":66,"offset":2545},"indent":[]},"data":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","htmlAttributes":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"},"hProperties":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"}}},{"type":"paragraph","children":[{"type":"text","value":"v.assign(tf.square(v))\nassert v.numpy() == 9.0","position":{"start":{"line":94,"column":1,"offset":2546},"end":{"line":95,"column":24,"offset":2592},"indent":[1]}}],"position":{"start":{"line":94,"column":1,"offset":2546},"end":{"line":95,"column":24,"offset":2592},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"Computations using Variables are automatically traced when computing gradients. For Variables representing embeddings TensorFlow will do sparse updates by default, which are more computation and memory efficient.","position":{"start":{"line":97,"column":1,"offset":2594},"end":{"line":97,"column":216,"offset":2809},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":2594},"end":{"line":97,"column":216,"offset":2809},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using Variables is also a way to quickly let a reader of your code know that this piece of state is mutable.","position":{"start":{"line":99,"column":1,"offset":2811},"end":{"line":99,"column":109,"offset":2919},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":2811},"end":{"line":99,"column":109,"offset":2919},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#example-fitting-a-linear-model","title":null,"data":{"hProperties":{"aria-label":"example fitting a linear model permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Example: Fitting a linear model","position":{"start":{"line":101,"column":4,"offset":2924},"end":{"line":101,"column":35,"offset":2955},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":2921},"end":{"line":101,"column":35,"offset":2955},"indent":[]},"data":{"id":"example-fitting-a-linear-model","htmlAttributes":{"id":"example-fitting-a-linear-model"},"hProperties":{"id":"example-fitting-a-linear-model"}}},{"type":"paragraph","children":[{"type":"text","value":"Let's now put the few concepts we have so far ---","position":{"start":{"line":103,"column":1,"offset":2957},"end":{"line":103,"column":50,"offset":3006},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Tensor</code>","position":{"start":{"line":103,"column":50,"offset":3006},"end":{"line":103,"column":58,"offset":3014},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":103,"column":58,"offset":3014},"end":{"line":103,"column":60,"offset":3016},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">GradientTape</code>","position":{"start":{"line":103,"column":60,"offset":3016},"end":{"line":103,"column":74,"offset":3030},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":103,"column":74,"offset":3030},"end":{"line":103,"column":76,"offset":3032},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":103,"column":76,"offset":3032},"end":{"line":103,"column":86,"offset":3042},"indent":[]}},{"type":"text","value":" --- to build and train a simple model. This typically involves a few steps:","position":{"start":{"line":103,"column":86,"offset":3042},"end":{"line":103,"column":162,"offset":3118},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2957},"end":{"line":103,"column":162,"offset":3118},"indent":[]}},{"type":"list","ordered":true,"start":1,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define the model.","position":{"start":{"line":105,"column":4,"offset":3123},"end":{"line":105,"column":21,"offset":3140},"indent":[]}}],"position":{"start":{"line":105,"column":4,"offset":3123},"end":{"line":105,"column":21,"offset":3140},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3120},"end":{"line":105,"column":21,"offset":3140},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define a loss function.","position":{"start":{"line":106,"column":4,"offset":3144},"end":{"line":106,"column":27,"offset":3167},"indent":[]}}],"position":{"start":{"line":106,"column":4,"offset":3144},"end":{"line":106,"column":27,"offset":3167},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3141},"end":{"line":106,"column":27,"offset":3167},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Obtain training data.","position":{"start":{"line":107,"column":4,"offset":3171},"end":{"line":107,"column":25,"offset":3192},"indent":[]}}],"position":{"start":{"line":107,"column":4,"offset":3171},"end":{"line":107,"column":25,"offset":3192},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3168},"end":{"line":107,"column":25,"offset":3192},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Run through the training data and use an \"optimizer\" to adjust the variables to fit the data.","position":{"start":{"line":108,"column":4,"offset":3196},"end":{"line":108,"column":97,"offset":3289},"indent":[]}}],"position":{"start":{"line":108,"column":4,"offset":3196},"end":{"line":108,"column":97,"offset":3289},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3193},"end":{"line":108,"column":97,"offset":3289},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3120},"end":{"line":108,"column":97,"offset":3289},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this tutorial, we'll walk through a trivial example of a simple linear model: ","position":{"start":{"line":110,"column":1,"offset":3291},"end":{"line":110,"column":82,"offset":3372},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f(x) = x * W + b</code>","position":{"start":{"line":110,"column":82,"offset":3372},"end":{"line":110,"column":100,"offset":3390},"indent":[]}},{"type":"text","value":", which has two variables - ","position":{"start":{"line":110,"column":100,"offset":3390},"end":{"line":110,"column":128,"offset":3418},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":110,"column":128,"offset":3418},"end":{"line":110,"column":131,"offset":3421},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":110,"column":131,"offset":3421},"end":{"line":110,"column":136,"offset":3426},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":110,"column":136,"offset":3426},"end":{"line":110,"column":139,"offset":3429},"indent":[]}},{"type":"text","value":". Furthermore, we'll synthesize data such that a well trained model would have ","position":{"start":{"line":110,"column":139,"offset":3429},"end":{"line":110,"column":218,"offset":3508},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W = 3.0</code>","position":{"start":{"line":110,"column":218,"offset":3508},"end":{"line":110,"column":227,"offset":3517},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":110,"column":227,"offset":3517},"end":{"line":110,"column":232,"offset":3522},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b = 2.0</code>","position":{"start":{"line":110,"column":232,"offset":3522},"end":{"line":110,"column":241,"offset":3531},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":110,"column":241,"offset":3531},"end":{"line":110,"column":242,"offset":3532},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":3291},"end":{"line":110,"column":242,"offset":3532},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#define-the-model","title":null,"data":{"hProperties":{"aria-label":"define the model permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Define the model","position":{"start":{"line":112,"column":5,"offset":3538},"end":{"line":112,"column":21,"offset":3554},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":3534},"end":{"line":112,"column":21,"offset":3554},"indent":[]},"data":{"id":"define-the-model","htmlAttributes":{"id":"define-the-model"},"hProperties":{"id":"define-the-model"}}},{"type":"paragraph","children":[{"type":"text","value":"Let's define a simple class to encapsulate the variables and the computation.\n\"\"\"","position":{"start":{"line":114,"column":1,"offset":3556},"end":{"line":115,"column":4,"offset":3637},"indent":[1]}}],"position":{"start":{"line":114,"column":1,"offset":3556},"end":{"line":115,"column":4,"offset":3637},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"class Model(object):\n  def ","position":{"start":{"line":117,"column":1,"offset":3639},"end":{"line":118,"column":7,"offset":3666},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"init","position":{"start":{"line":118,"column":9,"offset":3668},"end":{"line":118,"column":13,"offset":3672},"indent":[]}}],"position":{"start":{"line":118,"column":7,"offset":3666},"end":{"line":118,"column":15,"offset":3674},"indent":[]}},{"type":"text","value":"(self):\n    # Initialize variable to (5.0, 0.0)\n    # In practice, these should be initialized to random values.\n    self.W = tf.Variable(5.0)\n    self.b = tf.Variable(0.0)","position":{"start":{"line":118,"column":15,"offset":3674},"end":{"line":122,"column":30,"offset":3846},"indent":[1,1,1,1]}}],"position":{"start":{"line":117,"column":1,"offset":3639},"end":{"line":122,"column":30,"offset":3846},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"  def ","position":{"start":{"line":124,"column":1,"offset":3848},"end":{"line":124,"column":7,"offset":3854},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"call","position":{"start":{"line":124,"column":9,"offset":3856},"end":{"line":124,"column":13,"offset":3860},"indent":[]}}],"position":{"start":{"line":124,"column":7,"offset":3854},"end":{"line":124,"column":15,"offset":3862},"indent":[]}},{"type":"text","value":"(self, x):\n    return self.W * x + self.b","position":{"start":{"line":124,"column":15,"offset":3862},"end":{"line":125,"column":31,"offset":3903},"indent":[1]}}],"position":{"start":{"line":124,"column":1,"offset":3848},"end":{"line":125,"column":31,"offset":3903},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"model = Model()","position":{"start":{"line":127,"column":1,"offset":3905},"end":{"line":127,"column":16,"offset":3920},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3905},"end":{"line":127,"column":16,"offset":3920},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"assert model(3.0).numpy() == 15.0","position":{"start":{"line":129,"column":1,"offset":3922},"end":{"line":129,"column":34,"offset":3955},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3922},"end":{"line":129,"column":34,"offset":3955},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"### Define a loss function","position":{"start":{"line":131,"column":1,"offset":3957},"end":{"line":131,"column":30,"offset":3986},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3957},"end":{"line":131,"column":30,"offset":3986},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A loss function measures how well the output of a model for a given input matches the desired output. Let's use the standard L2 loss.\n\"\"\"","position":{"start":{"line":133,"column":1,"offset":3988},"end":{"line":134,"column":4,"offset":4125},"indent":[1]}}],"position":{"start":{"line":133,"column":1,"offset":3988},"end":{"line":134,"column":4,"offset":4125},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"def loss(predicted","position":{"start":{"line":136,"column":1,"offset":4127},"end":{"line":136,"column":19,"offset":4145},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"y, desired","position":{"start":{"line":136,"column":20,"offset":4146},"end":{"line":136,"column":30,"offset":4156},"indent":[]}}],"position":{"start":{"line":136,"column":19,"offset":4145},"end":{"line":136,"column":31,"offset":4157},"indent":[]}},{"type":"text","value":"y):\n  return tf.reduce","position":{"start":{"line":136,"column":31,"offset":4157},"end":{"line":137,"column":19,"offset":4179},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"mean(tf.square(predicted","position":{"start":{"line":137,"column":20,"offset":4180},"end":{"line":137,"column":44,"offset":4204},"indent":[]}}],"position":{"start":{"line":137,"column":19,"offset":4179},"end":{"line":137,"column":45,"offset":4205},"indent":[]}},{"type":"text","value":"y - desired_y))","position":{"start":{"line":137,"column":45,"offset":4205},"end":{"line":137,"column":60,"offset":4220},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4127},"end":{"line":137,"column":60,"offset":4220},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"### Obtain training data","position":{"start":{"line":139,"column":1,"offset":4222},"end":{"line":139,"column":28,"offset":4249},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4222},"end":{"line":139,"column":28,"offset":4249},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's synthesize the training data with some noise.\n\"\"\"","position":{"start":{"line":141,"column":1,"offset":4251},"end":{"line":142,"column":4,"offset":4306},"indent":[1]}}],"position":{"start":{"line":141,"column":1,"offset":4251},"end":{"line":142,"column":4,"offset":4306},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"TRUE","position":{"start":{"line":144,"column":1,"offset":4308},"end":{"line":144,"column":5,"offset":4312},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"W = 3.0\nTRUE","position":{"start":{"line":144,"column":6,"offset":4313},"end":{"line":145,"column":5,"offset":4325},"indent":[1]}}],"position":{"start":{"line":144,"column":5,"offset":4312},"end":{"line":145,"column":6,"offset":4326},"indent":[1]}},{"type":"text","value":"b = 2.0\nNUM_EXAMPLES = 1000","position":{"start":{"line":145,"column":6,"offset":4326},"end":{"line":146,"column":20,"offset":4353},"indent":[1]}}],"position":{"start":{"line":144,"column":1,"offset":4308},"end":{"line":146,"column":20,"offset":4353},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"inputs  = tf.random","position":{"start":{"line":148,"column":1,"offset":4355},"end":{"line":148,"column":20,"offset":4374},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":148,"column":21,"offset":4375},"end":{"line":148,"column":38,"offset":4392},"indent":[]}}],"position":{"start":{"line":148,"column":20,"offset":4374},"end":{"line":148,"column":39,"offset":4393},"indent":[]}},{"type":"text","value":"EXAMPLES])\nnoise   = tf.random","position":{"start":{"line":148,"column":39,"offset":4393},"end":{"line":149,"column":20,"offset":4423},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":149,"column":21,"offset":4424},"end":{"line":149,"column":38,"offset":4441},"indent":[]}}],"position":{"start":{"line":149,"column":20,"offset":4423},"end":{"line":149,"column":39,"offset":4442},"indent":[]}},{"type":"text","value":"EXAMPLES])\noutputs = inputs * TRUE","position":{"start":{"line":149,"column":39,"offset":4442},"end":{"line":150,"column":24,"offset":4476},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"W + TRUE","position":{"start":{"line":150,"column":25,"offset":4477},"end":{"line":150,"column":33,"offset":4485},"indent":[]}}],"position":{"start":{"line":150,"column":24,"offset":4476},"end":{"line":150,"column":34,"offset":4486},"indent":[]}},{"type":"text","value":"b + noise","position":{"start":{"line":150,"column":34,"offset":4486},"end":{"line":150,"column":43,"offset":4495},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":4355},"end":{"line":150,"column":43,"offset":4495},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"Before we train the model let's visualize where the model stands right now. We'll plot the model's predictions in red and the training data in blue.\"\"\"","position":{"start":{"line":152,"column":1,"offset":4497},"end":{"line":152,"column":155,"offset":4651},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":4497},"end":{"line":152,"column":155,"offset":4651},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import matplotlib.pyplot as plt","position":{"start":{"line":154,"column":1,"offset":4653},"end":{"line":154,"column":32,"offset":4684},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":4653},"end":{"line":154,"column":32,"offset":4684},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"plt.scatter(inputs, outputs, c='b')\nplt.scatter(inputs, model(inputs), c='r')\nplt.show()","position":{"start":{"line":156,"column":1,"offset":4686},"end":{"line":158,"column":11,"offset":4774},"indent":[1,1]}}],"position":{"start":{"line":156,"column":1,"offset":4686},"end":{"line":158,"column":11,"offset":4774},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"print('Current loss: '),\nprint(loss(model(inputs), outputs).numpy())","position":{"start":{"line":160,"column":1,"offset":4776},"end":{"line":161,"column":44,"offset":4844},"indent":[1]}}],"position":{"start":{"line":160,"column":1,"offset":4776},"end":{"line":161,"column":44,"offset":4844},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"### Define a training loop","position":{"start":{"line":163,"column":1,"offset":4846},"end":{"line":163,"column":30,"offset":4875},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":4846},"end":{"line":163,"column":30,"offset":4875},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We now have our network and our training data. Let's train it, i.e., use the training data to update the model's variables (","position":{"start":{"line":165,"column":1,"offset":4877},"end":{"line":165,"column":125,"offset":5001},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":165,"column":125,"offset":5001},"end":{"line":165,"column":128,"offset":5004},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":165,"column":128,"offset":5004},"end":{"line":165,"column":133,"offset":5009},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":165,"column":133,"offset":5009},"end":{"line":165,"column":136,"offset":5012},"indent":[]}},{"type":"text","value":") so that the loss goes down using ","position":{"start":{"line":165,"column":136,"offset":5012},"end":{"line":165,"column":171,"offset":5047},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Gradient_descent","children":[{"type":"text","value":"gradient descent","position":{"start":{"line":165,"column":172,"offset":5048},"end":{"line":165,"column":188,"offset":5064},"indent":[]}}],"position":{"start":{"line":165,"column":171,"offset":5047},"end":{"line":165,"column":237,"offset":5113},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":". There are many variants of the gradient descent scheme that are captured in ","position":{"start":{"line":165,"column":237,"offset":5113},"end":{"line":165,"column":315,"offset":5191},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">tf.train.Optimizer</code>","position":{"start":{"line":165,"column":315,"offset":5191},"end":{"line":165,"column":335,"offset":5211},"indent":[]}},{"type":"text","value":" implementations. We'd highly recommend using those implementations, but in the spirit of building from first principles, in this particular example we will implement the basic math ourselves.\n\"\"\"","position":{"start":{"line":165,"column":335,"offset":5211},"end":{"line":166,"column":4,"offset":5407},"indent":[1]}}],"position":{"start":{"line":165,"column":1,"offset":4877},"end":{"line":166,"column":4,"offset":5407},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"def train(model, inputs, outputs, learning","position":{"start":{"line":168,"column":1,"offset":5409},"end":{"line":168,"column":43,"offset":5451},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"rate):\n  with tf.GradientTape() as t:\n    current","position":{"start":{"line":168,"column":44,"offset":5452},"end":{"line":170,"column":12,"offset":5501},"indent":[1,1]}}],"position":{"start":{"line":168,"column":43,"offset":5451},"end":{"line":170,"column":13,"offset":5502},"indent":[1,1]}},{"type":"text","value":"loss = loss(model(inputs), outputs)\n  dW, db = t.gradient(current","position":{"start":{"line":170,"column":13,"offset":5502},"end":{"line":171,"column":30,"offset":5567},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"loss, ","position":{"start":{"line":171,"column":31,"offset":5568},"end":{"line":171,"column":37,"offset":5574},"indent":[]}},{"type":"linkReference","identifier":"model.w, model.b","referenceType":"shortcut","children":[{"type":"text","value":"model.W, model.b","position":{"start":{"line":171,"column":38,"offset":5575},"end":{"line":171,"column":54,"offset":5591},"indent":[]}}],"position":{"start":{"line":171,"column":37,"offset":5574},"end":{"line":171,"column":55,"offset":5592},"indent":[]}},{"type":"text","value":")\n  model.W.assign","position":{"start":{"line":171,"column":55,"offset":5592},"end":{"line":172,"column":17,"offset":5610},"indent":[1]}}],"position":{"start":{"line":171,"column":30,"offset":5567},"end":{"line":172,"column":18,"offset":5611},"indent":[1]}},{"type":"text","value":"sub(learning","position":{"start":{"line":172,"column":18,"offset":5611},"end":{"line":172,"column":30,"offset":5623},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"rate * dW)\n  model.b.assign","position":{"start":{"line":172,"column":31,"offset":5624},"end":{"line":173,"column":17,"offset":5651},"indent":[1]}}],"position":{"start":{"line":172,"column":30,"offset":5623},"end":{"line":173,"column":18,"offset":5652},"indent":[1]}},{"type":"text","value":"sub(learning_rate * db)","position":{"start":{"line":173,"column":18,"offset":5652},"end":{"line":173,"column":41,"offset":5675},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":5409},"end":{"line":173,"column":41,"offset":5675},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"Finally, let's repeatedly run through the training data and see how ","position":{"start":{"line":175,"column":1,"offset":5677},"end":{"line":175,"column":72,"offset":5748},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":175,"column":72,"offset":5748},"end":{"line":175,"column":75,"offset":5751},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":175,"column":75,"offset":5751},"end":{"line":175,"column":80,"offset":5756},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":175,"column":80,"offset":5756},"end":{"line":175,"column":83,"offset":5759},"indent":[]}},{"type":"text","value":" evolve.\"\"\"","position":{"start":{"line":175,"column":83,"offset":5759},"end":{"line":175,"column":94,"offset":5770},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":5677},"end":{"line":175,"column":94,"offset":5770},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"model = Model()","position":{"start":{"line":177,"column":1,"offset":5772},"end":{"line":177,"column":16,"offset":5787},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":5772},"end":{"line":177,"column":16,"offset":5787},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#collect-the-history-of-w-values-and-b-values-to-plot-later","title":null,"data":{"hProperties":{"aria-label":"collect the history of w values and b values to plot later permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Collect the history of W-values and b-values to plot later","position":{"start":{"line":179,"column":3,"offset":5791},"end":{"line":179,"column":61,"offset":5849},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":5789},"end":{"line":179,"column":61,"offset":5849},"indent":[]},"data":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later","htmlAttributes":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"},"hProperties":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"}}},{"type":"paragraph","children":[{"type":"text","value":"Ws, bs = [], []\nepochs = range(10)\nfor epoch in epochs:\n  Ws.append(model.W.numpy())\n  bs.append(model.b.numpy())\n  current_loss = loss(model(inputs), outputs)","position":{"start":{"line":180,"column":1,"offset":5850},"end":{"line":185,"column":46,"offset":6009},"indent":[1,1,1,1,1]}}],"position":{"start":{"line":180,"column":1,"offset":5850},"end":{"line":185,"column":46,"offset":6009},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"  train(model, inputs, outputs, learning","position":{"start":{"line":187,"column":1,"offset":6011},"end":{"line":187,"column":41,"offset":6051},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"rate=0.1)\n  print('Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f' %\n        (epoch, Ws","position":{"start":{"line":187,"column":42,"offset":6052},"end":{"line":189,"column":19,"offset":6131},"indent":[1,1]}},{"type":"linkReference","identifier":"-1","referenceType":"shortcut","children":[{"type":"text","value":"-1","position":{"start":{"line":189,"column":20,"offset":6132},"end":{"line":189,"column":22,"offset":6134},"indent":[]}}],"position":{"start":{"line":189,"column":19,"offset":6131},"end":{"line":189,"column":23,"offset":6135},"indent":[]}},{"type":"text","value":", bs","position":{"start":{"line":189,"column":23,"offset":6135},"end":{"line":189,"column":27,"offset":6139},"indent":[]}},{"type":"linkReference","identifier":"-1","referenceType":"shortcut","children":[{"type":"text","value":"-1","position":{"start":{"line":189,"column":28,"offset":6140},"end":{"line":189,"column":30,"offset":6142},"indent":[]}}],"position":{"start":{"line":189,"column":27,"offset":6139},"end":{"line":189,"column":31,"offset":6143},"indent":[]}},{"type":"text","value":", current","position":{"start":{"line":189,"column":31,"offset":6143},"end":{"line":189,"column":40,"offset":6152},"indent":[]}}],"position":{"start":{"line":187,"column":41,"offset":6051},"end":{"line":189,"column":41,"offset":6153},"indent":[1,1]}},{"type":"text","value":"loss))","position":{"start":{"line":189,"column":41,"offset":6153},"end":{"line":189,"column":47,"offset":6159},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":6011},"end":{"line":189,"column":47,"offset":6159},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#lets-plot-it-all","title":null,"data":{"hProperties":{"aria-label":"lets plot it all permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Let's plot it all","position":{"start":{"line":191,"column":3,"offset":6163},"end":{"line":191,"column":20,"offset":6180},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":6161},"end":{"line":191,"column":20,"offset":6180},"indent":[]},"data":{"id":"lets-plot-it-all","htmlAttributes":{"id":"lets-plot-it-all"},"hProperties":{"id":"lets-plot-it-all"}}},{"type":"paragraph","children":[{"type":"text","value":"plt.plot(epochs, Ws, 'r',\n         epochs, bs, 'b')\nplt.plot(","position":{"start":{"line":192,"column":1,"offset":6181},"end":{"line":194,"column":10,"offset":6242},"indent":[1,1]}},{"type":"linkReference","identifier":"true_w","referenceType":"shortcut","children":[{"type":"text","value":"TRUE_W","position":{"start":{"line":194,"column":11,"offset":6243},"end":{"line":194,"column":17,"offset":6249},"indent":[]}}],"position":{"start":{"line":194,"column":10,"offset":6242},"end":{"line":194,"column":18,"offset":6250},"indent":[]}},{"type":"text","value":" * len(epochs), 'r--',\n         ","position":{"start":{"line":194,"column":18,"offset":6250},"end":{"line":195,"column":10,"offset":6282},"indent":[1]}},{"type":"linkReference","identifier":"true_b","referenceType":"shortcut","children":[{"type":"text","value":"TRUE_b","position":{"start":{"line":195,"column":11,"offset":6283},"end":{"line":195,"column":17,"offset":6289},"indent":[]}}],"position":{"start":{"line":195,"column":10,"offset":6282},"end":{"line":195,"column":18,"offset":6290},"indent":[]}},{"type":"text","value":" * len(epochs), 'b--')\nplt.legend(","position":{"start":{"line":195,"column":18,"offset":6290},"end":{"line":196,"column":12,"offset":6324},"indent":[1]}},{"type":"linkReference","identifier":"'w', 'b', 'true w', 'true_b'","referenceType":"shortcut","children":[{"type":"text","value":"'W', 'b', 'true W', 'true_b'","position":{"start":{"line":196,"column":13,"offset":6325},"end":{"line":196,"column":41,"offset":6353},"indent":[]}}],"position":{"start":{"line":196,"column":12,"offset":6324},"end":{"line":196,"column":42,"offset":6354},"indent":[]}},{"type":"text","value":")\nplt.show()","position":{"start":{"line":196,"column":42,"offset":6354},"end":{"line":197,"column":11,"offset":6366},"indent":[1]}}],"position":{"start":{"line":192,"column":1,"offset":6181},"end":{"line":197,"column":11,"offset":6366},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"## Next Steps","position":{"start":{"line":199,"column":1,"offset":6368},"end":{"line":199,"column":17,"offset":6384},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":6368},"end":{"line":199,"column":17,"offset":6384},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this tutorial we covered ","position":{"start":{"line":201,"column":1,"offset":6386},"end":{"line":201,"column":29,"offset":6414},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":201,"column":29,"offset":6414},"end":{"line":201,"column":39,"offset":6424},"indent":[]}},{"type":"text","value":"s and built and trained a simple linear model using the TensorFlow primitives discussed so far.","position":{"start":{"line":201,"column":39,"offset":6424},"end":{"line":201,"column":134,"offset":6519},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":6386},"end":{"line":201,"column":134,"offset":6519},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In theory, this is pretty much all you need to use TensorFlow for your machine learning research.\nIn practice, particularly for neural networks, the higher level APIs like ","position":{"start":{"line":203,"column":1,"offset":6521},"end":{"line":204,"column":75,"offset":6693},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">tf.keras</code>","position":{"start":{"line":204,"column":75,"offset":6693},"end":{"line":204,"column":85,"offset":6703},"indent":[]}},{"type":"text","value":" will be much more convenient since it provides higher level building blocks (called \"layers\"), utilities to save and restore state, a suite of loss functions, a suite of optimization strategies etc.\n\"\"\"","position":{"start":{"line":204,"column":85,"offset":6703},"end":{"line":205,"column":4,"offset":6906},"indent":[1]}}],"position":{"start":{"line":203,"column":1,"offset":6521},"end":{"line":205,"column":4,"offset":6906},"indent":[1,1]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":207,"column":1,"offset":6908},"end":{"line":211,"column":1,"offset":6915},"indent":[1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":211,"column":1,"offset":6915}}}}