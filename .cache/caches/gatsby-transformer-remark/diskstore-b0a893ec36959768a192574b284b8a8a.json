{"expireTime":9007200813390255000,"key":"transformer-remark-markdown-html-ast-e1e28cbd5b698aa24983b38e88d65a31-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#basic-operations","aria-label":"basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Basic Operations","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":20,"offset":19}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initilize-tensors"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initilize-tensors","aria-label":"initilize tensors permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"initilize tensors","position":{"start":{"line":3,"column":5,"offset":25},"end":{"line":3,"column":22,"offset":42}}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":23,"offset":43}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(10,10) array with zero elements","position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}}],"position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Using python state\nx = tf.zeros([10, 10])\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":79},"end":{"line":13,"column":4,"offset":238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensors-basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensors-basic-operations","aria-label":"tensors basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensors basic operations","position":{"start":{"line":15,"column":5,"offset":244},"end":{"line":15,"column":29,"offset":268}}}],"position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":15,"column":30,"offset":269}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import tensorflow as tf\nimport numpy \n\ntf.enable_eager_execution\n\nprint(tf.add(1, 2))\nprint(tf.add([1, 2], [3, 4]))\nprint(tf.square(5))\nprint(tf.reduce_sum([1, 2, 3]))\nprint(tf.encode_base64(&quot;hello world&quot;))\n\n# Operator overloading is also supported\nprint(tf.square(2) + tf.square(3))\n\nx = tf.matmul([[1]], [[2, 3]])\nprint(x.shape)\nprint(x.dtype)\n\nndarray = np.ones([3, 3])\n\nprint(&quot;TensorFlow operations convert numpy arrays to Tensors automatically&quot;)\ntensor = tf.multiply(ndarray, 42)\nprint(tensor)\n\nprint(&quot;And NumPy operations convert Tensors to numpy arrays automatically&quot;)\nprint(np.add(tensor, 1))\n\nprint(&quot;The .numpy() method explicitly converts a Tensor to a numpy array&quot;)\nprint(tensor.numpy())</code></pre></div>","position":{"start":{"line":17,"column":1,"offset":271},"end":{"line":48,"column":4,"offset":978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensors-basic-operations-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensors-basic-operations-1","aria-label":"tensors basic operations 1 permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensors basic operations","position":{"start":{"line":50,"column":5,"offset":984},"end":{"line":50,"column":29,"offset":1008}}}],"position":{"start":{"line":50,"column":1,"offset":980},"end":{"line":50,"column":30,"offset":1009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x = tf.random_uniform(","position":{"start":{"line":52,"column":1,"offset":1011},"end":{"line":52,"column":23,"offset":1033}}},{"type":"text","value":"[3, 3]","position":{"start":{"line":52,"column":24,"offset":1034},"end":{"line":52,"column":28,"offset":1038}}},{"type":"text","value":")","position":{"start":{"line":52,"column":29,"offset":1039},"end":{"line":52,"column":30,"offset":1040}}}],"position":{"start":{"line":52,"column":1,"offset":1011},"end":{"line":52,"column":30,"offset":1040}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print(\"Is there a GPU available: \"),\nprint(tf.test.is","position":{"start":{"line":54,"column":1,"offset":1042},"end":{"line":55,"column":17,"offset":1095}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"gpu","position":{"start":{"line":55,"column":18,"offset":1096},"end":{"line":55,"column":21,"offset":1099}}}],"position":{"start":{"line":55,"column":17,"offset":1095},"end":{"line":55,"column":22,"offset":1100}}},{"type":"text","value":"available())","position":{"start":{"line":55,"column":22,"offset":1100},"end":{"line":55,"column":34,"offset":1112}}}],"position":{"start":{"line":54,"column":1,"offset":1042},"end":{"line":55,"column":34,"offset":1112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print(\"Is the Tensor on GPU #0:  \"),\nprint(x.device.endswith('GPU:0'))","position":{"start":{"line":57,"column":1,"offset":1114},"end":{"line":58,"column":34,"offset":1184}}}],"position":{"start":{"line":57,"column":1,"offset":1114},"end":{"line":58,"column":34,"offset":1184}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"a-small-script-to-show-a-custom-training-using"},"children":[{"type":"element","tagName":"a","properties":{"href":"#a-small-script-to-show-a-custom-training-using","aria-label":"a small script to show a custom training using permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"A small script to show a custom training using","position":{"start":{"line":66,"column":5,"offset":1196},"end":{"line":66,"column":51,"offset":1242}}}],"position":{"start":{"line":66,"column":1,"offset":1192},"end":{"line":66,"column":52,"offset":1243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*class,  assert, plot","position":{"start":{"line":68,"column":1,"offset":1245},"end":{"line":68,"column":22,"offset":1266}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":68,"column":22,"offset":1266},"end":{"line":69,"column":1,"offset":1269}}},{"type":"text","value":"\n"},{"type":"text","value":"*variable, gradient, and loss","position":{"start":{"line":69,"column":1,"offset":1269},"end":{"line":69,"column":30,"offset":1298}}}],"position":{"start":{"line":68,"column":1,"offset":1245},"end":{"line":69,"column":30,"offset":1298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"# Custom training: basics\n\"\"\"","position":{"start":{"line":72,"column":1,"offset":1301},"end":{"line":73,"column":4,"offset":1333}}}],"position":{"start":{"line":72,"column":1,"offset":1301},"end":{"line":73,"column":4,"offset":1333}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from ","position":{"start":{"line":75,"column":1,"offset":1335},"end":{"line":75,"column":6,"offset":1340}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"future","position":{"start":{"line":75,"column":8,"offset":1342},"end":{"line":75,"column":14,"offset":1348}}}],"position":{"start":{"line":75,"column":6,"offset":1340},"end":{"line":75,"column":16,"offset":1350}}},{"type":"text","value":" import absolute","position":{"start":{"line":75,"column":16,"offset":1350},"end":{"line":75,"column":32,"offset":1366}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"import, division, print","position":{"start":{"line":75,"column":33,"offset":1367},"end":{"line":75,"column":56,"offset":1390}}}],"position":{"start":{"line":75,"column":32,"offset":1366},"end":{"line":75,"column":57,"offset":1391}}},{"type":"text","value":"function, unicode_literals","position":{"start":{"line":75,"column":57,"offset":1391},"end":{"line":75,"column":83,"offset":1417}}}],"position":{"start":{"line":75,"column":1,"offset":1335},"end":{"line":75,"column":83,"offset":1417}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import tensorflow as tf","position":{"start":{"line":77,"column":1,"offset":1419},"end":{"line":77,"column":24,"offset":1442}}}],"position":{"start":{"line":77,"column":1,"offset":1419},"end":{"line":77,"column":24,"offset":1442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"tf.enable","position":{"start":{"line":79,"column":1,"offset":1444},"end":{"line":79,"column":10,"offset":1453}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"eager","position":{"start":{"line":79,"column":11,"offset":1454},"end":{"line":79,"column":16,"offset":1459}}}],"position":{"start":{"line":79,"column":10,"offset":1453},"end":{"line":79,"column":17,"offset":1460}}},{"type":"text","value":"execution()","position":{"start":{"line":79,"column":17,"offset":1460},"end":{"line":79,"column":28,"offset":1471}}}],"position":{"start":{"line":79,"column":1,"offset":1444},"end":{"line":79,"column":28,"offset":1471}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Variables","position":{"start":{"line":81,"column":1,"offset":1473},"end":{"line":81,"column":16,"offset":1488}}}],"position":{"start":{"line":81,"column":1,"offset":1473},"end":{"line":81,"column":16,"offset":1488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Tensors in TensorFlow are immutable stateless objects. Machine learning models, however, need to have changing state: as your model trains, the same code to compute predictions should behave differently over time (hopefully with a lower loss!). To represent this state which needs to change over the course of your computation, you can choose to rely on the fact that Python is a stateful programming language:\n\"\"\"","position":{"start":{"line":83,"column":1,"offset":1490},"end":{"line":84,"column":4,"offset":1904}}}],"position":{"start":{"line":83,"column":1,"offset":1490},"end":{"line":84,"column":4,"offset":1904}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"using-python-state"},"children":[{"type":"element","tagName":"a","properties":{"href":"#using-python-state","aria-label":"using python state permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Using python state","position":{"start":{"line":86,"column":3,"offset":1908},"end":{"line":86,"column":21,"offset":1926}}}],"position":{"start":{"line":86,"column":1,"offset":1906},"end":{"line":86,"column":21,"offset":1926}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x = tf.zeros(","position":{"start":{"line":87,"column":1,"offset":1927},"end":{"line":87,"column":14,"offset":1940}}},{"type":"text","value":"[10, 10]","position":{"start":{"line":87,"column":15,"offset":1941},"end":{"line":87,"column":21,"offset":1947}}},{"type":"text","value":")\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n# value of x\nprint(x)","position":{"start":{"line":87,"column":22,"offset":1948},"end":{"line":90,"column":9,"offset":2057}}}],"position":{"start":{"line":87,"column":1,"offset":1927},"end":{"line":90,"column":9,"offset":2057}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"TensorFlow, however, has stateful operations built in, and these are often more pleasant to use than low-level Python representations of your state. To represent weights in a model, for example, it's often convenient and efficient to use TensorFlow variables.","position":{"start":{"line":92,"column":1,"offset":2059},"end":{"line":92,"column":263,"offset":2321}}}],"position":{"start":{"line":92,"column":1,"offset":2059},"end":{"line":92,"column":263,"offset":2321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A Variable is an object which stores a value and, when used in a TensorFlow computation, will implicitly read from this stored value. There are operations (","position":{"start":{"line":94,"column":1,"offset":2323},"end":{"line":94,"column":157,"offset":2479}}},{"type":"raw","value":"<code class=\"language-text\">tf.assign_sub</code>","position":{"start":{"line":94,"column":157,"offset":2479},"end":{"line":94,"column":172,"offset":2494}}},{"type":"text","value":", ","position":{"start":{"line":94,"column":172,"offset":2494},"end":{"line":94,"column":174,"offset":2496}}},{"type":"raw","value":"<code class=\"language-text\">tf.scatter_update</code>","position":{"start":{"line":94,"column":174,"offset":2496},"end":{"line":94,"column":193,"offset":2515}}},{"type":"text","value":", etc) which manipulate the value stored in a TensorFlow variable.\n\"\"\"","position":{"start":{"line":94,"column":193,"offset":2515},"end":{"line":95,"column":4,"offset":2585}}}],"position":{"start":{"line":94,"column":1,"offset":2323},"end":{"line":95,"column":4,"offset":2585}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v = tf.Variable(1.0)\nassert v.numpy() == 1.0","position":{"start":{"line":97,"column":1,"offset":2587},"end":{"line":98,"column":24,"offset":2631}}}],"position":{"start":{"line":97,"column":1,"offset":2587},"end":{"line":98,"column":24,"offset":2631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"re-assign-the-value"},"children":[{"type":"element","tagName":"a","properties":{"href":"#re-assign-the-value","aria-label":"re assign the value permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Re-assign the value","position":{"start":{"line":100,"column":3,"offset":2635},"end":{"line":100,"column":22,"offset":2654}}}],"position":{"start":{"line":100,"column":1,"offset":2633},"end":{"line":100,"column":22,"offset":2654}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(3.0)\nassert v.numpy() == 3.0","position":{"start":{"line":101,"column":1,"offset":2655},"end":{"line":102,"column":24,"offset":2692}}}],"position":{"start":{"line":101,"column":1,"offset":2655},"end":{"line":102,"column":24,"offset":2692}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"},"children":[{"type":"element","tagName":"a","properties":{"href":"#use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","aria-label":"use v in a tensorflow operation like tfsquare and reassign permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Use ","position":{"start":{"line":104,"column":3,"offset":2696},"end":{"line":104,"column":7,"offset":2700}}},{"type":"raw","value":"<code class=\"language-text\">v</code>","position":{"start":{"line":104,"column":7,"offset":2700},"end":{"line":104,"column":10,"offset":2703}}},{"type":"text","value":" in a TensorFlow operation like tf.square() and reassign","position":{"start":{"line":104,"column":10,"offset":2703},"end":{"line":104,"column":66,"offset":2759}}}],"position":{"start":{"line":104,"column":1,"offset":2694},"end":{"line":104,"column":66,"offset":2759}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(tf.square(v))\nassert v.numpy() == 9.0","position":{"start":{"line":105,"column":1,"offset":2760},"end":{"line":106,"column":24,"offset":2806}}}],"position":{"start":{"line":105,"column":1,"offset":2760},"end":{"line":106,"column":24,"offset":2806}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Computations using Variables are automatically traced when computing gradients. For Variables representing embeddings TensorFlow will do sparse updates by default, which are more computation and memory efficient.","position":{"start":{"line":108,"column":1,"offset":2808},"end":{"line":108,"column":216,"offset":3023}}}],"position":{"start":{"line":108,"column":1,"offset":2808},"end":{"line":108,"column":216,"offset":3023}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using Variables is also a way to quickly let a reader of your code know that this piece of state is mutable.","position":{"start":{"line":110,"column":1,"offset":3025},"end":{"line":110,"column":109,"offset":3133}}}],"position":{"start":{"line":110,"column":1,"offset":3025},"end":{"line":110,"column":109,"offset":3133}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"example-fitting-a-linear-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#example-fitting-a-linear-model","aria-label":"example fitting a linear model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Example: Fitting a linear model","position":{"start":{"line":112,"column":4,"offset":3138},"end":{"line":112,"column":35,"offset":3169}}}],"position":{"start":{"line":112,"column":1,"offset":3135},"end":{"line":112,"column":35,"offset":3169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's now put the few concepts we have so far ---","position":{"start":{"line":114,"column":1,"offset":3171},"end":{"line":114,"column":50,"offset":3220}}},{"type":"raw","value":"<code class=\"language-text\">Tensor</code>","position":{"start":{"line":114,"column":50,"offset":3220},"end":{"line":114,"column":58,"offset":3228}}},{"type":"text","value":", ","position":{"start":{"line":114,"column":58,"offset":3228},"end":{"line":114,"column":60,"offset":3230}}},{"type":"raw","value":"<code class=\"language-text\">GradientTape</code>","position":{"start":{"line":114,"column":60,"offset":3230},"end":{"line":114,"column":74,"offset":3244}}},{"type":"text","value":", ","position":{"start":{"line":114,"column":74,"offset":3244},"end":{"line":114,"column":76,"offset":3246}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":114,"column":76,"offset":3246},"end":{"line":114,"column":86,"offset":3256}}},{"type":"text","value":" --- to build and train a simple model. This typically involves a few steps:","position":{"start":{"line":114,"column":86,"offset":3256},"end":{"line":114,"column":162,"offset":3332}}}],"position":{"start":{"line":114,"column":1,"offset":3171},"end":{"line":114,"column":162,"offset":3332}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define the model.","position":{"start":{"line":116,"column":4,"offset":3337},"end":{"line":116,"column":21,"offset":3354}}}],"position":{"start":{"line":116,"column":1,"offset":3334},"end":{"line":116,"column":21,"offset":3354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define a loss function.","position":{"start":{"line":117,"column":4,"offset":3358},"end":{"line":117,"column":27,"offset":3381}}}],"position":{"start":{"line":117,"column":1,"offset":3355},"end":{"line":117,"column":27,"offset":3381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Obtain training data.","position":{"start":{"line":118,"column":4,"offset":3385},"end":{"line":118,"column":25,"offset":3406}}}],"position":{"start":{"line":118,"column":1,"offset":3382},"end":{"line":118,"column":25,"offset":3406}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Run through the training data and use an \"optimizer\" to adjust the variables to fit the data.","position":{"start":{"line":119,"column":4,"offset":3410},"end":{"line":119,"column":97,"offset":3503}}}],"position":{"start":{"line":119,"column":1,"offset":3407},"end":{"line":119,"column":97,"offset":3503}}},{"type":"text","value":"\n"}],"position":{"start":{"line":116,"column":1,"offset":3334},"end":{"line":119,"column":97,"offset":3503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial, we'll walk through a trivial example of a simple linear model: ","position":{"start":{"line":121,"column":1,"offset":3505},"end":{"line":121,"column":82,"offset":3586}}},{"type":"raw","value":"<code class=\"language-text\">f(x) = x * W + b</code>","position":{"start":{"line":121,"column":82,"offset":3586},"end":{"line":121,"column":100,"offset":3604}}},{"type":"text","value":", which has two variables - ","position":{"start":{"line":121,"column":100,"offset":3604},"end":{"line":121,"column":128,"offset":3632}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":121,"column":128,"offset":3632},"end":{"line":121,"column":131,"offset":3635}}},{"type":"text","value":" and ","position":{"start":{"line":121,"column":131,"offset":3635},"end":{"line":121,"column":136,"offset":3640}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":121,"column":136,"offset":3640},"end":{"line":121,"column":139,"offset":3643}}},{"type":"text","value":". Furthermore, we'll synthesize data such that a well trained model would have ","position":{"start":{"line":121,"column":139,"offset":3643},"end":{"line":121,"column":218,"offset":3722}}},{"type":"raw","value":"<code class=\"language-text\">W = 3.0</code>","position":{"start":{"line":121,"column":218,"offset":3722},"end":{"line":121,"column":227,"offset":3731}}},{"type":"text","value":" and ","position":{"start":{"line":121,"column":227,"offset":3731},"end":{"line":121,"column":232,"offset":3736}}},{"type":"raw","value":"<code class=\"language-text\">b = 2.0</code>","position":{"start":{"line":121,"column":232,"offset":3736},"end":{"line":121,"column":241,"offset":3745}}},{"type":"text","value":".","position":{"start":{"line":121,"column":241,"offset":3745},"end":{"line":121,"column":242,"offset":3746}}}],"position":{"start":{"line":121,"column":1,"offset":3505},"end":{"line":121,"column":242,"offset":3746}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"define-the-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#define-the-model","aria-label":"define the model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Define the model","position":{"start":{"line":123,"column":5,"offset":3752},"end":{"line":123,"column":21,"offset":3768}}}],"position":{"start":{"line":123,"column":1,"offset":3748},"end":{"line":123,"column":21,"offset":3768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's define a simple class to encapsulate the variables and the computation.\n\"\"\"","position":{"start":{"line":125,"column":1,"offset":3770},"end":{"line":126,"column":4,"offset":3851}}}],"position":{"start":{"line":125,"column":1,"offset":3770},"end":{"line":126,"column":4,"offset":3851}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"class Model(object):\ndef ","position":{"start":{"line":128,"column":1,"offset":3853},"end":{"line":129,"column":7,"offset":3880}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"init","position":{"start":{"line":129,"column":9,"offset":3882},"end":{"line":129,"column":13,"offset":3886}}}],"position":{"start":{"line":129,"column":7,"offset":3880},"end":{"line":129,"column":15,"offset":3888}}},{"type":"text","value":"(self):\n# Initialize variable to (5.0, 0.0)\n# In practice, these should be initialized to random values.\nself.W = tf.Variable(5.0)\nself.b = tf.Variable(0.0)","position":{"start":{"line":129,"column":15,"offset":3888},"end":{"line":133,"column":30,"offset":4060}}}],"position":{"start":{"line":128,"column":1,"offset":3853},"end":{"line":133,"column":30,"offset":4060}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  def ","position":{"start":{"line":135,"column":1,"offset":4062},"end":{"line":135,"column":7,"offset":4068}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"call","position":{"start":{"line":135,"column":9,"offset":4070},"end":{"line":135,"column":13,"offset":4074}}}],"position":{"start":{"line":135,"column":7,"offset":4068},"end":{"line":135,"column":15,"offset":4076}}},{"type":"text","value":"(self, x):\nreturn self.W * x + self.b","position":{"start":{"line":135,"column":15,"offset":4076},"end":{"line":136,"column":31,"offset":4117}}}],"position":{"start":{"line":135,"column":1,"offset":4062},"end":{"line":136,"column":31,"offset":4117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":138,"column":1,"offset":4119},"end":{"line":138,"column":16,"offset":4134}}}],"position":{"start":{"line":138,"column":1,"offset":4119},"end":{"line":138,"column":16,"offset":4134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"assert model(3.0).numpy() == 15.0","position":{"start":{"line":140,"column":1,"offset":4136},"end":{"line":140,"column":34,"offset":4169}}}],"position":{"start":{"line":140,"column":1,"offset":4136},"end":{"line":140,"column":34,"offset":4169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a loss function","position":{"start":{"line":142,"column":1,"offset":4171},"end":{"line":142,"column":30,"offset":4200}}}],"position":{"start":{"line":142,"column":1,"offset":4171},"end":{"line":142,"column":30,"offset":4200}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A loss function measures how well the output of a model for a given input matches the desired output. Let's use the standard L2 loss.\n\"\"\"","position":{"start":{"line":144,"column":1,"offset":4202},"end":{"line":145,"column":4,"offset":4339}}}],"position":{"start":{"line":144,"column":1,"offset":4202},"end":{"line":145,"column":4,"offset":4339}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def loss(predicted","position":{"start":{"line":147,"column":1,"offset":4341},"end":{"line":147,"column":19,"offset":4359}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"y, desired","position":{"start":{"line":147,"column":20,"offset":4360},"end":{"line":147,"column":30,"offset":4370}}}],"position":{"start":{"line":147,"column":19,"offset":4359},"end":{"line":147,"column":31,"offset":4371}}},{"type":"text","value":"y):\nreturn tf.reduce","position":{"start":{"line":147,"column":31,"offset":4371},"end":{"line":148,"column":19,"offset":4393}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"mean(tf.square(predicted","position":{"start":{"line":148,"column":20,"offset":4394},"end":{"line":148,"column":44,"offset":4418}}}],"position":{"start":{"line":148,"column":19,"offset":4393},"end":{"line":148,"column":45,"offset":4419}}},{"type":"text","value":"y - desired_y))","position":{"start":{"line":148,"column":45,"offset":4419},"end":{"line":148,"column":60,"offset":4434}}}],"position":{"start":{"line":147,"column":1,"offset":4341},"end":{"line":148,"column":60,"offset":4434}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Obtain training data","position":{"start":{"line":150,"column":1,"offset":4436},"end":{"line":150,"column":28,"offset":4463}}}],"position":{"start":{"line":150,"column":1,"offset":4436},"end":{"line":150,"column":28,"offset":4463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's synthesize the training data with some noise.\n\"\"\"","position":{"start":{"line":152,"column":1,"offset":4465},"end":{"line":153,"column":4,"offset":4520}}}],"position":{"start":{"line":152,"column":1,"offset":4465},"end":{"line":153,"column":4,"offset":4520}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"TRUE","position":{"start":{"line":155,"column":1,"offset":4522},"end":{"line":155,"column":5,"offset":4526}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W = 3.0\nTRUE","position":{"start":{"line":155,"column":6,"offset":4527},"end":{"line":156,"column":5,"offset":4539}}}],"position":{"start":{"line":155,"column":5,"offset":4526},"end":{"line":156,"column":6,"offset":4540}}},{"type":"text","value":"b = 2.0\nNUM_EXAMPLES = 1000","position":{"start":{"line":156,"column":6,"offset":4540},"end":{"line":157,"column":20,"offset":4567}}}],"position":{"start":{"line":155,"column":1,"offset":4522},"end":{"line":157,"column":20,"offset":4567}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"inputs  = tf.random","position":{"start":{"line":159,"column":1,"offset":4569},"end":{"line":159,"column":20,"offset":4588}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":159,"column":21,"offset":4589},"end":{"line":159,"column":38,"offset":4606}}}],"position":{"start":{"line":159,"column":20,"offset":4588},"end":{"line":159,"column":39,"offset":4607}}},{"type":"text","value":"EXAMPLES])\nnoise   = tf.random","position":{"start":{"line":159,"column":39,"offset":4607},"end":{"line":160,"column":20,"offset":4637}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":160,"column":21,"offset":4638},"end":{"line":160,"column":38,"offset":4655}}}],"position":{"start":{"line":160,"column":20,"offset":4637},"end":{"line":160,"column":39,"offset":4656}}},{"type":"text","value":"EXAMPLES])\noutputs = inputs * TRUE","position":{"start":{"line":160,"column":39,"offset":4656},"end":{"line":161,"column":24,"offset":4690}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W + TRUE","position":{"start":{"line":161,"column":25,"offset":4691},"end":{"line":161,"column":33,"offset":4699}}}],"position":{"start":{"line":161,"column":24,"offset":4690},"end":{"line":161,"column":34,"offset":4700}}},{"type":"text","value":"b + noise","position":{"start":{"line":161,"column":34,"offset":4700},"end":{"line":161,"column":43,"offset":4709}}}],"position":{"start":{"line":159,"column":1,"offset":4569},"end":{"line":161,"column":43,"offset":4709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Before we train the model let's visualize where the model stands right now. We'll plot the model's predictions in red and the training data in blue.\"\"\"","position":{"start":{"line":163,"column":1,"offset":4711},"end":{"line":163,"column":155,"offset":4865}}}],"position":{"start":{"line":163,"column":1,"offset":4711},"end":{"line":163,"column":155,"offset":4865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import matplotlib.pyplot as plt","position":{"start":{"line":165,"column":1,"offset":4867},"end":{"line":165,"column":32,"offset":4898}}}],"position":{"start":{"line":165,"column":1,"offset":4867},"end":{"line":165,"column":32,"offset":4898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.scatter(inputs, outputs, c='b')\nplt.scatter(inputs, model(inputs), c='r')\nplt.show()","position":{"start":{"line":167,"column":1,"offset":4900},"end":{"line":169,"column":11,"offset":4988}}}],"position":{"start":{"line":167,"column":1,"offset":4900},"end":{"line":169,"column":11,"offset":4988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print('Current loss: '),\nprint(loss(model(inputs), outputs).numpy())","position":{"start":{"line":171,"column":1,"offset":4990},"end":{"line":172,"column":44,"offset":5058}}}],"position":{"start":{"line":171,"column":1,"offset":4990},"end":{"line":172,"column":44,"offset":5058}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a training loop","position":{"start":{"line":174,"column":1,"offset":5060},"end":{"line":174,"column":30,"offset":5089}}}],"position":{"start":{"line":174,"column":1,"offset":5060},"end":{"line":174,"column":30,"offset":5089}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We now have our network and our training data. Let's train it, i.e., use the training data to update the model's variables (","position":{"start":{"line":176,"column":1,"offset":5091},"end":{"line":176,"column":125,"offset":5215}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":176,"column":125,"offset":5215},"end":{"line":176,"column":128,"offset":5218}}},{"type":"text","value":" and ","position":{"start":{"line":176,"column":128,"offset":5218},"end":{"line":176,"column":133,"offset":5223}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":176,"column":133,"offset":5223},"end":{"line":176,"column":136,"offset":5226}}},{"type":"text","value":") so that the loss goes down using ","position":{"start":{"line":176,"column":136,"offset":5226},"end":{"line":176,"column":171,"offset":5261}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Gradient_descent","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"gradient descent","position":{"start":{"line":176,"column":172,"offset":5262},"end":{"line":176,"column":188,"offset":5278}}}],"position":{"start":{"line":176,"column":171,"offset":5261},"end":{"line":176,"column":237,"offset":5327}}},{"type":"text","value":". There are many variants of the gradient descent scheme that are captured in ","position":{"start":{"line":176,"column":237,"offset":5327},"end":{"line":176,"column":315,"offset":5405}}},{"type":"raw","value":"<code class=\"language-text\">tf.train.Optimizer</code>","position":{"start":{"line":176,"column":315,"offset":5405},"end":{"line":176,"column":335,"offset":5425}}},{"type":"text","value":" implementations. We'd highly recommend using those implementations, but in the spirit of building from first principles, in this particular example we will implement the basic math ourselves.\n\"\"\"","position":{"start":{"line":176,"column":335,"offset":5425},"end":{"line":177,"column":4,"offset":5621}}}],"position":{"start":{"line":176,"column":1,"offset":5091},"end":{"line":177,"column":4,"offset":5621}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def train(model, inputs, outputs, learning","position":{"start":{"line":179,"column":1,"offset":5623},"end":{"line":179,"column":43,"offset":5665}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate):\nwith tf.GradientTape() as t:\ncurrent","position":{"start":{"line":179,"column":44,"offset":5666},"end":{"line":181,"column":12,"offset":5715}}}],"position":{"start":{"line":179,"column":43,"offset":5665},"end":{"line":181,"column":13,"offset":5716}}},{"type":"text","value":"loss = loss(model(inputs), outputs)\ndW, db = t.gradient(current","position":{"start":{"line":181,"column":13,"offset":5716},"end":{"line":182,"column":30,"offset":5781}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"loss, ","position":{"start":{"line":182,"column":31,"offset":5782},"end":{"line":182,"column":37,"offset":5788}}},{"type":"text","value":"[model.W, model.b]","position":{"start":{"line":182,"column":38,"offset":5789},"end":{"line":182,"column":54,"offset":5805}}},{"type":"text","value":")\nmodel.W.assign","position":{"start":{"line":182,"column":55,"offset":5806},"end":{"line":183,"column":17,"offset":5824}}}],"position":{"start":{"line":182,"column":30,"offset":5781},"end":{"line":183,"column":18,"offset":5825}}},{"type":"text","value":"sub(learning","position":{"start":{"line":183,"column":18,"offset":5825},"end":{"line":183,"column":30,"offset":5837}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate * dW)\nmodel.b.assign","position":{"start":{"line":183,"column":31,"offset":5838},"end":{"line":184,"column":17,"offset":5865}}}],"position":{"start":{"line":183,"column":30,"offset":5837},"end":{"line":184,"column":18,"offset":5866}}},{"type":"text","value":"sub(learning_rate * db)","position":{"start":{"line":184,"column":18,"offset":5866},"end":{"line":184,"column":41,"offset":5889}}}],"position":{"start":{"line":179,"column":1,"offset":5623},"end":{"line":184,"column":41,"offset":5889}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Finally, let's repeatedly run through the training data and see how ","position":{"start":{"line":186,"column":1,"offset":5891},"end":{"line":186,"column":72,"offset":5962}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":186,"column":72,"offset":5962},"end":{"line":186,"column":75,"offset":5965}}},{"type":"text","value":" and ","position":{"start":{"line":186,"column":75,"offset":5965},"end":{"line":186,"column":80,"offset":5970}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":186,"column":80,"offset":5970},"end":{"line":186,"column":83,"offset":5973}}},{"type":"text","value":" evolve.\"\"\"","position":{"start":{"line":186,"column":83,"offset":5973},"end":{"line":186,"column":94,"offset":5984}}}],"position":{"start":{"line":186,"column":1,"offset":5891},"end":{"line":186,"column":94,"offset":5984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":188,"column":1,"offset":5986},"end":{"line":188,"column":16,"offset":6001}}}],"position":{"start":{"line":188,"column":1,"offset":5986},"end":{"line":188,"column":16,"offset":6001}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"},"children":[{"type":"element","tagName":"a","properties":{"href":"#collect-the-history-of-w-values-and-b-values-to-plot-later","aria-label":"collect the history of w values and b values to plot later permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Collect the history of W-values and b-values to plot later","position":{"start":{"line":190,"column":3,"offset":6005},"end":{"line":190,"column":61,"offset":6063}}}],"position":{"start":{"line":190,"column":1,"offset":6003},"end":{"line":190,"column":61,"offset":6063}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ws, bs = [], []\nepochs = range(10)\nfor epoch in epochs:\nWs.append(model.W.numpy())\nbs.append(model.b.numpy())\ncurrent_loss = loss(model(inputs), outputs)","position":{"start":{"line":191,"column":1,"offset":6064},"end":{"line":196,"column":46,"offset":6223}}}],"position":{"start":{"line":191,"column":1,"offset":6064},"end":{"line":196,"column":46,"offset":6223}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  train(model, inputs, outputs, learning","position":{"start":{"line":198,"column":1,"offset":6225},"end":{"line":198,"column":41,"offset":6265}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate=0.1)\nprint('Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f' %\n(epoch, Ws","position":{"start":{"line":198,"column":42,"offset":6266},"end":{"line":200,"column":19,"offset":6345}}},{"type":"text","value":"[-1]","position":{"start":{"line":200,"column":20,"offset":6346},"end":{"line":200,"column":22,"offset":6348}}},{"type":"text","value":", bs","position":{"start":{"line":200,"column":23,"offset":6349},"end":{"line":200,"column":27,"offset":6353}}},{"type":"text","value":"[-1]","position":{"start":{"line":200,"column":28,"offset":6354},"end":{"line":200,"column":30,"offset":6356}}},{"type":"text","value":", current","position":{"start":{"line":200,"column":31,"offset":6357},"end":{"line":200,"column":40,"offset":6366}}}],"position":{"start":{"line":198,"column":41,"offset":6265},"end":{"line":200,"column":41,"offset":6367}}},{"type":"text","value":"loss))","position":{"start":{"line":200,"column":41,"offset":6367},"end":{"line":200,"column":47,"offset":6373}}}],"position":{"start":{"line":198,"column":1,"offset":6225},"end":{"line":200,"column":47,"offset":6373}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"lets-plot-it-all"},"children":[{"type":"element","tagName":"a","properties":{"href":"#lets-plot-it-all","aria-label":"lets plot it all permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Let's plot it all","position":{"start":{"line":202,"column":3,"offset":6377},"end":{"line":202,"column":20,"offset":6394}}}],"position":{"start":{"line":202,"column":1,"offset":6375},"end":{"line":202,"column":20,"offset":6394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.plot(epochs, Ws, 'r',\nepochs, bs, 'b')\nplt.plot(","position":{"start":{"line":203,"column":1,"offset":6395},"end":{"line":205,"column":10,"offset":6456}}},{"type":"text","value":"[TRUE_W]","position":{"start":{"line":205,"column":11,"offset":6457},"end":{"line":205,"column":17,"offset":6463}}},{"type":"text","value":" * len(epochs), 'r--',\n","position":{"start":{"line":205,"column":18,"offset":6464},"end":{"line":206,"column":10,"offset":6496}}},{"type":"text","value":"[TRUE_b]","position":{"start":{"line":206,"column":11,"offset":6497},"end":{"line":206,"column":17,"offset":6503}}},{"type":"text","value":" * len(epochs), 'b--')\nplt.legend(","position":{"start":{"line":206,"column":18,"offset":6504},"end":{"line":207,"column":12,"offset":6538}}},{"type":"text","value":"['W', 'b', 'true W', 'true_b']","position":{"start":{"line":207,"column":13,"offset":6539},"end":{"line":207,"column":41,"offset":6567}}},{"type":"text","value":")\nplt.show()","position":{"start":{"line":207,"column":42,"offset":6568},"end":{"line":208,"column":11,"offset":6580}}}],"position":{"start":{"line":203,"column":1,"offset":6395},"end":{"line":208,"column":11,"offset":6580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Next Steps","position":{"start":{"line":210,"column":1,"offset":6582},"end":{"line":210,"column":17,"offset":6598}}}],"position":{"start":{"line":210,"column":1,"offset":6582},"end":{"line":210,"column":17,"offset":6598}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial we covered ","position":{"start":{"line":212,"column":1,"offset":6600},"end":{"line":212,"column":29,"offset":6628}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":212,"column":29,"offset":6628},"end":{"line":212,"column":39,"offset":6638}}},{"type":"text","value":"s and built and trained a simple linear model using the TensorFlow primitives discussed so far.","position":{"start":{"line":212,"column":39,"offset":6638},"end":{"line":212,"column":134,"offset":6733}}}],"position":{"start":{"line":212,"column":1,"offset":6600},"end":{"line":212,"column":134,"offset":6733}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In theory, this is pretty much all you need to use TensorFlow for your machine learning research.\nIn practice, particularly for neural networks, the higher level APIs like ","position":{"start":{"line":214,"column":1,"offset":6735},"end":{"line":215,"column":75,"offset":6907}}},{"type":"raw","value":"<code class=\"language-text\">tf.keras</code>","position":{"start":{"line":215,"column":75,"offset":6907},"end":{"line":215,"column":85,"offset":6917}}},{"type":"text","value":" will be much more convenient since it provides higher level building blocks (called \"layers\"), utilities to save and restore state, a suite of loss functions, a suite of optimization strategies etc.\n\"\"\"","position":{"start":{"line":215,"column":85,"offset":6917},"end":{"line":216,"column":4,"offset":7120}}}],"position":{"start":{"line":214,"column":1,"offset":6735},"end":{"line":216,"column":4,"offset":7120}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":218,"column":1,"offset":7122},"end":{"line":222,"column":1,"offset":7129}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":222,"column":1,"offset":7129}}}}