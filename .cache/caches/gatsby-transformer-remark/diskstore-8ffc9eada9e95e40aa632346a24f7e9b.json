{"expireTime":9007200813389750000,"key":"transformer-remark-markdown-html-ast-f34a1b1d0be3c08e0baa5f90cd2598b9-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#basic-operations","aria-label":"basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Basic Operations","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":20,"offset":19}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initilize-tensors"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initilize-tensors","aria-label":"initilize tensors permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"initilize tensors","position":{"start":{"line":3,"column":5,"offset":25},"end":{"line":3,"column":22,"offset":42}}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":23,"offset":43}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(10,10) array with zero elements","position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}}],"position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Using python state\nx = tf.zeros([10, 10])\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":79},"end":{"line":13,"column":4,"offset":238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initilize-tensors-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initilize-tensors-1","aria-label":"initilize tensors 1 permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"initilize tensors","position":{"start":{"line":15,"column":5,"offset":244},"end":{"line":15,"column":22,"offset":261}}}],"position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":15,"column":23,"offset":262}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import tensorflow as tf\nimport numpy \n\ntf.enable_eager_execution\n\n\nprint(tf.add(1, 2))\nprint(tf.add([1, 2], [3, 4]))\nprint(tf.square(5))\nprint(tf.reduce_sum([1, 2, 3]))\nprint(tf.encode_base64(&quot;hello world&quot;))\n\n# Operator overloading is also supported\nprint(tf.square(2) + tf.square(3))\n\nx = tf.matmul([[1]], [[2, 3]])\nprint(x.shape)\nprint(x.dtype)\n\nndarray = np.ones([3, 3])\n\nprint(&quot;TensorFlow operations convert numpy arrays to Tensors automatically&quot;)\ntensor = tf.multiply(ndarray, 42)\nprint(tensor)\n\nprint(&quot;And NumPy operations convert Tensors to numpy arrays automatically&quot;)\nprint(np.add(tensor, 1))\n\nprint(&quot;The .numpy() method explicitly converts a Tensor to a numpy array&quot;)\nprint(tensor.numpy())</code></pre></div>","position":{"start":{"line":17,"column":1,"offset":264},"end":{"line":48,"column":4,"offset":971}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"a-small-script-to-show-a-custom-training-using"},"children":[{"type":"element","tagName":"a","properties":{"href":"#a-small-script-to-show-a-custom-training-using","aria-label":"a small script to show a custom training using permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"A small script to show a custom training using","position":{"start":{"line":53,"column":5,"offset":980},"end":{"line":53,"column":51,"offset":1026}}}],"position":{"start":{"line":53,"column":1,"offset":976},"end":{"line":53,"column":52,"offset":1027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*class,  assert, plot","position":{"start":{"line":55,"column":1,"offset":1029},"end":{"line":55,"column":22,"offset":1050}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":55,"column":22,"offset":1050},"end":{"line":56,"column":1,"offset":1053}}},{"type":"text","value":"\n"},{"type":"text","value":"*variable, gradient, and loss","position":{"start":{"line":56,"column":1,"offset":1053},"end":{"line":56,"column":30,"offset":1082}}}],"position":{"start":{"line":55,"column":1,"offset":1029},"end":{"line":56,"column":30,"offset":1082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"# Custom training: basics\n\"\"\"","position":{"start":{"line":59,"column":1,"offset":1085},"end":{"line":60,"column":4,"offset":1117}}}],"position":{"start":{"line":59,"column":1,"offset":1085},"end":{"line":60,"column":4,"offset":1117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from ","position":{"start":{"line":62,"column":1,"offset":1119},"end":{"line":62,"column":6,"offset":1124}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"future","position":{"start":{"line":62,"column":8,"offset":1126},"end":{"line":62,"column":14,"offset":1132}}}],"position":{"start":{"line":62,"column":6,"offset":1124},"end":{"line":62,"column":16,"offset":1134}}},{"type":"text","value":" import absolute","position":{"start":{"line":62,"column":16,"offset":1134},"end":{"line":62,"column":32,"offset":1150}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"import, division, print","position":{"start":{"line":62,"column":33,"offset":1151},"end":{"line":62,"column":56,"offset":1174}}}],"position":{"start":{"line":62,"column":32,"offset":1150},"end":{"line":62,"column":57,"offset":1175}}},{"type":"text","value":"function, unicode_literals","position":{"start":{"line":62,"column":57,"offset":1175},"end":{"line":62,"column":83,"offset":1201}}}],"position":{"start":{"line":62,"column":1,"offset":1119},"end":{"line":62,"column":83,"offset":1201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import tensorflow as tf","position":{"start":{"line":64,"column":1,"offset":1203},"end":{"line":64,"column":24,"offset":1226}}}],"position":{"start":{"line":64,"column":1,"offset":1203},"end":{"line":64,"column":24,"offset":1226}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"tf.enable","position":{"start":{"line":66,"column":1,"offset":1228},"end":{"line":66,"column":10,"offset":1237}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"eager","position":{"start":{"line":66,"column":11,"offset":1238},"end":{"line":66,"column":16,"offset":1243}}}],"position":{"start":{"line":66,"column":10,"offset":1237},"end":{"line":66,"column":17,"offset":1244}}},{"type":"text","value":"execution()","position":{"start":{"line":66,"column":17,"offset":1244},"end":{"line":66,"column":28,"offset":1255}}}],"position":{"start":{"line":66,"column":1,"offset":1228},"end":{"line":66,"column":28,"offset":1255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Variables","position":{"start":{"line":68,"column":1,"offset":1257},"end":{"line":68,"column":16,"offset":1272}}}],"position":{"start":{"line":68,"column":1,"offset":1257},"end":{"line":68,"column":16,"offset":1272}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Tensors in TensorFlow are immutable stateless objects. Machine learning models, however, need to have changing state: as your model trains, the same code to compute predictions should behave differently over time (hopefully with a lower loss!). To represent this state which needs to change over the course of your computation, you can choose to rely on the fact that Python is a stateful programming language:\n\"\"\"","position":{"start":{"line":70,"column":1,"offset":1274},"end":{"line":71,"column":4,"offset":1688}}}],"position":{"start":{"line":70,"column":1,"offset":1274},"end":{"line":71,"column":4,"offset":1688}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"using-python-state"},"children":[{"type":"element","tagName":"a","properties":{"href":"#using-python-state","aria-label":"using python state permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Using python state","position":{"start":{"line":73,"column":3,"offset":1692},"end":{"line":73,"column":21,"offset":1710}}}],"position":{"start":{"line":73,"column":1,"offset":1690},"end":{"line":73,"column":21,"offset":1710}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x = tf.zeros(","position":{"start":{"line":74,"column":1,"offset":1711},"end":{"line":74,"column":14,"offset":1724}}},{"type":"text","value":"[10, 10]","position":{"start":{"line":74,"column":15,"offset":1725},"end":{"line":74,"column":21,"offset":1731}}},{"type":"text","value":")\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n# value of x\nprint(x)","position":{"start":{"line":74,"column":22,"offset":1732},"end":{"line":77,"column":9,"offset":1841}}}],"position":{"start":{"line":74,"column":1,"offset":1711},"end":{"line":77,"column":9,"offset":1841}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"TensorFlow, however, has stateful operations built in, and these are often more pleasant to use than low-level Python representations of your state. To represent weights in a model, for example, it's often convenient and efficient to use TensorFlow variables.","position":{"start":{"line":79,"column":1,"offset":1843},"end":{"line":79,"column":263,"offset":2105}}}],"position":{"start":{"line":79,"column":1,"offset":1843},"end":{"line":79,"column":263,"offset":2105}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A Variable is an object which stores a value and, when used in a TensorFlow computation, will implicitly read from this stored value. There are operations (","position":{"start":{"line":81,"column":1,"offset":2107},"end":{"line":81,"column":157,"offset":2263}}},{"type":"raw","value":"<code class=\"language-text\">tf.assign_sub</code>","position":{"start":{"line":81,"column":157,"offset":2263},"end":{"line":81,"column":172,"offset":2278}}},{"type":"text","value":", ","position":{"start":{"line":81,"column":172,"offset":2278},"end":{"line":81,"column":174,"offset":2280}}},{"type":"raw","value":"<code class=\"language-text\">tf.scatter_update</code>","position":{"start":{"line":81,"column":174,"offset":2280},"end":{"line":81,"column":193,"offset":2299}}},{"type":"text","value":", etc) which manipulate the value stored in a TensorFlow variable.\n\"\"\"","position":{"start":{"line":81,"column":193,"offset":2299},"end":{"line":82,"column":4,"offset":2369}}}],"position":{"start":{"line":81,"column":1,"offset":2107},"end":{"line":82,"column":4,"offset":2369}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v = tf.Variable(1.0)\nassert v.numpy() == 1.0","position":{"start":{"line":84,"column":1,"offset":2371},"end":{"line":85,"column":24,"offset":2415}}}],"position":{"start":{"line":84,"column":1,"offset":2371},"end":{"line":85,"column":24,"offset":2415}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"re-assign-the-value"},"children":[{"type":"element","tagName":"a","properties":{"href":"#re-assign-the-value","aria-label":"re assign the value permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Re-assign the value","position":{"start":{"line":87,"column":3,"offset":2419},"end":{"line":87,"column":22,"offset":2438}}}],"position":{"start":{"line":87,"column":1,"offset":2417},"end":{"line":87,"column":22,"offset":2438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(3.0)\nassert v.numpy() == 3.0","position":{"start":{"line":88,"column":1,"offset":2439},"end":{"line":89,"column":24,"offset":2476}}}],"position":{"start":{"line":88,"column":1,"offset":2439},"end":{"line":89,"column":24,"offset":2476}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"},"children":[{"type":"element","tagName":"a","properties":{"href":"#use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","aria-label":"use v in a tensorflow operation like tfsquare and reassign permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Use ","position":{"start":{"line":91,"column":3,"offset":2480},"end":{"line":91,"column":7,"offset":2484}}},{"type":"raw","value":"<code class=\"language-text\">v</code>","position":{"start":{"line":91,"column":7,"offset":2484},"end":{"line":91,"column":10,"offset":2487}}},{"type":"text","value":" in a TensorFlow operation like tf.square() and reassign","position":{"start":{"line":91,"column":10,"offset":2487},"end":{"line":91,"column":66,"offset":2543}}}],"position":{"start":{"line":91,"column":1,"offset":2478},"end":{"line":91,"column":66,"offset":2543}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(tf.square(v))\nassert v.numpy() == 9.0","position":{"start":{"line":92,"column":1,"offset":2544},"end":{"line":93,"column":24,"offset":2590}}}],"position":{"start":{"line":92,"column":1,"offset":2544},"end":{"line":93,"column":24,"offset":2590}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Computations using Variables are automatically traced when computing gradients. For Variables representing embeddings TensorFlow will do sparse updates by default, which are more computation and memory efficient.","position":{"start":{"line":95,"column":1,"offset":2592},"end":{"line":95,"column":216,"offset":2807}}}],"position":{"start":{"line":95,"column":1,"offset":2592},"end":{"line":95,"column":216,"offset":2807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using Variables is also a way to quickly let a reader of your code know that this piece of state is mutable.","position":{"start":{"line":97,"column":1,"offset":2809},"end":{"line":97,"column":109,"offset":2917}}}],"position":{"start":{"line":97,"column":1,"offset":2809},"end":{"line":97,"column":109,"offset":2917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"example-fitting-a-linear-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#example-fitting-a-linear-model","aria-label":"example fitting a linear model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Example: Fitting a linear model","position":{"start":{"line":99,"column":4,"offset":2922},"end":{"line":99,"column":35,"offset":2953}}}],"position":{"start":{"line":99,"column":1,"offset":2919},"end":{"line":99,"column":35,"offset":2953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's now put the few concepts we have so far ---","position":{"start":{"line":101,"column":1,"offset":2955},"end":{"line":101,"column":50,"offset":3004}}},{"type":"raw","value":"<code class=\"language-text\">Tensor</code>","position":{"start":{"line":101,"column":50,"offset":3004},"end":{"line":101,"column":58,"offset":3012}}},{"type":"text","value":", ","position":{"start":{"line":101,"column":58,"offset":3012},"end":{"line":101,"column":60,"offset":3014}}},{"type":"raw","value":"<code class=\"language-text\">GradientTape</code>","position":{"start":{"line":101,"column":60,"offset":3014},"end":{"line":101,"column":74,"offset":3028}}},{"type":"text","value":", ","position":{"start":{"line":101,"column":74,"offset":3028},"end":{"line":101,"column":76,"offset":3030}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":101,"column":76,"offset":3030},"end":{"line":101,"column":86,"offset":3040}}},{"type":"text","value":" --- to build and train a simple model. This typically involves a few steps:","position":{"start":{"line":101,"column":86,"offset":3040},"end":{"line":101,"column":162,"offset":3116}}}],"position":{"start":{"line":101,"column":1,"offset":2955},"end":{"line":101,"column":162,"offset":3116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define the model.","position":{"start":{"line":103,"column":4,"offset":3121},"end":{"line":103,"column":21,"offset":3138}}}],"position":{"start":{"line":103,"column":1,"offset":3118},"end":{"line":103,"column":21,"offset":3138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define a loss function.","position":{"start":{"line":104,"column":4,"offset":3142},"end":{"line":104,"column":27,"offset":3165}}}],"position":{"start":{"line":104,"column":1,"offset":3139},"end":{"line":104,"column":27,"offset":3165}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Obtain training data.","position":{"start":{"line":105,"column":4,"offset":3169},"end":{"line":105,"column":25,"offset":3190}}}],"position":{"start":{"line":105,"column":1,"offset":3166},"end":{"line":105,"column":25,"offset":3190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Run through the training data and use an \"optimizer\" to adjust the variables to fit the data.","position":{"start":{"line":106,"column":4,"offset":3194},"end":{"line":106,"column":97,"offset":3287}}}],"position":{"start":{"line":106,"column":1,"offset":3191},"end":{"line":106,"column":97,"offset":3287}}},{"type":"text","value":"\n"}],"position":{"start":{"line":103,"column":1,"offset":3118},"end":{"line":106,"column":97,"offset":3287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial, we'll walk through a trivial example of a simple linear model: ","position":{"start":{"line":108,"column":1,"offset":3289},"end":{"line":108,"column":82,"offset":3370}}},{"type":"raw","value":"<code class=\"language-text\">f(x) = x * W + b</code>","position":{"start":{"line":108,"column":82,"offset":3370},"end":{"line":108,"column":100,"offset":3388}}},{"type":"text","value":", which has two variables - ","position":{"start":{"line":108,"column":100,"offset":3388},"end":{"line":108,"column":128,"offset":3416}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":108,"column":128,"offset":3416},"end":{"line":108,"column":131,"offset":3419}}},{"type":"text","value":" and ","position":{"start":{"line":108,"column":131,"offset":3419},"end":{"line":108,"column":136,"offset":3424}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":108,"column":136,"offset":3424},"end":{"line":108,"column":139,"offset":3427}}},{"type":"text","value":". Furthermore, we'll synthesize data such that a well trained model would have ","position":{"start":{"line":108,"column":139,"offset":3427},"end":{"line":108,"column":218,"offset":3506}}},{"type":"raw","value":"<code class=\"language-text\">W = 3.0</code>","position":{"start":{"line":108,"column":218,"offset":3506},"end":{"line":108,"column":227,"offset":3515}}},{"type":"text","value":" and ","position":{"start":{"line":108,"column":227,"offset":3515},"end":{"line":108,"column":232,"offset":3520}}},{"type":"raw","value":"<code class=\"language-text\">b = 2.0</code>","position":{"start":{"line":108,"column":232,"offset":3520},"end":{"line":108,"column":241,"offset":3529}}},{"type":"text","value":".","position":{"start":{"line":108,"column":241,"offset":3529},"end":{"line":108,"column":242,"offset":3530}}}],"position":{"start":{"line":108,"column":1,"offset":3289},"end":{"line":108,"column":242,"offset":3530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"define-the-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#define-the-model","aria-label":"define the model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Define the model","position":{"start":{"line":110,"column":5,"offset":3536},"end":{"line":110,"column":21,"offset":3552}}}],"position":{"start":{"line":110,"column":1,"offset":3532},"end":{"line":110,"column":21,"offset":3552}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's define a simple class to encapsulate the variables and the computation.\n\"\"\"","position":{"start":{"line":112,"column":1,"offset":3554},"end":{"line":113,"column":4,"offset":3635}}}],"position":{"start":{"line":112,"column":1,"offset":3554},"end":{"line":113,"column":4,"offset":3635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"class Model(object):\ndef ","position":{"start":{"line":115,"column":1,"offset":3637},"end":{"line":116,"column":7,"offset":3664}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"init","position":{"start":{"line":116,"column":9,"offset":3666},"end":{"line":116,"column":13,"offset":3670}}}],"position":{"start":{"line":116,"column":7,"offset":3664},"end":{"line":116,"column":15,"offset":3672}}},{"type":"text","value":"(self):\n# Initialize variable to (5.0, 0.0)\n# In practice, these should be initialized to random values.\nself.W = tf.Variable(5.0)\nself.b = tf.Variable(0.0)","position":{"start":{"line":116,"column":15,"offset":3672},"end":{"line":120,"column":30,"offset":3844}}}],"position":{"start":{"line":115,"column":1,"offset":3637},"end":{"line":120,"column":30,"offset":3844}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  def ","position":{"start":{"line":122,"column":1,"offset":3846},"end":{"line":122,"column":7,"offset":3852}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"call","position":{"start":{"line":122,"column":9,"offset":3854},"end":{"line":122,"column":13,"offset":3858}}}],"position":{"start":{"line":122,"column":7,"offset":3852},"end":{"line":122,"column":15,"offset":3860}}},{"type":"text","value":"(self, x):\nreturn self.W * x + self.b","position":{"start":{"line":122,"column":15,"offset":3860},"end":{"line":123,"column":31,"offset":3901}}}],"position":{"start":{"line":122,"column":1,"offset":3846},"end":{"line":123,"column":31,"offset":3901}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":125,"column":1,"offset":3903},"end":{"line":125,"column":16,"offset":3918}}}],"position":{"start":{"line":125,"column":1,"offset":3903},"end":{"line":125,"column":16,"offset":3918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"assert model(3.0).numpy() == 15.0","position":{"start":{"line":127,"column":1,"offset":3920},"end":{"line":127,"column":34,"offset":3953}}}],"position":{"start":{"line":127,"column":1,"offset":3920},"end":{"line":127,"column":34,"offset":3953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a loss function","position":{"start":{"line":129,"column":1,"offset":3955},"end":{"line":129,"column":30,"offset":3984}}}],"position":{"start":{"line":129,"column":1,"offset":3955},"end":{"line":129,"column":30,"offset":3984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A loss function measures how well the output of a model for a given input matches the desired output. Let's use the standard L2 loss.\n\"\"\"","position":{"start":{"line":131,"column":1,"offset":3986},"end":{"line":132,"column":4,"offset":4123}}}],"position":{"start":{"line":131,"column":1,"offset":3986},"end":{"line":132,"column":4,"offset":4123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def loss(predicted","position":{"start":{"line":134,"column":1,"offset":4125},"end":{"line":134,"column":19,"offset":4143}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"y, desired","position":{"start":{"line":134,"column":20,"offset":4144},"end":{"line":134,"column":30,"offset":4154}}}],"position":{"start":{"line":134,"column":19,"offset":4143},"end":{"line":134,"column":31,"offset":4155}}},{"type":"text","value":"y):\nreturn tf.reduce","position":{"start":{"line":134,"column":31,"offset":4155},"end":{"line":135,"column":19,"offset":4177}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"mean(tf.square(predicted","position":{"start":{"line":135,"column":20,"offset":4178},"end":{"line":135,"column":44,"offset":4202}}}],"position":{"start":{"line":135,"column":19,"offset":4177},"end":{"line":135,"column":45,"offset":4203}}},{"type":"text","value":"y - desired_y))","position":{"start":{"line":135,"column":45,"offset":4203},"end":{"line":135,"column":60,"offset":4218}}}],"position":{"start":{"line":134,"column":1,"offset":4125},"end":{"line":135,"column":60,"offset":4218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Obtain training data","position":{"start":{"line":137,"column":1,"offset":4220},"end":{"line":137,"column":28,"offset":4247}}}],"position":{"start":{"line":137,"column":1,"offset":4220},"end":{"line":137,"column":28,"offset":4247}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's synthesize the training data with some noise.\n\"\"\"","position":{"start":{"line":139,"column":1,"offset":4249},"end":{"line":140,"column":4,"offset":4304}}}],"position":{"start":{"line":139,"column":1,"offset":4249},"end":{"line":140,"column":4,"offset":4304}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"TRUE","position":{"start":{"line":142,"column":1,"offset":4306},"end":{"line":142,"column":5,"offset":4310}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W = 3.0\nTRUE","position":{"start":{"line":142,"column":6,"offset":4311},"end":{"line":143,"column":5,"offset":4323}}}],"position":{"start":{"line":142,"column":5,"offset":4310},"end":{"line":143,"column":6,"offset":4324}}},{"type":"text","value":"b = 2.0\nNUM_EXAMPLES = 1000","position":{"start":{"line":143,"column":6,"offset":4324},"end":{"line":144,"column":20,"offset":4351}}}],"position":{"start":{"line":142,"column":1,"offset":4306},"end":{"line":144,"column":20,"offset":4351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"inputs  = tf.random","position":{"start":{"line":146,"column":1,"offset":4353},"end":{"line":146,"column":20,"offset":4372}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":146,"column":21,"offset":4373},"end":{"line":146,"column":38,"offset":4390}}}],"position":{"start":{"line":146,"column":20,"offset":4372},"end":{"line":146,"column":39,"offset":4391}}},{"type":"text","value":"EXAMPLES])\nnoise   = tf.random","position":{"start":{"line":146,"column":39,"offset":4391},"end":{"line":147,"column":20,"offset":4421}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":147,"column":21,"offset":4422},"end":{"line":147,"column":38,"offset":4439}}}],"position":{"start":{"line":147,"column":20,"offset":4421},"end":{"line":147,"column":39,"offset":4440}}},{"type":"text","value":"EXAMPLES])\noutputs = inputs * TRUE","position":{"start":{"line":147,"column":39,"offset":4440},"end":{"line":148,"column":24,"offset":4474}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W + TRUE","position":{"start":{"line":148,"column":25,"offset":4475},"end":{"line":148,"column":33,"offset":4483}}}],"position":{"start":{"line":148,"column":24,"offset":4474},"end":{"line":148,"column":34,"offset":4484}}},{"type":"text","value":"b + noise","position":{"start":{"line":148,"column":34,"offset":4484},"end":{"line":148,"column":43,"offset":4493}}}],"position":{"start":{"line":146,"column":1,"offset":4353},"end":{"line":148,"column":43,"offset":4493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Before we train the model let's visualize where the model stands right now. We'll plot the model's predictions in red and the training data in blue.\"\"\"","position":{"start":{"line":150,"column":1,"offset":4495},"end":{"line":150,"column":155,"offset":4649}}}],"position":{"start":{"line":150,"column":1,"offset":4495},"end":{"line":150,"column":155,"offset":4649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import matplotlib.pyplot as plt","position":{"start":{"line":152,"column":1,"offset":4651},"end":{"line":152,"column":32,"offset":4682}}}],"position":{"start":{"line":152,"column":1,"offset":4651},"end":{"line":152,"column":32,"offset":4682}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.scatter(inputs, outputs, c='b')\nplt.scatter(inputs, model(inputs), c='r')\nplt.show()","position":{"start":{"line":154,"column":1,"offset":4684},"end":{"line":156,"column":11,"offset":4772}}}],"position":{"start":{"line":154,"column":1,"offset":4684},"end":{"line":156,"column":11,"offset":4772}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print('Current loss: '),\nprint(loss(model(inputs), outputs).numpy())","position":{"start":{"line":158,"column":1,"offset":4774},"end":{"line":159,"column":44,"offset":4842}}}],"position":{"start":{"line":158,"column":1,"offset":4774},"end":{"line":159,"column":44,"offset":4842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a training loop","position":{"start":{"line":161,"column":1,"offset":4844},"end":{"line":161,"column":30,"offset":4873}}}],"position":{"start":{"line":161,"column":1,"offset":4844},"end":{"line":161,"column":30,"offset":4873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We now have our network and our training data. Let's train it, i.e., use the training data to update the model's variables (","position":{"start":{"line":163,"column":1,"offset":4875},"end":{"line":163,"column":125,"offset":4999}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":163,"column":125,"offset":4999},"end":{"line":163,"column":128,"offset":5002}}},{"type":"text","value":" and ","position":{"start":{"line":163,"column":128,"offset":5002},"end":{"line":163,"column":133,"offset":5007}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":163,"column":133,"offset":5007},"end":{"line":163,"column":136,"offset":5010}}},{"type":"text","value":") so that the loss goes down using ","position":{"start":{"line":163,"column":136,"offset":5010},"end":{"line":163,"column":171,"offset":5045}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Gradient_descent","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"gradient descent","position":{"start":{"line":163,"column":172,"offset":5046},"end":{"line":163,"column":188,"offset":5062}}}],"position":{"start":{"line":163,"column":171,"offset":5045},"end":{"line":163,"column":237,"offset":5111}}},{"type":"text","value":". There are many variants of the gradient descent scheme that are captured in ","position":{"start":{"line":163,"column":237,"offset":5111},"end":{"line":163,"column":315,"offset":5189}}},{"type":"raw","value":"<code class=\"language-text\">tf.train.Optimizer</code>","position":{"start":{"line":163,"column":315,"offset":5189},"end":{"line":163,"column":335,"offset":5209}}},{"type":"text","value":" implementations. We'd highly recommend using those implementations, but in the spirit of building from first principles, in this particular example we will implement the basic math ourselves.\n\"\"\"","position":{"start":{"line":163,"column":335,"offset":5209},"end":{"line":164,"column":4,"offset":5405}}}],"position":{"start":{"line":163,"column":1,"offset":4875},"end":{"line":164,"column":4,"offset":5405}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def train(model, inputs, outputs, learning","position":{"start":{"line":166,"column":1,"offset":5407},"end":{"line":166,"column":43,"offset":5449}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate):\nwith tf.GradientTape() as t:\ncurrent","position":{"start":{"line":166,"column":44,"offset":5450},"end":{"line":168,"column":12,"offset":5499}}}],"position":{"start":{"line":166,"column":43,"offset":5449},"end":{"line":168,"column":13,"offset":5500}}},{"type":"text","value":"loss = loss(model(inputs), outputs)\ndW, db = t.gradient(current","position":{"start":{"line":168,"column":13,"offset":5500},"end":{"line":169,"column":30,"offset":5565}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"loss, ","position":{"start":{"line":169,"column":31,"offset":5566},"end":{"line":169,"column":37,"offset":5572}}},{"type":"text","value":"[model.W, model.b]","position":{"start":{"line":169,"column":38,"offset":5573},"end":{"line":169,"column":54,"offset":5589}}},{"type":"text","value":")\nmodel.W.assign","position":{"start":{"line":169,"column":55,"offset":5590},"end":{"line":170,"column":17,"offset":5608}}}],"position":{"start":{"line":169,"column":30,"offset":5565},"end":{"line":170,"column":18,"offset":5609}}},{"type":"text","value":"sub(learning","position":{"start":{"line":170,"column":18,"offset":5609},"end":{"line":170,"column":30,"offset":5621}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate * dW)\nmodel.b.assign","position":{"start":{"line":170,"column":31,"offset":5622},"end":{"line":171,"column":17,"offset":5649}}}],"position":{"start":{"line":170,"column":30,"offset":5621},"end":{"line":171,"column":18,"offset":5650}}},{"type":"text","value":"sub(learning_rate * db)","position":{"start":{"line":171,"column":18,"offset":5650},"end":{"line":171,"column":41,"offset":5673}}}],"position":{"start":{"line":166,"column":1,"offset":5407},"end":{"line":171,"column":41,"offset":5673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Finally, let's repeatedly run through the training data and see how ","position":{"start":{"line":173,"column":1,"offset":5675},"end":{"line":173,"column":72,"offset":5746}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":173,"column":72,"offset":5746},"end":{"line":173,"column":75,"offset":5749}}},{"type":"text","value":" and ","position":{"start":{"line":173,"column":75,"offset":5749},"end":{"line":173,"column":80,"offset":5754}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":173,"column":80,"offset":5754},"end":{"line":173,"column":83,"offset":5757}}},{"type":"text","value":" evolve.\"\"\"","position":{"start":{"line":173,"column":83,"offset":5757},"end":{"line":173,"column":94,"offset":5768}}}],"position":{"start":{"line":173,"column":1,"offset":5675},"end":{"line":173,"column":94,"offset":5768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":175,"column":1,"offset":5770},"end":{"line":175,"column":16,"offset":5785}}}],"position":{"start":{"line":175,"column":1,"offset":5770},"end":{"line":175,"column":16,"offset":5785}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"},"children":[{"type":"element","tagName":"a","properties":{"href":"#collect-the-history-of-w-values-and-b-values-to-plot-later","aria-label":"collect the history of w values and b values to plot later permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Collect the history of W-values and b-values to plot later","position":{"start":{"line":177,"column":3,"offset":5789},"end":{"line":177,"column":61,"offset":5847}}}],"position":{"start":{"line":177,"column":1,"offset":5787},"end":{"line":177,"column":61,"offset":5847}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ws, bs = [], []\nepochs = range(10)\nfor epoch in epochs:\nWs.append(model.W.numpy())\nbs.append(model.b.numpy())\ncurrent_loss = loss(model(inputs), outputs)","position":{"start":{"line":178,"column":1,"offset":5848},"end":{"line":183,"column":46,"offset":6007}}}],"position":{"start":{"line":178,"column":1,"offset":5848},"end":{"line":183,"column":46,"offset":6007}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  train(model, inputs, outputs, learning","position":{"start":{"line":185,"column":1,"offset":6009},"end":{"line":185,"column":41,"offset":6049}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate=0.1)\nprint('Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f' %\n(epoch, Ws","position":{"start":{"line":185,"column":42,"offset":6050},"end":{"line":187,"column":19,"offset":6129}}},{"type":"text","value":"[-1]","position":{"start":{"line":187,"column":20,"offset":6130},"end":{"line":187,"column":22,"offset":6132}}},{"type":"text","value":", bs","position":{"start":{"line":187,"column":23,"offset":6133},"end":{"line":187,"column":27,"offset":6137}}},{"type":"text","value":"[-1]","position":{"start":{"line":187,"column":28,"offset":6138},"end":{"line":187,"column":30,"offset":6140}}},{"type":"text","value":", current","position":{"start":{"line":187,"column":31,"offset":6141},"end":{"line":187,"column":40,"offset":6150}}}],"position":{"start":{"line":185,"column":41,"offset":6049},"end":{"line":187,"column":41,"offset":6151}}},{"type":"text","value":"loss))","position":{"start":{"line":187,"column":41,"offset":6151},"end":{"line":187,"column":47,"offset":6157}}}],"position":{"start":{"line":185,"column":1,"offset":6009},"end":{"line":187,"column":47,"offset":6157}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"lets-plot-it-all"},"children":[{"type":"element","tagName":"a","properties":{"href":"#lets-plot-it-all","aria-label":"lets plot it all permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Let's plot it all","position":{"start":{"line":189,"column":3,"offset":6161},"end":{"line":189,"column":20,"offset":6178}}}],"position":{"start":{"line":189,"column":1,"offset":6159},"end":{"line":189,"column":20,"offset":6178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.plot(epochs, Ws, 'r',\nepochs, bs, 'b')\nplt.plot(","position":{"start":{"line":190,"column":1,"offset":6179},"end":{"line":192,"column":10,"offset":6240}}},{"type":"text","value":"[TRUE_W]","position":{"start":{"line":192,"column":11,"offset":6241},"end":{"line":192,"column":17,"offset":6247}}},{"type":"text","value":" * len(epochs), 'r--',\n","position":{"start":{"line":192,"column":18,"offset":6248},"end":{"line":193,"column":10,"offset":6280}}},{"type":"text","value":"[TRUE_b]","position":{"start":{"line":193,"column":11,"offset":6281},"end":{"line":193,"column":17,"offset":6287}}},{"type":"text","value":" * len(epochs), 'b--')\nplt.legend(","position":{"start":{"line":193,"column":18,"offset":6288},"end":{"line":194,"column":12,"offset":6322}}},{"type":"text","value":"['W', 'b', 'true W', 'true_b']","position":{"start":{"line":194,"column":13,"offset":6323},"end":{"line":194,"column":41,"offset":6351}}},{"type":"text","value":")\nplt.show()","position":{"start":{"line":194,"column":42,"offset":6352},"end":{"line":195,"column":11,"offset":6364}}}],"position":{"start":{"line":190,"column":1,"offset":6179},"end":{"line":195,"column":11,"offset":6364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Next Steps","position":{"start":{"line":197,"column":1,"offset":6366},"end":{"line":197,"column":17,"offset":6382}}}],"position":{"start":{"line":197,"column":1,"offset":6366},"end":{"line":197,"column":17,"offset":6382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial we covered ","position":{"start":{"line":199,"column":1,"offset":6384},"end":{"line":199,"column":29,"offset":6412}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":199,"column":29,"offset":6412},"end":{"line":199,"column":39,"offset":6422}}},{"type":"text","value":"s and built and trained a simple linear model using the TensorFlow primitives discussed so far.","position":{"start":{"line":199,"column":39,"offset":6422},"end":{"line":199,"column":134,"offset":6517}}}],"position":{"start":{"line":199,"column":1,"offset":6384},"end":{"line":199,"column":134,"offset":6517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In theory, this is pretty much all you need to use TensorFlow for your machine learning research.\nIn practice, particularly for neural networks, the higher level APIs like ","position":{"start":{"line":201,"column":1,"offset":6519},"end":{"line":202,"column":75,"offset":6691}}},{"type":"raw","value":"<code class=\"language-text\">tf.keras</code>","position":{"start":{"line":202,"column":75,"offset":6691},"end":{"line":202,"column":85,"offset":6701}}},{"type":"text","value":" will be much more convenient since it provides higher level building blocks (called \"layers\"), utilities to save and restore state, a suite of loss functions, a suite of optimization strategies etc.\n\"\"\"","position":{"start":{"line":202,"column":85,"offset":6701},"end":{"line":203,"column":4,"offset":6904}}}],"position":{"start":{"line":201,"column":1,"offset":6519},"end":{"line":203,"column":4,"offset":6904}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":205,"column":1,"offset":6906},"end":{"line":209,"column":1,"offset":6913}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":209,"column":1,"offset":6913}}}}