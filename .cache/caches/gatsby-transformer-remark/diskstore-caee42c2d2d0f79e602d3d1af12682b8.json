{"expireTime":9007200813400657000,"key":"transformer-remark-markdown-html-ast-fba03ff80ca85a36514f825f75a57dc3-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#basic-operations","aria-label":"basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Basic Operations","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":20,"offset":19}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initilize-tensors"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initilize-tensors","aria-label":"initilize tensors permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"initilize tensors","position":{"start":{"line":3,"column":5,"offset":25},"end":{"line":3,"column":22,"offset":42}}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":23,"offset":43}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(10,10) array with zero elements","position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}}],"position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Using python state\nx = tf.zeros([10, 10])\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":79},"end":{"line":13,"column":4,"offset":238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensors-basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensors-basic-operations","aria-label":"tensors basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensors basic operations","position":{"start":{"line":15,"column":5,"offset":244},"end":{"line":15,"column":29,"offset":268}}}],"position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":15,"column":30,"offset":269}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import tensorflow as tf\nimport numpy \n\ntf.enable_eager_execution\n\nprint(tf.add(1, 2))\nprint(tf.add([1, 2], [3, 4]))\nprint(tf.square(5))\nprint(tf.reduce_sum([1, 2, 3]))\nprint(tf.encode_base64(&quot;hello world&quot;))\n\n# Operator overloading is also supported\nprint(tf.square(2) + tf.square(3))\n\nx = tf.matmul([[1]], [[2, 3]])\nprint(x.shape)\nprint(x.dtype)\n\nndarray = np.ones([3, 3])\n\nprint(&quot;TensorFlow operations convert numpy arrays to Tensors automatically&quot;)\ntensor = tf.multiply(ndarray, 42)\nprint(tensor)\n\nprint(&quot;And NumPy operations convert Tensors to numpy arrays automatically&quot;)\nprint(np.add(tensor, 1))\n\nprint(&quot;The .numpy() method explicitly converts a Tensor to a numpy array&quot;)\nprint(tensor.numpy())</code></pre></div>","position":{"start":{"line":17,"column":1,"offset":271},"end":{"line":48,"column":4,"offset":978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tensorflow-save-on-gpu"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tensorflow-save-on-gpu","aria-label":"tensorflow save on gpu permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"tensorflow save on GPU","position":{"start":{"line":50,"column":5,"offset":984},"end":{"line":50,"column":27,"offset":1006}}}],"position":{"start":{"line":50,"column":1,"offset":980},"end":{"line":50,"column":27,"offset":1006}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">x = tf.random_uniform([3, 3])\n\nprint(&quot;Is there a GPU available: &quot;),\nprint(tf.test.is_gpu_available())\n\nprint(&quot;Is the Tensor on GPU #0:  &quot;),\nprint(x.device.endswith(&#39;GPU:0&#39;))</code></pre></div>","position":{"start":{"line":52,"column":1,"offset":1008},"end":{"line":61,"column":4,"offset":1190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"a-small-script-to-show-a-custom-training-using"},"children":[{"type":"element","tagName":"a","properties":{"href":"#a-small-script-to-show-a-custom-training-using","aria-label":"a small script to show a custom training using permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"A small script to show a custom training using","position":{"start":{"line":69,"column":5,"offset":1202},"end":{"line":69,"column":51,"offset":1248}}}],"position":{"start":{"line":69,"column":1,"offset":1198},"end":{"line":69,"column":52,"offset":1249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*class,  assert, plot","position":{"start":{"line":71,"column":1,"offset":1251},"end":{"line":71,"column":22,"offset":1272}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":71,"column":22,"offset":1272},"end":{"line":72,"column":1,"offset":1275}}},{"type":"text","value":"\n"},{"type":"text","value":"*variable, gradient, and loss","position":{"start":{"line":72,"column":1,"offset":1275},"end":{"line":72,"column":30,"offset":1304}}}],"position":{"start":{"line":71,"column":1,"offset":1251},"end":{"line":72,"column":30,"offset":1304}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"# Custom training: basics\n\"\"\"","position":{"start":{"line":75,"column":1,"offset":1307},"end":{"line":76,"column":4,"offset":1339}}}],"position":{"start":{"line":75,"column":1,"offset":1307},"end":{"line":76,"column":4,"offset":1339}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from ","position":{"start":{"line":78,"column":1,"offset":1341},"end":{"line":78,"column":6,"offset":1346}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"future","position":{"start":{"line":78,"column":8,"offset":1348},"end":{"line":78,"column":14,"offset":1354}}}],"position":{"start":{"line":78,"column":6,"offset":1346},"end":{"line":78,"column":16,"offset":1356}}},{"type":"text","value":" import absolute","position":{"start":{"line":78,"column":16,"offset":1356},"end":{"line":78,"column":32,"offset":1372}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"import, division, print","position":{"start":{"line":78,"column":33,"offset":1373},"end":{"line":78,"column":56,"offset":1396}}}],"position":{"start":{"line":78,"column":32,"offset":1372},"end":{"line":78,"column":57,"offset":1397}}},{"type":"text","value":"function, unicode_literals","position":{"start":{"line":78,"column":57,"offset":1397},"end":{"line":78,"column":83,"offset":1423}}}],"position":{"start":{"line":78,"column":1,"offset":1341},"end":{"line":78,"column":83,"offset":1423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import tensorflow as tf","position":{"start":{"line":80,"column":1,"offset":1425},"end":{"line":80,"column":24,"offset":1448}}}],"position":{"start":{"line":80,"column":1,"offset":1425},"end":{"line":80,"column":24,"offset":1448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"tf.enable","position":{"start":{"line":82,"column":1,"offset":1450},"end":{"line":82,"column":10,"offset":1459}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"eager","position":{"start":{"line":82,"column":11,"offset":1460},"end":{"line":82,"column":16,"offset":1465}}}],"position":{"start":{"line":82,"column":10,"offset":1459},"end":{"line":82,"column":17,"offset":1466}}},{"type":"text","value":"execution()","position":{"start":{"line":82,"column":17,"offset":1466},"end":{"line":82,"column":28,"offset":1477}}}],"position":{"start":{"line":82,"column":1,"offset":1450},"end":{"line":82,"column":28,"offset":1477}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Variables","position":{"start":{"line":84,"column":1,"offset":1479},"end":{"line":84,"column":16,"offset":1494}}}],"position":{"start":{"line":84,"column":1,"offset":1479},"end":{"line":84,"column":16,"offset":1494}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Tensors in TensorFlow are immutable stateless objects. Machine learning models, however, need to have changing state: as your model trains, the same code to compute predictions should behave differently over time (hopefully with a lower loss!). To represent this state which needs to change over the course of your computation, you can choose to rely on the fact that Python is a stateful programming language:\n\"\"\"","position":{"start":{"line":86,"column":1,"offset":1496},"end":{"line":87,"column":4,"offset":1910}}}],"position":{"start":{"line":86,"column":1,"offset":1496},"end":{"line":87,"column":4,"offset":1910}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"using-python-state"},"children":[{"type":"element","tagName":"a","properties":{"href":"#using-python-state","aria-label":"using python state permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Using python state","position":{"start":{"line":89,"column":3,"offset":1914},"end":{"line":89,"column":21,"offset":1932}}}],"position":{"start":{"line":89,"column":1,"offset":1912},"end":{"line":89,"column":21,"offset":1932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x = tf.zeros(","position":{"start":{"line":90,"column":1,"offset":1933},"end":{"line":90,"column":14,"offset":1946}}},{"type":"text","value":"[10, 10]","position":{"start":{"line":90,"column":15,"offset":1947},"end":{"line":90,"column":21,"offset":1953}}},{"type":"text","value":")\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n# value of x\nprint(x)","position":{"start":{"line":90,"column":22,"offset":1954},"end":{"line":93,"column":9,"offset":2063}}}],"position":{"start":{"line":90,"column":1,"offset":1933},"end":{"line":93,"column":9,"offset":2063}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"TensorFlow, however, has stateful operations built in, and these are often more pleasant to use than low-level Python representations of your state. To represent weights in a model, for example, it's often convenient and efficient to use TensorFlow variables.","position":{"start":{"line":95,"column":1,"offset":2065},"end":{"line":95,"column":263,"offset":2327}}}],"position":{"start":{"line":95,"column":1,"offset":2065},"end":{"line":95,"column":263,"offset":2327}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A Variable is an object which stores a value and, when used in a TensorFlow computation, will implicitly read from this stored value. There are operations (","position":{"start":{"line":97,"column":1,"offset":2329},"end":{"line":97,"column":157,"offset":2485}}},{"type":"raw","value":"<code class=\"language-text\">tf.assign_sub</code>","position":{"start":{"line":97,"column":157,"offset":2485},"end":{"line":97,"column":172,"offset":2500}}},{"type":"text","value":", ","position":{"start":{"line":97,"column":172,"offset":2500},"end":{"line":97,"column":174,"offset":2502}}},{"type":"raw","value":"<code class=\"language-text\">tf.scatter_update</code>","position":{"start":{"line":97,"column":174,"offset":2502},"end":{"line":97,"column":193,"offset":2521}}},{"type":"text","value":", etc) which manipulate the value stored in a TensorFlow variable.\n\"\"\"","position":{"start":{"line":97,"column":193,"offset":2521},"end":{"line":98,"column":4,"offset":2591}}}],"position":{"start":{"line":97,"column":1,"offset":2329},"end":{"line":98,"column":4,"offset":2591}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v = tf.Variable(1.0)\nassert v.numpy() == 1.0","position":{"start":{"line":100,"column":1,"offset":2593},"end":{"line":101,"column":24,"offset":2637}}}],"position":{"start":{"line":100,"column":1,"offset":2593},"end":{"line":101,"column":24,"offset":2637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"re-assign-the-value"},"children":[{"type":"element","tagName":"a","properties":{"href":"#re-assign-the-value","aria-label":"re assign the value permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Re-assign the value","position":{"start":{"line":103,"column":3,"offset":2641},"end":{"line":103,"column":22,"offset":2660}}}],"position":{"start":{"line":103,"column":1,"offset":2639},"end":{"line":103,"column":22,"offset":2660}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(3.0)\nassert v.numpy() == 3.0","position":{"start":{"line":104,"column":1,"offset":2661},"end":{"line":105,"column":24,"offset":2698}}}],"position":{"start":{"line":104,"column":1,"offset":2661},"end":{"line":105,"column":24,"offset":2698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"},"children":[{"type":"element","tagName":"a","properties":{"href":"#use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","aria-label":"use v in a tensorflow operation like tfsquare and reassign permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Use ","position":{"start":{"line":107,"column":3,"offset":2702},"end":{"line":107,"column":7,"offset":2706}}},{"type":"raw","value":"<code class=\"language-text\">v</code>","position":{"start":{"line":107,"column":7,"offset":2706},"end":{"line":107,"column":10,"offset":2709}}},{"type":"text","value":" in a TensorFlow operation like tf.square() and reassign","position":{"start":{"line":107,"column":10,"offset":2709},"end":{"line":107,"column":66,"offset":2765}}}],"position":{"start":{"line":107,"column":1,"offset":2700},"end":{"line":107,"column":66,"offset":2765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(tf.square(v))\nassert v.numpy() == 9.0","position":{"start":{"line":108,"column":1,"offset":2766},"end":{"line":109,"column":24,"offset":2812}}}],"position":{"start":{"line":108,"column":1,"offset":2766},"end":{"line":109,"column":24,"offset":2812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Computations using Variables are automatically traced when computing gradients. For Variables representing embeddings TensorFlow will do sparse updates by default, which are more computation and memory efficient.","position":{"start":{"line":111,"column":1,"offset":2814},"end":{"line":111,"column":216,"offset":3029}}}],"position":{"start":{"line":111,"column":1,"offset":2814},"end":{"line":111,"column":216,"offset":3029}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using Variables is also a way to quickly let a reader of your code know that this piece of state is mutable.","position":{"start":{"line":113,"column":1,"offset":3031},"end":{"line":113,"column":109,"offset":3139}}}],"position":{"start":{"line":113,"column":1,"offset":3031},"end":{"line":113,"column":109,"offset":3139}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"example-fitting-a-linear-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#example-fitting-a-linear-model","aria-label":"example fitting a linear model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Example: Fitting a linear model","position":{"start":{"line":115,"column":4,"offset":3144},"end":{"line":115,"column":35,"offset":3175}}}],"position":{"start":{"line":115,"column":1,"offset":3141},"end":{"line":115,"column":35,"offset":3175}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's now put the few concepts we have so far ---","position":{"start":{"line":117,"column":1,"offset":3177},"end":{"line":117,"column":50,"offset":3226}}},{"type":"raw","value":"<code class=\"language-text\">Tensor</code>","position":{"start":{"line":117,"column":50,"offset":3226},"end":{"line":117,"column":58,"offset":3234}}},{"type":"text","value":", ","position":{"start":{"line":117,"column":58,"offset":3234},"end":{"line":117,"column":60,"offset":3236}}},{"type":"raw","value":"<code class=\"language-text\">GradientTape</code>","position":{"start":{"line":117,"column":60,"offset":3236},"end":{"line":117,"column":74,"offset":3250}}},{"type":"text","value":", ","position":{"start":{"line":117,"column":74,"offset":3250},"end":{"line":117,"column":76,"offset":3252}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":117,"column":76,"offset":3252},"end":{"line":117,"column":86,"offset":3262}}},{"type":"text","value":" --- to build and train a simple model. This typically involves a few steps:","position":{"start":{"line":117,"column":86,"offset":3262},"end":{"line":117,"column":162,"offset":3338}}}],"position":{"start":{"line":117,"column":1,"offset":3177},"end":{"line":117,"column":162,"offset":3338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define the model.","position":{"start":{"line":119,"column":4,"offset":3343},"end":{"line":119,"column":21,"offset":3360}}}],"position":{"start":{"line":119,"column":1,"offset":3340},"end":{"line":119,"column":21,"offset":3360}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define a loss function.","position":{"start":{"line":120,"column":4,"offset":3364},"end":{"line":120,"column":27,"offset":3387}}}],"position":{"start":{"line":120,"column":1,"offset":3361},"end":{"line":120,"column":27,"offset":3387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Obtain training data.","position":{"start":{"line":121,"column":4,"offset":3391},"end":{"line":121,"column":25,"offset":3412}}}],"position":{"start":{"line":121,"column":1,"offset":3388},"end":{"line":121,"column":25,"offset":3412}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Run through the training data and use an \"optimizer\" to adjust the variables to fit the data.","position":{"start":{"line":122,"column":4,"offset":3416},"end":{"line":122,"column":97,"offset":3509}}}],"position":{"start":{"line":122,"column":1,"offset":3413},"end":{"line":122,"column":97,"offset":3509}}},{"type":"text","value":"\n"}],"position":{"start":{"line":119,"column":1,"offset":3340},"end":{"line":122,"column":97,"offset":3509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial, we'll walk through a trivial example of a simple linear model: ","position":{"start":{"line":124,"column":1,"offset":3511},"end":{"line":124,"column":82,"offset":3592}}},{"type":"raw","value":"<code class=\"language-text\">f(x) = x * W + b</code>","position":{"start":{"line":124,"column":82,"offset":3592},"end":{"line":124,"column":100,"offset":3610}}},{"type":"text","value":", which has two variables - ","position":{"start":{"line":124,"column":100,"offset":3610},"end":{"line":124,"column":128,"offset":3638}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":124,"column":128,"offset":3638},"end":{"line":124,"column":131,"offset":3641}}},{"type":"text","value":" and ","position":{"start":{"line":124,"column":131,"offset":3641},"end":{"line":124,"column":136,"offset":3646}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":124,"column":136,"offset":3646},"end":{"line":124,"column":139,"offset":3649}}},{"type":"text","value":". Furthermore, we'll synthesize data such that a well trained model would have ","position":{"start":{"line":124,"column":139,"offset":3649},"end":{"line":124,"column":218,"offset":3728}}},{"type":"raw","value":"<code class=\"language-text\">W = 3.0</code>","position":{"start":{"line":124,"column":218,"offset":3728},"end":{"line":124,"column":227,"offset":3737}}},{"type":"text","value":" and ","position":{"start":{"line":124,"column":227,"offset":3737},"end":{"line":124,"column":232,"offset":3742}}},{"type":"raw","value":"<code class=\"language-text\">b = 2.0</code>","position":{"start":{"line":124,"column":232,"offset":3742},"end":{"line":124,"column":241,"offset":3751}}},{"type":"text","value":".","position":{"start":{"line":124,"column":241,"offset":3751},"end":{"line":124,"column":242,"offset":3752}}}],"position":{"start":{"line":124,"column":1,"offset":3511},"end":{"line":124,"column":242,"offset":3752}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"define-the-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#define-the-model","aria-label":"define the model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Define the model","position":{"start":{"line":126,"column":5,"offset":3758},"end":{"line":126,"column":21,"offset":3774}}}],"position":{"start":{"line":126,"column":1,"offset":3754},"end":{"line":126,"column":21,"offset":3774}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's define a simple class to encapsulate the variables and the computation.\n\"\"\"","position":{"start":{"line":128,"column":1,"offset":3776},"end":{"line":129,"column":4,"offset":3857}}}],"position":{"start":{"line":128,"column":1,"offset":3776},"end":{"line":129,"column":4,"offset":3857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"class Model(object):\ndef ","position":{"start":{"line":131,"column":1,"offset":3859},"end":{"line":132,"column":7,"offset":3886}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"init","position":{"start":{"line":132,"column":9,"offset":3888},"end":{"line":132,"column":13,"offset":3892}}}],"position":{"start":{"line":132,"column":7,"offset":3886},"end":{"line":132,"column":15,"offset":3894}}},{"type":"text","value":"(self):\n# Initialize variable to (5.0, 0.0)\n# In practice, these should be initialized to random values.\nself.W = tf.Variable(5.0)\nself.b = tf.Variable(0.0)","position":{"start":{"line":132,"column":15,"offset":3894},"end":{"line":136,"column":30,"offset":4066}}}],"position":{"start":{"line":131,"column":1,"offset":3859},"end":{"line":136,"column":30,"offset":4066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  def ","position":{"start":{"line":138,"column":1,"offset":4068},"end":{"line":138,"column":7,"offset":4074}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"call","position":{"start":{"line":138,"column":9,"offset":4076},"end":{"line":138,"column":13,"offset":4080}}}],"position":{"start":{"line":138,"column":7,"offset":4074},"end":{"line":138,"column":15,"offset":4082}}},{"type":"text","value":"(self, x):\nreturn self.W * x + self.b","position":{"start":{"line":138,"column":15,"offset":4082},"end":{"line":139,"column":31,"offset":4123}}}],"position":{"start":{"line":138,"column":1,"offset":4068},"end":{"line":139,"column":31,"offset":4123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":141,"column":1,"offset":4125},"end":{"line":141,"column":16,"offset":4140}}}],"position":{"start":{"line":141,"column":1,"offset":4125},"end":{"line":141,"column":16,"offset":4140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"assert model(3.0).numpy() == 15.0","position":{"start":{"line":143,"column":1,"offset":4142},"end":{"line":143,"column":34,"offset":4175}}}],"position":{"start":{"line":143,"column":1,"offset":4142},"end":{"line":143,"column":34,"offset":4175}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a loss function","position":{"start":{"line":145,"column":1,"offset":4177},"end":{"line":145,"column":30,"offset":4206}}}],"position":{"start":{"line":145,"column":1,"offset":4177},"end":{"line":145,"column":30,"offset":4206}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A loss function measures how well the output of a model for a given input matches the desired output. Let's use the standard L2 loss.\n\"\"\"","position":{"start":{"line":147,"column":1,"offset":4208},"end":{"line":148,"column":4,"offset":4345}}}],"position":{"start":{"line":147,"column":1,"offset":4208},"end":{"line":148,"column":4,"offset":4345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def loss(predicted","position":{"start":{"line":150,"column":1,"offset":4347},"end":{"line":150,"column":19,"offset":4365}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"y, desired","position":{"start":{"line":150,"column":20,"offset":4366},"end":{"line":150,"column":30,"offset":4376}}}],"position":{"start":{"line":150,"column":19,"offset":4365},"end":{"line":150,"column":31,"offset":4377}}},{"type":"text","value":"y):\nreturn tf.reduce","position":{"start":{"line":150,"column":31,"offset":4377},"end":{"line":151,"column":19,"offset":4399}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"mean(tf.square(predicted","position":{"start":{"line":151,"column":20,"offset":4400},"end":{"line":151,"column":44,"offset":4424}}}],"position":{"start":{"line":151,"column":19,"offset":4399},"end":{"line":151,"column":45,"offset":4425}}},{"type":"text","value":"y - desired_y))","position":{"start":{"line":151,"column":45,"offset":4425},"end":{"line":151,"column":60,"offset":4440}}}],"position":{"start":{"line":150,"column":1,"offset":4347},"end":{"line":151,"column":60,"offset":4440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Obtain training data","position":{"start":{"line":153,"column":1,"offset":4442},"end":{"line":153,"column":28,"offset":4469}}}],"position":{"start":{"line":153,"column":1,"offset":4442},"end":{"line":153,"column":28,"offset":4469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's synthesize the training data with some noise.\n\"\"\"","position":{"start":{"line":155,"column":1,"offset":4471},"end":{"line":156,"column":4,"offset":4526}}}],"position":{"start":{"line":155,"column":1,"offset":4471},"end":{"line":156,"column":4,"offset":4526}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"TRUE","position":{"start":{"line":158,"column":1,"offset":4528},"end":{"line":158,"column":5,"offset":4532}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W = 3.0\nTRUE","position":{"start":{"line":158,"column":6,"offset":4533},"end":{"line":159,"column":5,"offset":4545}}}],"position":{"start":{"line":158,"column":5,"offset":4532},"end":{"line":159,"column":6,"offset":4546}}},{"type":"text","value":"b = 2.0\nNUM_EXAMPLES = 1000","position":{"start":{"line":159,"column":6,"offset":4546},"end":{"line":160,"column":20,"offset":4573}}}],"position":{"start":{"line":158,"column":1,"offset":4528},"end":{"line":160,"column":20,"offset":4573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"inputs  = tf.random","position":{"start":{"line":162,"column":1,"offset":4575},"end":{"line":162,"column":20,"offset":4594}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":162,"column":21,"offset":4595},"end":{"line":162,"column":38,"offset":4612}}}],"position":{"start":{"line":162,"column":20,"offset":4594},"end":{"line":162,"column":39,"offset":4613}}},{"type":"text","value":"EXAMPLES])\nnoise   = tf.random","position":{"start":{"line":162,"column":39,"offset":4613},"end":{"line":163,"column":20,"offset":4643}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":163,"column":21,"offset":4644},"end":{"line":163,"column":38,"offset":4661}}}],"position":{"start":{"line":163,"column":20,"offset":4643},"end":{"line":163,"column":39,"offset":4662}}},{"type":"text","value":"EXAMPLES])\noutputs = inputs * TRUE","position":{"start":{"line":163,"column":39,"offset":4662},"end":{"line":164,"column":24,"offset":4696}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W + TRUE","position":{"start":{"line":164,"column":25,"offset":4697},"end":{"line":164,"column":33,"offset":4705}}}],"position":{"start":{"line":164,"column":24,"offset":4696},"end":{"line":164,"column":34,"offset":4706}}},{"type":"text","value":"b + noise","position":{"start":{"line":164,"column":34,"offset":4706},"end":{"line":164,"column":43,"offset":4715}}}],"position":{"start":{"line":162,"column":1,"offset":4575},"end":{"line":164,"column":43,"offset":4715}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Before we train the model let's visualize where the model stands right now. We'll plot the model's predictions in red and the training data in blue.\"\"\"","position":{"start":{"line":166,"column":1,"offset":4717},"end":{"line":166,"column":155,"offset":4871}}}],"position":{"start":{"line":166,"column":1,"offset":4717},"end":{"line":166,"column":155,"offset":4871}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import matplotlib.pyplot as plt","position":{"start":{"line":168,"column":1,"offset":4873},"end":{"line":168,"column":32,"offset":4904}}}],"position":{"start":{"line":168,"column":1,"offset":4873},"end":{"line":168,"column":32,"offset":4904}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.scatter(inputs, outputs, c='b')\nplt.scatter(inputs, model(inputs), c='r')\nplt.show()","position":{"start":{"line":170,"column":1,"offset":4906},"end":{"line":172,"column":11,"offset":4994}}}],"position":{"start":{"line":170,"column":1,"offset":4906},"end":{"line":172,"column":11,"offset":4994}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print('Current loss: '),\nprint(loss(model(inputs), outputs).numpy())","position":{"start":{"line":174,"column":1,"offset":4996},"end":{"line":175,"column":44,"offset":5064}}}],"position":{"start":{"line":174,"column":1,"offset":4996},"end":{"line":175,"column":44,"offset":5064}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a training loop","position":{"start":{"line":177,"column":1,"offset":5066},"end":{"line":177,"column":30,"offset":5095}}}],"position":{"start":{"line":177,"column":1,"offset":5066},"end":{"line":177,"column":30,"offset":5095}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We now have our network and our training data. Let's train it, i.e., use the training data to update the model's variables (","position":{"start":{"line":179,"column":1,"offset":5097},"end":{"line":179,"column":125,"offset":5221}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":179,"column":125,"offset":5221},"end":{"line":179,"column":128,"offset":5224}}},{"type":"text","value":" and ","position":{"start":{"line":179,"column":128,"offset":5224},"end":{"line":179,"column":133,"offset":5229}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":179,"column":133,"offset":5229},"end":{"line":179,"column":136,"offset":5232}}},{"type":"text","value":") so that the loss goes down using ","position":{"start":{"line":179,"column":136,"offset":5232},"end":{"line":179,"column":171,"offset":5267}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Gradient_descent","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"gradient descent","position":{"start":{"line":179,"column":172,"offset":5268},"end":{"line":179,"column":188,"offset":5284}}}],"position":{"start":{"line":179,"column":171,"offset":5267},"end":{"line":179,"column":237,"offset":5333}}},{"type":"text","value":". There are many variants of the gradient descent scheme that are captured in ","position":{"start":{"line":179,"column":237,"offset":5333},"end":{"line":179,"column":315,"offset":5411}}},{"type":"raw","value":"<code class=\"language-text\">tf.train.Optimizer</code>","position":{"start":{"line":179,"column":315,"offset":5411},"end":{"line":179,"column":335,"offset":5431}}},{"type":"text","value":" implementations. We'd highly recommend using those implementations, but in the spirit of building from first principles, in this particular example we will implement the basic math ourselves.\n\"\"\"","position":{"start":{"line":179,"column":335,"offset":5431},"end":{"line":180,"column":4,"offset":5627}}}],"position":{"start":{"line":179,"column":1,"offset":5097},"end":{"line":180,"column":4,"offset":5627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def train(model, inputs, outputs, learning","position":{"start":{"line":182,"column":1,"offset":5629},"end":{"line":182,"column":43,"offset":5671}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate):\nwith tf.GradientTape() as t:\ncurrent","position":{"start":{"line":182,"column":44,"offset":5672},"end":{"line":184,"column":12,"offset":5721}}}],"position":{"start":{"line":182,"column":43,"offset":5671},"end":{"line":184,"column":13,"offset":5722}}},{"type":"text","value":"loss = loss(model(inputs), outputs)\ndW, db = t.gradient(current","position":{"start":{"line":184,"column":13,"offset":5722},"end":{"line":185,"column":30,"offset":5787}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"loss, ","position":{"start":{"line":185,"column":31,"offset":5788},"end":{"line":185,"column":37,"offset":5794}}},{"type":"text","value":"[model.W, model.b]","position":{"start":{"line":185,"column":38,"offset":5795},"end":{"line":185,"column":54,"offset":5811}}},{"type":"text","value":")\nmodel.W.assign","position":{"start":{"line":185,"column":55,"offset":5812},"end":{"line":186,"column":17,"offset":5830}}}],"position":{"start":{"line":185,"column":30,"offset":5787},"end":{"line":186,"column":18,"offset":5831}}},{"type":"text","value":"sub(learning","position":{"start":{"line":186,"column":18,"offset":5831},"end":{"line":186,"column":30,"offset":5843}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate * dW)\nmodel.b.assign","position":{"start":{"line":186,"column":31,"offset":5844},"end":{"line":187,"column":17,"offset":5871}}}],"position":{"start":{"line":186,"column":30,"offset":5843},"end":{"line":187,"column":18,"offset":5872}}},{"type":"text","value":"sub(learning_rate * db)","position":{"start":{"line":187,"column":18,"offset":5872},"end":{"line":187,"column":41,"offset":5895}}}],"position":{"start":{"line":182,"column":1,"offset":5629},"end":{"line":187,"column":41,"offset":5895}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Finally, let's repeatedly run through the training data and see how ","position":{"start":{"line":189,"column":1,"offset":5897},"end":{"line":189,"column":72,"offset":5968}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":189,"column":72,"offset":5968},"end":{"line":189,"column":75,"offset":5971}}},{"type":"text","value":" and ","position":{"start":{"line":189,"column":75,"offset":5971},"end":{"line":189,"column":80,"offset":5976}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":189,"column":80,"offset":5976},"end":{"line":189,"column":83,"offset":5979}}},{"type":"text","value":" evolve.\"\"\"","position":{"start":{"line":189,"column":83,"offset":5979},"end":{"line":189,"column":94,"offset":5990}}}],"position":{"start":{"line":189,"column":1,"offset":5897},"end":{"line":189,"column":94,"offset":5990}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":191,"column":1,"offset":5992},"end":{"line":191,"column":16,"offset":6007}}}],"position":{"start":{"line":191,"column":1,"offset":5992},"end":{"line":191,"column":16,"offset":6007}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"},"children":[{"type":"element","tagName":"a","properties":{"href":"#collect-the-history-of-w-values-and-b-values-to-plot-later","aria-label":"collect the history of w values and b values to plot later permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Collect the history of W-values and b-values to plot later","position":{"start":{"line":193,"column":3,"offset":6011},"end":{"line":193,"column":61,"offset":6069}}}],"position":{"start":{"line":193,"column":1,"offset":6009},"end":{"line":193,"column":61,"offset":6069}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ws, bs = [], []\nepochs = range(10)\nfor epoch in epochs:\nWs.append(model.W.numpy())\nbs.append(model.b.numpy())\ncurrent_loss = loss(model(inputs), outputs)","position":{"start":{"line":194,"column":1,"offset":6070},"end":{"line":199,"column":46,"offset":6229}}}],"position":{"start":{"line":194,"column":1,"offset":6070},"end":{"line":199,"column":46,"offset":6229}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  train(model, inputs, outputs, learning","position":{"start":{"line":201,"column":1,"offset":6231},"end":{"line":201,"column":41,"offset":6271}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate=0.1)\nprint('Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f' %\n(epoch, Ws","position":{"start":{"line":201,"column":42,"offset":6272},"end":{"line":203,"column":19,"offset":6351}}},{"type":"text","value":"[-1]","position":{"start":{"line":203,"column":20,"offset":6352},"end":{"line":203,"column":22,"offset":6354}}},{"type":"text","value":", bs","position":{"start":{"line":203,"column":23,"offset":6355},"end":{"line":203,"column":27,"offset":6359}}},{"type":"text","value":"[-1]","position":{"start":{"line":203,"column":28,"offset":6360},"end":{"line":203,"column":30,"offset":6362}}},{"type":"text","value":", current","position":{"start":{"line":203,"column":31,"offset":6363},"end":{"line":203,"column":40,"offset":6372}}}],"position":{"start":{"line":201,"column":41,"offset":6271},"end":{"line":203,"column":41,"offset":6373}}},{"type":"text","value":"loss))","position":{"start":{"line":203,"column":41,"offset":6373},"end":{"line":203,"column":47,"offset":6379}}}],"position":{"start":{"line":201,"column":1,"offset":6231},"end":{"line":203,"column":47,"offset":6379}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"lets-plot-it-all"},"children":[{"type":"element","tagName":"a","properties":{"href":"#lets-plot-it-all","aria-label":"lets plot it all permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Let's plot it all","position":{"start":{"line":205,"column":3,"offset":6383},"end":{"line":205,"column":20,"offset":6400}}}],"position":{"start":{"line":205,"column":1,"offset":6381},"end":{"line":205,"column":20,"offset":6400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.plot(epochs, Ws, 'r',\nepochs, bs, 'b')\nplt.plot(","position":{"start":{"line":206,"column":1,"offset":6401},"end":{"line":208,"column":10,"offset":6462}}},{"type":"text","value":"[TRUE_W]","position":{"start":{"line":208,"column":11,"offset":6463},"end":{"line":208,"column":17,"offset":6469}}},{"type":"text","value":" * len(epochs), 'r--',\n","position":{"start":{"line":208,"column":18,"offset":6470},"end":{"line":209,"column":10,"offset":6502}}},{"type":"text","value":"[TRUE_b]","position":{"start":{"line":209,"column":11,"offset":6503},"end":{"line":209,"column":17,"offset":6509}}},{"type":"text","value":" * len(epochs), 'b--')\nplt.legend(","position":{"start":{"line":209,"column":18,"offset":6510},"end":{"line":210,"column":12,"offset":6544}}},{"type":"text","value":"['W', 'b', 'true W', 'true_b']","position":{"start":{"line":210,"column":13,"offset":6545},"end":{"line":210,"column":41,"offset":6573}}},{"type":"text","value":")\nplt.show()","position":{"start":{"line":210,"column":42,"offset":6574},"end":{"line":211,"column":11,"offset":6586}}}],"position":{"start":{"line":206,"column":1,"offset":6401},"end":{"line":211,"column":11,"offset":6586}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Next Steps","position":{"start":{"line":213,"column":1,"offset":6588},"end":{"line":213,"column":17,"offset":6604}}}],"position":{"start":{"line":213,"column":1,"offset":6588},"end":{"line":213,"column":17,"offset":6604}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial we covered ","position":{"start":{"line":215,"column":1,"offset":6606},"end":{"line":215,"column":29,"offset":6634}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":215,"column":29,"offset":6634},"end":{"line":215,"column":39,"offset":6644}}},{"type":"text","value":"s and built and trained a simple linear model using the TensorFlow primitives discussed so far.","position":{"start":{"line":215,"column":39,"offset":6644},"end":{"line":215,"column":134,"offset":6739}}}],"position":{"start":{"line":215,"column":1,"offset":6606},"end":{"line":215,"column":134,"offset":6739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In theory, this is pretty much all you need to use TensorFlow for your machine learning research.\nIn practice, particularly for neural networks, the higher level APIs like ","position":{"start":{"line":217,"column":1,"offset":6741},"end":{"line":218,"column":75,"offset":6913}}},{"type":"raw","value":"<code class=\"language-text\">tf.keras</code>","position":{"start":{"line":218,"column":75,"offset":6913},"end":{"line":218,"column":85,"offset":6923}}},{"type":"text","value":" will be much more convenient since it provides higher level building blocks (called \"layers\"), utilities to save and restore state, a suite of loss functions, a suite of optimization strategies etc.\n\"\"\"","position":{"start":{"line":218,"column":85,"offset":6923},"end":{"line":219,"column":4,"offset":7126}}}],"position":{"start":{"line":217,"column":1,"offset":6741},"end":{"line":219,"column":4,"offset":7126}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":221,"column":1,"offset":7128},"end":{"line":225,"column":1,"offset":7135}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":225,"column":1,"offset":7135}}}}