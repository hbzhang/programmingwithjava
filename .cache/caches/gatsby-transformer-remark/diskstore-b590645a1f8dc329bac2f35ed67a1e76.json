{"expireTime":9007200813383556000,"key":"transformer-remark-markdown-html-ast-c8906ec31acec0b041e6bf3a61c8abab-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"basic-operations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#basic-operations","aria-label":"basic operations permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Basic Operations","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":20,"offset":19}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initilize-tensors"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initilize-tensors","aria-label":"initilize tensors permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"initilize tensors","position":{"start":{"line":3,"column":5,"offset":25},"end":{"line":3,"column":22,"offset":42}}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":23,"offset":43}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(10,10) array with zero elements","position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}}],"position":{"start":{"line":5,"column":1,"offset":45},"end":{"line":5,"column":33,"offset":77}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Using python state\nx = tf.zeros([10, 10])\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n        # value of x\nprint(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":79},"end":{"line":13,"column":4,"offset":238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"a-small-script-to-show-a-custom-training-using"},"children":[{"type":"element","tagName":"a","properties":{"href":"#a-small-script-to-show-a-custom-training-using","aria-label":"a small script to show a custom training using permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"A small script to show a custom training using","position":{"start":{"line":22,"column":5,"offset":251},"end":{"line":22,"column":51,"offset":297}}}],"position":{"start":{"line":22,"column":1,"offset":247},"end":{"line":22,"column":52,"offset":298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*class,  assert, plot","position":{"start":{"line":24,"column":1,"offset":300},"end":{"line":24,"column":22,"offset":321}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":24,"column":22,"offset":321},"end":{"line":25,"column":1,"offset":324}}},{"type":"text","value":"\n"},{"type":"text","value":"*variable, gradient, and loss","position":{"start":{"line":25,"column":1,"offset":324},"end":{"line":25,"column":30,"offset":353}}}],"position":{"start":{"line":24,"column":1,"offset":300},"end":{"line":25,"column":30,"offset":353}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"# Custom training: basics\n\"\"\"","position":{"start":{"line":28,"column":1,"offset":356},"end":{"line":29,"column":4,"offset":388}}}],"position":{"start":{"line":28,"column":1,"offset":356},"end":{"line":29,"column":4,"offset":388}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from ","position":{"start":{"line":31,"column":1,"offset":390},"end":{"line":31,"column":6,"offset":395}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"future","position":{"start":{"line":31,"column":8,"offset":397},"end":{"line":31,"column":14,"offset":403}}}],"position":{"start":{"line":31,"column":6,"offset":395},"end":{"line":31,"column":16,"offset":405}}},{"type":"text","value":" import absolute","position":{"start":{"line":31,"column":16,"offset":405},"end":{"line":31,"column":32,"offset":421}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"import, division, print","position":{"start":{"line":31,"column":33,"offset":422},"end":{"line":31,"column":56,"offset":445}}}],"position":{"start":{"line":31,"column":32,"offset":421},"end":{"line":31,"column":57,"offset":446}}},{"type":"text","value":"function, unicode_literals","position":{"start":{"line":31,"column":57,"offset":446},"end":{"line":31,"column":83,"offset":472}}}],"position":{"start":{"line":31,"column":1,"offset":390},"end":{"line":31,"column":83,"offset":472}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import tensorflow as tf","position":{"start":{"line":33,"column":1,"offset":474},"end":{"line":33,"column":24,"offset":497}}}],"position":{"start":{"line":33,"column":1,"offset":474},"end":{"line":33,"column":24,"offset":497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"tf.enable","position":{"start":{"line":35,"column":1,"offset":499},"end":{"line":35,"column":10,"offset":508}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"eager","position":{"start":{"line":35,"column":11,"offset":509},"end":{"line":35,"column":16,"offset":514}}}],"position":{"start":{"line":35,"column":10,"offset":508},"end":{"line":35,"column":17,"offset":515}}},{"type":"text","value":"execution()","position":{"start":{"line":35,"column":17,"offset":515},"end":{"line":35,"column":28,"offset":526}}}],"position":{"start":{"line":35,"column":1,"offset":499},"end":{"line":35,"column":28,"offset":526}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Variables","position":{"start":{"line":37,"column":1,"offset":528},"end":{"line":37,"column":16,"offset":543}}}],"position":{"start":{"line":37,"column":1,"offset":528},"end":{"line":37,"column":16,"offset":543}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Tensors in TensorFlow are immutable stateless objects. Machine learning models, however, need to have changing state: as your model trains, the same code to compute predictions should behave differently over time (hopefully with a lower loss!). To represent this state which needs to change over the course of your computation, you can choose to rely on the fact that Python is a stateful programming language:\n\"\"\"","position":{"start":{"line":39,"column":1,"offset":545},"end":{"line":40,"column":4,"offset":959}}}],"position":{"start":{"line":39,"column":1,"offset":545},"end":{"line":40,"column":4,"offset":959}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"using-python-state"},"children":[{"type":"element","tagName":"a","properties":{"href":"#using-python-state","aria-label":"using python state permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Using python state","position":{"start":{"line":42,"column":3,"offset":963},"end":{"line":42,"column":21,"offset":981}}}],"position":{"start":{"line":42,"column":1,"offset":961},"end":{"line":42,"column":21,"offset":981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x = tf.zeros(","position":{"start":{"line":43,"column":1,"offset":982},"end":{"line":43,"column":14,"offset":995}}},{"type":"text","value":"[10, 10]","position":{"start":{"line":43,"column":15,"offset":996},"end":{"line":43,"column":21,"offset":1002}}},{"type":"text","value":")\nx += 2  # This is equivalent to x = x + 2, which does not mutate the original\n# value of x\nprint(x)","position":{"start":{"line":43,"column":22,"offset":1003},"end":{"line":46,"column":9,"offset":1112}}}],"position":{"start":{"line":43,"column":1,"offset":982},"end":{"line":46,"column":9,"offset":1112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"TensorFlow, however, has stateful operations built in, and these are often more pleasant to use than low-level Python representations of your state. To represent weights in a model, for example, it's often convenient and efficient to use TensorFlow variables.","position":{"start":{"line":48,"column":1,"offset":1114},"end":{"line":48,"column":263,"offset":1376}}}],"position":{"start":{"line":48,"column":1,"offset":1114},"end":{"line":48,"column":263,"offset":1376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A Variable is an object which stores a value and, when used in a TensorFlow computation, will implicitly read from this stored value. There are operations (","position":{"start":{"line":50,"column":1,"offset":1378},"end":{"line":50,"column":157,"offset":1534}}},{"type":"raw","value":"<code class=\"language-text\">tf.assign_sub</code>","position":{"start":{"line":50,"column":157,"offset":1534},"end":{"line":50,"column":172,"offset":1549}}},{"type":"text","value":", ","position":{"start":{"line":50,"column":172,"offset":1549},"end":{"line":50,"column":174,"offset":1551}}},{"type":"raw","value":"<code class=\"language-text\">tf.scatter_update</code>","position":{"start":{"line":50,"column":174,"offset":1551},"end":{"line":50,"column":193,"offset":1570}}},{"type":"text","value":", etc) which manipulate the value stored in a TensorFlow variable.\n\"\"\"","position":{"start":{"line":50,"column":193,"offset":1570},"end":{"line":51,"column":4,"offset":1640}}}],"position":{"start":{"line":50,"column":1,"offset":1378},"end":{"line":51,"column":4,"offset":1640}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v = tf.Variable(1.0)\nassert v.numpy() == 1.0","position":{"start":{"line":53,"column":1,"offset":1642},"end":{"line":54,"column":24,"offset":1686}}}],"position":{"start":{"line":53,"column":1,"offset":1642},"end":{"line":54,"column":24,"offset":1686}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"re-assign-the-value"},"children":[{"type":"element","tagName":"a","properties":{"href":"#re-assign-the-value","aria-label":"re assign the value permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Re-assign the value","position":{"start":{"line":56,"column":3,"offset":1690},"end":{"line":56,"column":22,"offset":1709}}}],"position":{"start":{"line":56,"column":1,"offset":1688},"end":{"line":56,"column":22,"offset":1709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(3.0)\nassert v.numpy() == 3.0","position":{"start":{"line":57,"column":1,"offset":1710},"end":{"line":58,"column":24,"offset":1747}}}],"position":{"start":{"line":57,"column":1,"offset":1710},"end":{"line":58,"column":24,"offset":1747}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign"},"children":[{"type":"element","tagName":"a","properties":{"href":"#use-v-in-a-tensorflow-operation-like-tfsquare-and-reassign","aria-label":"use v in a tensorflow operation like tfsquare and reassign permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Use ","position":{"start":{"line":60,"column":3,"offset":1751},"end":{"line":60,"column":7,"offset":1755}}},{"type":"raw","value":"<code class=\"language-text\">v</code>","position":{"start":{"line":60,"column":7,"offset":1755},"end":{"line":60,"column":10,"offset":1758}}},{"type":"text","value":" in a TensorFlow operation like tf.square() and reassign","position":{"start":{"line":60,"column":10,"offset":1758},"end":{"line":60,"column":66,"offset":1814}}}],"position":{"start":{"line":60,"column":1,"offset":1749},"end":{"line":60,"column":66,"offset":1814}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"v.assign(tf.square(v))\nassert v.numpy() == 9.0","position":{"start":{"line":61,"column":1,"offset":1815},"end":{"line":62,"column":24,"offset":1861}}}],"position":{"start":{"line":61,"column":1,"offset":1815},"end":{"line":62,"column":24,"offset":1861}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Computations using Variables are automatically traced when computing gradients. For Variables representing embeddings TensorFlow will do sparse updates by default, which are more computation and memory efficient.","position":{"start":{"line":64,"column":1,"offset":1863},"end":{"line":64,"column":216,"offset":2078}}}],"position":{"start":{"line":64,"column":1,"offset":1863},"end":{"line":64,"column":216,"offset":2078}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using Variables is also a way to quickly let a reader of your code know that this piece of state is mutable.","position":{"start":{"line":66,"column":1,"offset":2080},"end":{"line":66,"column":109,"offset":2188}}}],"position":{"start":{"line":66,"column":1,"offset":2080},"end":{"line":66,"column":109,"offset":2188}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"example-fitting-a-linear-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#example-fitting-a-linear-model","aria-label":"example fitting a linear model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Example: Fitting a linear model","position":{"start":{"line":68,"column":4,"offset":2193},"end":{"line":68,"column":35,"offset":2224}}}],"position":{"start":{"line":68,"column":1,"offset":2190},"end":{"line":68,"column":35,"offset":2224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's now put the few concepts we have so far ---","position":{"start":{"line":70,"column":1,"offset":2226},"end":{"line":70,"column":50,"offset":2275}}},{"type":"raw","value":"<code class=\"language-text\">Tensor</code>","position":{"start":{"line":70,"column":50,"offset":2275},"end":{"line":70,"column":58,"offset":2283}}},{"type":"text","value":", ","position":{"start":{"line":70,"column":58,"offset":2283},"end":{"line":70,"column":60,"offset":2285}}},{"type":"raw","value":"<code class=\"language-text\">GradientTape</code>","position":{"start":{"line":70,"column":60,"offset":2285},"end":{"line":70,"column":74,"offset":2299}}},{"type":"text","value":", ","position":{"start":{"line":70,"column":74,"offset":2299},"end":{"line":70,"column":76,"offset":2301}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":70,"column":76,"offset":2301},"end":{"line":70,"column":86,"offset":2311}}},{"type":"text","value":" --- to build and train a simple model. This typically involves a few steps:","position":{"start":{"line":70,"column":86,"offset":2311},"end":{"line":70,"column":162,"offset":2387}}}],"position":{"start":{"line":70,"column":1,"offset":2226},"end":{"line":70,"column":162,"offset":2387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define the model.","position":{"start":{"line":72,"column":4,"offset":2392},"end":{"line":72,"column":21,"offset":2409}}}],"position":{"start":{"line":72,"column":1,"offset":2389},"end":{"line":72,"column":21,"offset":2409}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Define a loss function.","position":{"start":{"line":73,"column":4,"offset":2413},"end":{"line":73,"column":27,"offset":2436}}}],"position":{"start":{"line":73,"column":1,"offset":2410},"end":{"line":73,"column":27,"offset":2436}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Obtain training data.","position":{"start":{"line":74,"column":4,"offset":2440},"end":{"line":74,"column":25,"offset":2461}}}],"position":{"start":{"line":74,"column":1,"offset":2437},"end":{"line":74,"column":25,"offset":2461}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Run through the training data and use an \"optimizer\" to adjust the variables to fit the data.","position":{"start":{"line":75,"column":4,"offset":2465},"end":{"line":75,"column":97,"offset":2558}}}],"position":{"start":{"line":75,"column":1,"offset":2462},"end":{"line":75,"column":97,"offset":2558}}},{"type":"text","value":"\n"}],"position":{"start":{"line":72,"column":1,"offset":2389},"end":{"line":75,"column":97,"offset":2558}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial, we'll walk through a trivial example of a simple linear model: ","position":{"start":{"line":77,"column":1,"offset":2560},"end":{"line":77,"column":82,"offset":2641}}},{"type":"raw","value":"<code class=\"language-text\">f(x) = x * W + b</code>","position":{"start":{"line":77,"column":82,"offset":2641},"end":{"line":77,"column":100,"offset":2659}}},{"type":"text","value":", which has two variables - ","position":{"start":{"line":77,"column":100,"offset":2659},"end":{"line":77,"column":128,"offset":2687}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":77,"column":128,"offset":2687},"end":{"line":77,"column":131,"offset":2690}}},{"type":"text","value":" and ","position":{"start":{"line":77,"column":131,"offset":2690},"end":{"line":77,"column":136,"offset":2695}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":77,"column":136,"offset":2695},"end":{"line":77,"column":139,"offset":2698}}},{"type":"text","value":". Furthermore, we'll synthesize data such that a well trained model would have ","position":{"start":{"line":77,"column":139,"offset":2698},"end":{"line":77,"column":218,"offset":2777}}},{"type":"raw","value":"<code class=\"language-text\">W = 3.0</code>","position":{"start":{"line":77,"column":218,"offset":2777},"end":{"line":77,"column":227,"offset":2786}}},{"type":"text","value":" and ","position":{"start":{"line":77,"column":227,"offset":2786},"end":{"line":77,"column":232,"offset":2791}}},{"type":"raw","value":"<code class=\"language-text\">b = 2.0</code>","position":{"start":{"line":77,"column":232,"offset":2791},"end":{"line":77,"column":241,"offset":2800}}},{"type":"text","value":".","position":{"start":{"line":77,"column":241,"offset":2800},"end":{"line":77,"column":242,"offset":2801}}}],"position":{"start":{"line":77,"column":1,"offset":2560},"end":{"line":77,"column":242,"offset":2801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"define-the-model"},"children":[{"type":"element","tagName":"a","properties":{"href":"#define-the-model","aria-label":"define the model permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Define the model","position":{"start":{"line":79,"column":5,"offset":2807},"end":{"line":79,"column":21,"offset":2823}}}],"position":{"start":{"line":79,"column":1,"offset":2803},"end":{"line":79,"column":21,"offset":2823}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's define a simple class to encapsulate the variables and the computation.\n\"\"\"","position":{"start":{"line":81,"column":1,"offset":2825},"end":{"line":82,"column":4,"offset":2906}}}],"position":{"start":{"line":81,"column":1,"offset":2825},"end":{"line":82,"column":4,"offset":2906}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"class Model(object):\ndef ","position":{"start":{"line":84,"column":1,"offset":2908},"end":{"line":85,"column":7,"offset":2935}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"init","position":{"start":{"line":85,"column":9,"offset":2937},"end":{"line":85,"column":13,"offset":2941}}}],"position":{"start":{"line":85,"column":7,"offset":2935},"end":{"line":85,"column":15,"offset":2943}}},{"type":"text","value":"(self):\n# Initialize variable to (5.0, 0.0)\n# In practice, these should be initialized to random values.\nself.W = tf.Variable(5.0)\nself.b = tf.Variable(0.0)","position":{"start":{"line":85,"column":15,"offset":2943},"end":{"line":89,"column":30,"offset":3115}}}],"position":{"start":{"line":84,"column":1,"offset":2908},"end":{"line":89,"column":30,"offset":3115}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  def ","position":{"start":{"line":91,"column":1,"offset":3117},"end":{"line":91,"column":7,"offset":3123}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"call","position":{"start":{"line":91,"column":9,"offset":3125},"end":{"line":91,"column":13,"offset":3129}}}],"position":{"start":{"line":91,"column":7,"offset":3123},"end":{"line":91,"column":15,"offset":3131}}},{"type":"text","value":"(self, x):\nreturn self.W * x + self.b","position":{"start":{"line":91,"column":15,"offset":3131},"end":{"line":92,"column":31,"offset":3172}}}],"position":{"start":{"line":91,"column":1,"offset":3117},"end":{"line":92,"column":31,"offset":3172}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":94,"column":1,"offset":3174},"end":{"line":94,"column":16,"offset":3189}}}],"position":{"start":{"line":94,"column":1,"offset":3174},"end":{"line":94,"column":16,"offset":3189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"assert model(3.0).numpy() == 15.0","position":{"start":{"line":96,"column":1,"offset":3191},"end":{"line":96,"column":34,"offset":3224}}}],"position":{"start":{"line":96,"column":1,"offset":3191},"end":{"line":96,"column":34,"offset":3224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a loss function","position":{"start":{"line":98,"column":1,"offset":3226},"end":{"line":98,"column":30,"offset":3255}}}],"position":{"start":{"line":98,"column":1,"offset":3226},"end":{"line":98,"column":30,"offset":3255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A loss function measures how well the output of a model for a given input matches the desired output. Let's use the standard L2 loss.\n\"\"\"","position":{"start":{"line":100,"column":1,"offset":3257},"end":{"line":101,"column":4,"offset":3394}}}],"position":{"start":{"line":100,"column":1,"offset":3257},"end":{"line":101,"column":4,"offset":3394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def loss(predicted","position":{"start":{"line":103,"column":1,"offset":3396},"end":{"line":103,"column":19,"offset":3414}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"y, desired","position":{"start":{"line":103,"column":20,"offset":3415},"end":{"line":103,"column":30,"offset":3425}}}],"position":{"start":{"line":103,"column":19,"offset":3414},"end":{"line":103,"column":31,"offset":3426}}},{"type":"text","value":"y):\nreturn tf.reduce","position":{"start":{"line":103,"column":31,"offset":3426},"end":{"line":104,"column":19,"offset":3448}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"mean(tf.square(predicted","position":{"start":{"line":104,"column":20,"offset":3449},"end":{"line":104,"column":44,"offset":3473}}}],"position":{"start":{"line":104,"column":19,"offset":3448},"end":{"line":104,"column":45,"offset":3474}}},{"type":"text","value":"y - desired_y))","position":{"start":{"line":104,"column":45,"offset":3474},"end":{"line":104,"column":60,"offset":3489}}}],"position":{"start":{"line":103,"column":1,"offset":3396},"end":{"line":104,"column":60,"offset":3489}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Obtain training data","position":{"start":{"line":106,"column":1,"offset":3491},"end":{"line":106,"column":28,"offset":3518}}}],"position":{"start":{"line":106,"column":1,"offset":3491},"end":{"line":106,"column":28,"offset":3518}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's synthesize the training data with some noise.\n\"\"\"","position":{"start":{"line":108,"column":1,"offset":3520},"end":{"line":109,"column":4,"offset":3575}}}],"position":{"start":{"line":108,"column":1,"offset":3520},"end":{"line":109,"column":4,"offset":3575}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"TRUE","position":{"start":{"line":111,"column":1,"offset":3577},"end":{"line":111,"column":5,"offset":3581}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W = 3.0\nTRUE","position":{"start":{"line":111,"column":6,"offset":3582},"end":{"line":112,"column":5,"offset":3594}}}],"position":{"start":{"line":111,"column":5,"offset":3581},"end":{"line":112,"column":6,"offset":3595}}},{"type":"text","value":"b = 2.0\nNUM_EXAMPLES = 1000","position":{"start":{"line":112,"column":6,"offset":3595},"end":{"line":113,"column":20,"offset":3622}}}],"position":{"start":{"line":111,"column":1,"offset":3577},"end":{"line":113,"column":20,"offset":3622}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"inputs  = tf.random","position":{"start":{"line":115,"column":1,"offset":3624},"end":{"line":115,"column":20,"offset":3643}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":115,"column":21,"offset":3644},"end":{"line":115,"column":38,"offset":3661}}}],"position":{"start":{"line":115,"column":20,"offset":3643},"end":{"line":115,"column":39,"offset":3662}}},{"type":"text","value":"EXAMPLES])\nnoise   = tf.random","position":{"start":{"line":115,"column":39,"offset":3662},"end":{"line":116,"column":20,"offset":3692}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"normal(shape=[NUM","position":{"start":{"line":116,"column":21,"offset":3693},"end":{"line":116,"column":38,"offset":3710}}}],"position":{"start":{"line":116,"column":20,"offset":3692},"end":{"line":116,"column":39,"offset":3711}}},{"type":"text","value":"EXAMPLES])\noutputs = inputs * TRUE","position":{"start":{"line":116,"column":39,"offset":3711},"end":{"line":117,"column":24,"offset":3745}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"W + TRUE","position":{"start":{"line":117,"column":25,"offset":3746},"end":{"line":117,"column":33,"offset":3754}}}],"position":{"start":{"line":117,"column":24,"offset":3745},"end":{"line":117,"column":34,"offset":3755}}},{"type":"text","value":"b + noise","position":{"start":{"line":117,"column":34,"offset":3755},"end":{"line":117,"column":43,"offset":3764}}}],"position":{"start":{"line":115,"column":1,"offset":3624},"end":{"line":117,"column":43,"offset":3764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Before we train the model let's visualize where the model stands right now. We'll plot the model's predictions in red and the training data in blue.\"\"\"","position":{"start":{"line":119,"column":1,"offset":3766},"end":{"line":119,"column":155,"offset":3920}}}],"position":{"start":{"line":119,"column":1,"offset":3766},"end":{"line":119,"column":155,"offset":3920}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import matplotlib.pyplot as plt","position":{"start":{"line":121,"column":1,"offset":3922},"end":{"line":121,"column":32,"offset":3953}}}],"position":{"start":{"line":121,"column":1,"offset":3922},"end":{"line":121,"column":32,"offset":3953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.scatter(inputs, outputs, c='b')\nplt.scatter(inputs, model(inputs), c='r')\nplt.show()","position":{"start":{"line":123,"column":1,"offset":3955},"end":{"line":125,"column":11,"offset":4043}}}],"position":{"start":{"line":123,"column":1,"offset":3955},"end":{"line":125,"column":11,"offset":4043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print('Current loss: '),\nprint(loss(model(inputs), outputs).numpy())","position":{"start":{"line":127,"column":1,"offset":4045},"end":{"line":128,"column":44,"offset":4113}}}],"position":{"start":{"line":127,"column":1,"offset":4045},"end":{"line":128,"column":44,"offset":4113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"### Define a training loop","position":{"start":{"line":130,"column":1,"offset":4115},"end":{"line":130,"column":30,"offset":4144}}}],"position":{"start":{"line":130,"column":1,"offset":4115},"end":{"line":130,"column":30,"offset":4144}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We now have our network and our training data. Let's train it, i.e., use the training data to update the model's variables (","position":{"start":{"line":132,"column":1,"offset":4146},"end":{"line":132,"column":125,"offset":4270}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":132,"column":125,"offset":4270},"end":{"line":132,"column":128,"offset":4273}}},{"type":"text","value":" and ","position":{"start":{"line":132,"column":128,"offset":4273},"end":{"line":132,"column":133,"offset":4278}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":132,"column":133,"offset":4278},"end":{"line":132,"column":136,"offset":4281}}},{"type":"text","value":") so that the loss goes down using ","position":{"start":{"line":132,"column":136,"offset":4281},"end":{"line":132,"column":171,"offset":4316}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Gradient_descent","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"gradient descent","position":{"start":{"line":132,"column":172,"offset":4317},"end":{"line":132,"column":188,"offset":4333}}}],"position":{"start":{"line":132,"column":171,"offset":4316},"end":{"line":132,"column":237,"offset":4382}}},{"type":"text","value":". There are many variants of the gradient descent scheme that are captured in ","position":{"start":{"line":132,"column":237,"offset":4382},"end":{"line":132,"column":315,"offset":4460}}},{"type":"raw","value":"<code class=\"language-text\">tf.train.Optimizer</code>","position":{"start":{"line":132,"column":315,"offset":4460},"end":{"line":132,"column":335,"offset":4480}}},{"type":"text","value":" implementations. We'd highly recommend using those implementations, but in the spirit of building from first principles, in this particular example we will implement the basic math ourselves.\n\"\"\"","position":{"start":{"line":132,"column":335,"offset":4480},"end":{"line":133,"column":4,"offset":4676}}}],"position":{"start":{"line":132,"column":1,"offset":4146},"end":{"line":133,"column":4,"offset":4676}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def train(model, inputs, outputs, learning","position":{"start":{"line":135,"column":1,"offset":4678},"end":{"line":135,"column":43,"offset":4720}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate):\nwith tf.GradientTape() as t:\ncurrent","position":{"start":{"line":135,"column":44,"offset":4721},"end":{"line":137,"column":12,"offset":4770}}}],"position":{"start":{"line":135,"column":43,"offset":4720},"end":{"line":137,"column":13,"offset":4771}}},{"type":"text","value":"loss = loss(model(inputs), outputs)\ndW, db = t.gradient(current","position":{"start":{"line":137,"column":13,"offset":4771},"end":{"line":138,"column":30,"offset":4836}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"loss, ","position":{"start":{"line":138,"column":31,"offset":4837},"end":{"line":138,"column":37,"offset":4843}}},{"type":"text","value":"[model.W, model.b]","position":{"start":{"line":138,"column":38,"offset":4844},"end":{"line":138,"column":54,"offset":4860}}},{"type":"text","value":")\nmodel.W.assign","position":{"start":{"line":138,"column":55,"offset":4861},"end":{"line":139,"column":17,"offset":4879}}}],"position":{"start":{"line":138,"column":30,"offset":4836},"end":{"line":139,"column":18,"offset":4880}}},{"type":"text","value":"sub(learning","position":{"start":{"line":139,"column":18,"offset":4880},"end":{"line":139,"column":30,"offset":4892}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate * dW)\nmodel.b.assign","position":{"start":{"line":139,"column":31,"offset":4893},"end":{"line":140,"column":17,"offset":4920}}}],"position":{"start":{"line":139,"column":30,"offset":4892},"end":{"line":140,"column":18,"offset":4921}}},{"type":"text","value":"sub(learning_rate * db)","position":{"start":{"line":140,"column":18,"offset":4921},"end":{"line":140,"column":41,"offset":4944}}}],"position":{"start":{"line":135,"column":1,"offset":4678},"end":{"line":140,"column":41,"offset":4944}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"Finally, let's repeatedly run through the training data and see how ","position":{"start":{"line":142,"column":1,"offset":4946},"end":{"line":142,"column":72,"offset":5017}}},{"type":"raw","value":"<code class=\"language-text\">W</code>","position":{"start":{"line":142,"column":72,"offset":5017},"end":{"line":142,"column":75,"offset":5020}}},{"type":"text","value":" and ","position":{"start":{"line":142,"column":75,"offset":5020},"end":{"line":142,"column":80,"offset":5025}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":142,"column":80,"offset":5025},"end":{"line":142,"column":83,"offset":5028}}},{"type":"text","value":" evolve.\"\"\"","position":{"start":{"line":142,"column":83,"offset":5028},"end":{"line":142,"column":94,"offset":5039}}}],"position":{"start":{"line":142,"column":1,"offset":4946},"end":{"line":142,"column":94,"offset":5039}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model = Model()","position":{"start":{"line":144,"column":1,"offset":5041},"end":{"line":144,"column":16,"offset":5056}}}],"position":{"start":{"line":144,"column":1,"offset":5041},"end":{"line":144,"column":16,"offset":5056}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"collect-the-history-of-w-values-and-b-values-to-plot-later"},"children":[{"type":"element","tagName":"a","properties":{"href":"#collect-the-history-of-w-values-and-b-values-to-plot-later","aria-label":"collect the history of w values and b values to plot later permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Collect the history of W-values and b-values to plot later","position":{"start":{"line":146,"column":3,"offset":5060},"end":{"line":146,"column":61,"offset":5118}}}],"position":{"start":{"line":146,"column":1,"offset":5058},"end":{"line":146,"column":61,"offset":5118}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ws, bs = [], []\nepochs = range(10)\nfor epoch in epochs:\nWs.append(model.W.numpy())\nbs.append(model.b.numpy())\ncurrent_loss = loss(model(inputs), outputs)","position":{"start":{"line":147,"column":1,"offset":5119},"end":{"line":152,"column":46,"offset":5278}}}],"position":{"start":{"line":147,"column":1,"offset":5119},"end":{"line":152,"column":46,"offset":5278}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  train(model, inputs, outputs, learning","position":{"start":{"line":154,"column":1,"offset":5280},"end":{"line":154,"column":41,"offset":5320}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rate=0.1)\nprint('Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f' %\n(epoch, Ws","position":{"start":{"line":154,"column":42,"offset":5321},"end":{"line":156,"column":19,"offset":5400}}},{"type":"text","value":"[-1]","position":{"start":{"line":156,"column":20,"offset":5401},"end":{"line":156,"column":22,"offset":5403}}},{"type":"text","value":", bs","position":{"start":{"line":156,"column":23,"offset":5404},"end":{"line":156,"column":27,"offset":5408}}},{"type":"text","value":"[-1]","position":{"start":{"line":156,"column":28,"offset":5409},"end":{"line":156,"column":30,"offset":5411}}},{"type":"text","value":", current","position":{"start":{"line":156,"column":31,"offset":5412},"end":{"line":156,"column":40,"offset":5421}}}],"position":{"start":{"line":154,"column":41,"offset":5320},"end":{"line":156,"column":41,"offset":5422}}},{"type":"text","value":"loss))","position":{"start":{"line":156,"column":41,"offset":5422},"end":{"line":156,"column":47,"offset":5428}}}],"position":{"start":{"line":154,"column":1,"offset":5280},"end":{"line":156,"column":47,"offset":5428}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"lets-plot-it-all"},"children":[{"type":"element","tagName":"a","properties":{"href":"#lets-plot-it-all","aria-label":"lets plot it all permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Let's plot it all","position":{"start":{"line":158,"column":3,"offset":5432},"end":{"line":158,"column":20,"offset":5449}}}],"position":{"start":{"line":158,"column":1,"offset":5430},"end":{"line":158,"column":20,"offset":5449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"plt.plot(epochs, Ws, 'r',\nepochs, bs, 'b')\nplt.plot(","position":{"start":{"line":159,"column":1,"offset":5450},"end":{"line":161,"column":10,"offset":5511}}},{"type":"text","value":"[TRUE_W]","position":{"start":{"line":161,"column":11,"offset":5512},"end":{"line":161,"column":17,"offset":5518}}},{"type":"text","value":" * len(epochs), 'r--',\n","position":{"start":{"line":161,"column":18,"offset":5519},"end":{"line":162,"column":10,"offset":5551}}},{"type":"text","value":"[TRUE_b]","position":{"start":{"line":162,"column":11,"offset":5552},"end":{"line":162,"column":17,"offset":5558}}},{"type":"text","value":" * len(epochs), 'b--')\nplt.legend(","position":{"start":{"line":162,"column":18,"offset":5559},"end":{"line":163,"column":12,"offset":5593}}},{"type":"text","value":"['W', 'b', 'true W', 'true_b']","position":{"start":{"line":163,"column":13,"offset":5594},"end":{"line":163,"column":41,"offset":5622}}},{"type":"text","value":")\nplt.show()","position":{"start":{"line":163,"column":42,"offset":5623},"end":{"line":164,"column":11,"offset":5635}}}],"position":{"start":{"line":159,"column":1,"offset":5450},"end":{"line":164,"column":11,"offset":5635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"## Next Steps","position":{"start":{"line":166,"column":1,"offset":5637},"end":{"line":166,"column":17,"offset":5653}}}],"position":{"start":{"line":166,"column":1,"offset":5637},"end":{"line":166,"column":17,"offset":5653}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this tutorial we covered ","position":{"start":{"line":168,"column":1,"offset":5655},"end":{"line":168,"column":29,"offset":5683}}},{"type":"raw","value":"<code class=\"language-text\">Variable</code>","position":{"start":{"line":168,"column":29,"offset":5683},"end":{"line":168,"column":39,"offset":5693}}},{"type":"text","value":"s and built and trained a simple linear model using the TensorFlow primitives discussed so far.","position":{"start":{"line":168,"column":39,"offset":5693},"end":{"line":168,"column":134,"offset":5788}}}],"position":{"start":{"line":168,"column":1,"offset":5655},"end":{"line":168,"column":134,"offset":5788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In theory, this is pretty much all you need to use TensorFlow for your machine learning research.\nIn practice, particularly for neural networks, the higher level APIs like ","position":{"start":{"line":170,"column":1,"offset":5790},"end":{"line":171,"column":75,"offset":5962}}},{"type":"raw","value":"<code class=\"language-text\">tf.keras</code>","position":{"start":{"line":171,"column":75,"offset":5962},"end":{"line":171,"column":85,"offset":5972}}},{"type":"text","value":" will be much more convenient since it provides higher level building blocks (called \"layers\"), utilities to save and restore state, a suite of loss functions, a suite of optimization strategies etc.\n\"\"\"","position":{"start":{"line":171,"column":85,"offset":5972},"end":{"line":172,"column":4,"offset":6175}}}],"position":{"start":{"line":170,"column":1,"offset":5790},"end":{"line":172,"column":4,"offset":6175}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":174,"column":1,"offset":6177},"end":{"line":178,"column":1,"offset":6184}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":178,"column":1,"offset":6184}}}}