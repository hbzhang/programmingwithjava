{"expireTime":9007200814929304000,"key":"transformer-remark-markdown-html-aa47563500291cbe780d6980239804e9-gatsby-remark-imagesgatsby-remark-snippetsgatsby-remark-autolink-headersgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-external-links-","val":"<h1 id=\"tensorflow-api-documents-in-details-about-the-api-of-tensorflow\"><a href=\"#tensorflow-api-documents-in-details-about-the-api-of-tensorflow\" aria-label=\"tensorflow api documents in details about the api of tensorflow permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tensorflow API documents in details about the API of tensorflow</h1>\n<p><a href=\"https://www.tensorflow.org/api_docs/python/tf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.tensorflow.org/api_docs/python/tf</a></p>\n<h2 id=\"tensorflow-operation-op\"><a href=\"#tensorflow-operation-op\" aria-label=\"tensorflow operation op permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tensorflow operation (OP)</h2>\n<p>An Operation is a node in a TensorFlow Graph that takes zero or more Tensor objects as input,\nand produces zero or more Tensor objects as output. </p>\n<p>Objects of type Operation are created by calling a Python op constructor (such as tf.matmul) or tf.Graph.create_op.</p>\n<p>Do you know that you can create a new op in tensorflow?   (follow this link to know how!)</p>\n<p><a href=\"https://www.tensorflow.org/guide/extend/op\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.tensorflow.org/guide/extend/op</a></p>\n<p>You can use your own customized OP like the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import tensorflow as tf\n\nclass ZeroOutTest(tf.test.TestCase):\n  def testZeroOut(self):\n    zero_out_module = tf.load_op_library(&#39;./zero_out.so&#39;)\n    with self.test_session():\n      result = zero_out_module.zero_out([5, 4, 3, 2, 1])\n      self.assertAllEqual(result.eval(), [5, 0, 0, 0, 0])\n\nif __name__ == &quot;__main__&quot;:\n  tf.test.main()</code></pre></div>\n<h2 id=\"differences-between-variable-and-placeholder\"><a href=\"#differences-between-variable-and-placeholder\" aria-label=\"differences between variable and placeholder permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Differences between variable and placeholder</h2>\n<p>tf.variable often is used to represent weight and bias of neural network training</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">weights = tf.Variable(\n    tf.truncated_normal([IMAGE_PIXELS, hidden1_units],\n                    stddev=1.0 / math.sqrt(float(IMAGE_PIXELS))), name=&#39;weights&#39;)\n biases = tf.Variable(tf.zeros([hidden1_units]), name=&#39;biases&#39;)\n </code></pre></div>\n<p>tf.placeholder is used to hold the training data</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">images_placeholder = tf.placeholder(tf.float32, shape=(batch_size, IMAGE_PIXELS))\nlabels_placeholder = tf.placeholder(tf.int32, shape=(batch_size))</code></pre></div>\n<h2 id=\"why-do-we-need-tfname_scope\"><a href=\"#why-do-we-need-tfname_scope\" aria-label=\"why do we need tfname_scope permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why do we need tf.name_scope()</h2>\n<p>used to group some variables together in an op. It is like a variable holding place.</p>\n<p>It tells you how many variables used within an operation.</p>\n<p>Mostly, the nam_scop() is just used to declare the existence of the variables.</p>\n<p>Example: </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> with tf.name_scope(&#39;biases&#39;):\n        biases = {\n            &#39;bc1&#39;: tf.Variable(tf.random_normal([32])),\n            &#39;bc2&#39;: tf.Variable(tf.random_normal([64])),\n            &#39;bc3&#39;: tf.Variable(tf.random_normal([128])),\n            &#39;bc4&#39;: tf.Variable(tf.random_normal([256])),\n            &#39;bd1&#39;: tf.Variable(tf.random_normal([1024])),\n            &#39;out&#39;: tf.Variable(tf.random_normal([NUM_CLASSES]))\n        }</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">def my_op(a, b, c, name=None):\n  with tf.name_scope(name, &quot;MyOp&quot;, [a, b, c]) as scope:\n    a = tf.convert_to_tensor(a, name=&quot;a&quot;)\n    b = tf.convert_to_tensor(b, name=&quot;b&quot;)\n    c = tf.convert_to_tensor(c, name=&quot;c&quot;)\n    # Define some computation that uses `a`, `b`, and `c`.\n    return foo_op(..., name=scope)</code></pre></div>\n<h3 id=\"why-we-need-tfvariable_scope\"><a href=\"#why-we-need-tfvariable_scope\" aria-label=\"why we need tfvariable_scope permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why we need tf.variable_scope()</h3>\n<p>Mostly used for condition of reuse of variables. If we want to reuse variables, we want to put the variables in variable_scope.</p>\n<p>For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">with tf.variable_scope(&quot;scope&quot;):\n      var1 = tf.get_variable(&quot;variable1&quot;,[1])\n      tf.get_variable_scope().reuse_variables()\n      var2=tf.get_variable(&quot;variable1&quot;,[1])\nassert var1 == var2</code></pre></div>"}